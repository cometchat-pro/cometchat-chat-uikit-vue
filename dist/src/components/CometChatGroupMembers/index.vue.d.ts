import { CometChat } from "@cometchat/chat-sdk-javascript";
import { GroupMembersStyle, ConversationUtils, GroupMemberUtils, ListStyle } from "@cometchat/uikit-shared";
import { AvatarStyle, ChangeScopeStyle, ListItemStyle } from "@cometchat/uikit-elements";
import { TitleAlignment, States, CometChatOption, SelectionMode, UserPresencePlacement } from "@cometchat/uikit-resources";
import { Ref, PropType, CSSProperties } from "vue";
declare const _sfc_main: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    title: {
        type: StringConstructor;
        default: () => any;
    };
    titleAlignment: {
        type: PropType<TitleAlignment>;
        default: () => TitleAlignment;
    };
    searchPlaceholder: {
        type: StringConstructor;
        default: () => any;
    };
    subtitleView: {
        type: PropType<(groupMember: CometChat.GroupMember) => ViewType>;
    };
    tailView: {
        type: PropType<(groupMember: CometChat.GroupMember) => ViewType>;
    };
    listItemView: {
        type: PropType<(groupMember: CometChat.GroupMember) => ViewType>;
    };
    menus: {
        type: PropType<ViewType>;
    };
    options: {
        type: PropType<(group: CometChat.Group, groupMember: CometChat.GroupMember) => CometChatOption[]>;
    };
    groupMembersRequestBuilder: {
        type: PropType<import("@cometchat/chat-sdk-javascript").GroupMembersRequestBuilder>;
    };
    searchRequestBuilder: {
        type: PropType<import("@cometchat/chat-sdk-javascript").GroupMembersRequestBuilder>;
    };
    disableUsersPresence: {
        type: BooleanConstructor;
    };
    group: {
        type: PropType<import("@cometchat/chat-sdk-javascript").Group>;
        required: true;
    };
    hideSeparator: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBackButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    selectionMode: {
        type: PropType<SelectionMode>;
        default: () => SelectionMode;
    };
    onSelect: {
        type: PropType<(groupMember: CometChat.GroupMember, selected: boolean) => void>;
    };
    searchIconURL: {
        type: StringConstructor;
        default: string;
    };
    backButtonIconURL: {
        type: StringConstructor;
        default: string;
    };
    closeButtonIconURL: {
        type: StringConstructor;
        default: string;
    };
    dropdownIconURL: {
        type: StringConstructor;
        default: string;
    };
    hideSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideError: {
        type: BooleanConstructor;
        default: boolean;
    };
    emptyStateView: {
        type: PropType<ViewType>;
    };
    errorStateText: {
        type: StringConstructor;
        default: () => any;
    };
    emptyStateText: {
        type: StringConstructor;
        default: () => any;
    };
    onItemClick: {
        type: PropType<(groupMember: CometChat.GroupMember) => void>;
    };
    onError: {
        type: PropType<(error: CometChat.CometChatException) => void>;
    };
    onBack: {
        type: PropType<() => void>;
    };
    onClose: {
        type: PropType<() => void>;
    };
    avatarStyle: {
        type: PropType<AvatarStyle>;
        default: () => AvatarStyle;
    };
    groupMembersStyle: {
        type: PropType<GroupMembersStyle>;
        default: () => GroupMembersStyle;
    };
    statusIndicatorStyle: {
        type: PropType<CSSProperties>;
        default: () => CSSProperties;
    };
    listItemStyle: {
        type: PropType<ListItemStyle>;
        default: () => ListItemStyle;
    };
    groupScopeStyle: {
        type: PropType<ChangeScopeStyle>;
        default: () => ChangeScopeStyle;
    };
    loadingIconURL: {
        type: StringConstructor;
        default: string;
    };
    loadingStateView: {
        type: PropType<ViewType>;
    };
    errorStateView: {
        type: PropType<ViewType>;
    };
    userPresencePlacement: {
        type: PropType<UserPresencePlacement>;
        default: UserPresencePlacement;
    };
    searchKeyword: {
        type: StringConstructor;
        default: any;
    };
    onEmpty: {
        type: PropType<() => void>;
    };
    disableLoadingState: {
        type: BooleanConstructor;
        default: boolean;
    };
}>, {
    GroupMembers: Ref<import("@cometchat/chat-sdk-javascript").GroupMember[], import("@cometchat/chat-sdk-javascript").GroupMember[]>;
    wrapperStyle: any;
    membersStyle: () => {
        padding: any;
    };
    ConversationUtils: typeof ConversationUtils;
    GroupMemberUtils: typeof GroupMemberUtils;
    handleMenuAction: (menu: any, groupMember: CometChat.GroupMember) => void;
    closeButtonStyle: () => {
        height: string;
        width: string;
        border: string;
        borderRadius: string;
        background: string;
        buttonIconTint: string;
    };
    closeClicked: () => void;
    backClicked: () => void;
    changeScope: Ref<boolean, boolean>;
    memberScope: Ref<string[], string[]>;
    changeMemberScope: (event: any) => void;
    SelectionMode: typeof SelectionMode;
    getOptions: (member: CometChat.GroupMember) => string | CometChatOption[];
    backButtonStyle: () => {
        height: string;
        width: string;
        border: string;
        borderRadius: string;
        background: string;
        buttonIconTint: string;
    };
    MoreIcon: string;
    mylistItemStyle: Ref<{
        activeBackground?: string;
        hoverBackground?: string;
        separatorColor?: string;
        titleFont?: string;
        titleColor?: string;
        padding?: string;
        height?: string;
        width?: string;
        border?: string;
        borderRadius?: string;
        background?: string;
    }, ListItemStyle | {
        activeBackground?: string;
        hoverBackground?: string;
        separatorColor?: string;
        titleFont?: string;
        titleColor?: string;
        padding?: string;
        height?: string;
        width?: string;
        border?: string;
        borderRadius?: string;
        background?: string;
    }>;
    myavatarStyle: Ref<{
        borderRadius?: string;
        width?: string;
        height?: string;
        border?: string;
        nameTextColor?: string;
        backgroundSize?: string;
        nameTextFont?: string;
        outerViewBorderWidth?: string;
        outerViewBorderSpacing?: string;
        outerViewBorderRadius?: string;
        outerViewBorderColor?: string;
        backgroundColor?: string;
    }, AvatarStyle | {
        borderRadius?: string;
        width?: string;
        height?: string;
        border?: string;
        nameTextColor?: string;
        backgroundSize?: string;
        nameTextFont?: string;
        outerViewBorderWidth?: string;
        outerViewBorderSpacing?: string;
        outerViewBorderRadius?: string;
        outerViewBorderColor?: string;
        backgroundColor?: string;
    }>;
    menuListStyle: any;
    mystatusIndicatorStyle: Ref<{
        [x: `--${string}`]: string | number;
        accentColor?: import("csstype").Property.AccentColor;
        alignContent?: import("csstype").Property.AlignContent;
        alignItems?: import("csstype").Property.AlignItems;
        alignSelf?: import("csstype").Property.AlignSelf;
        alignTracks?: import("csstype").Property.AlignTracks;
        animationComposition?: import("csstype").Property.AnimationComposition;
        animationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        animationDirection?: import("csstype").Property.AnimationDirection;
        animationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        animationFillMode?: import("csstype").Property.AnimationFillMode;
        animationIterationCount?: import("csstype").Property.AnimationIterationCount;
        animationName?: import("csstype").Property.AnimationName;
        animationPlayState?: import("csstype").Property.AnimationPlayState;
        animationRangeEnd?: import("csstype").Property.AnimationRangeEnd<string | number>;
        animationRangeStart?: import("csstype").Property.AnimationRangeStart<string | number>;
        animationTimeline?: import("csstype").Property.AnimationTimeline;
        animationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        appearance?: import("csstype").Property.Appearance;
        aspectRatio?: import("csstype").Property.AspectRatio;
        backdropFilter?: import("csstype").Property.BackdropFilter;
        backfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        backgroundAttachment?: import("csstype").Property.BackgroundAttachment;
        backgroundBlendMode?: import("csstype").Property.BackgroundBlendMode;
        backgroundClip?: import("csstype").Property.BackgroundClip;
        backgroundColor?: import("csstype").Property.BackgroundColor;
        backgroundImage?: import("csstype").Property.BackgroundImage;
        backgroundOrigin?: import("csstype").Property.BackgroundOrigin;
        backgroundPositionX?: import("csstype").Property.BackgroundPositionX<string | number>;
        backgroundPositionY?: import("csstype").Property.BackgroundPositionY<string | number>;
        backgroundRepeat?: import("csstype").Property.BackgroundRepeat;
        backgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        blockOverflow?: import("csstype").Property.BlockOverflow;
        blockSize?: import("csstype").Property.BlockSize<string | number>;
        borderBlockColor?: import("csstype").Property.BorderBlockColor;
        borderBlockEndColor?: import("csstype").Property.BorderBlockEndColor;
        borderBlockEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockEndWidth?: import("csstype").Property.BorderBlockEndWidth<string | number>;
        borderBlockStartColor?: import("csstype").Property.BorderBlockStartColor;
        borderBlockStartStyle?: import("csstype").Property.BorderBlockStartStyle;
        borderBlockStartWidth?: import("csstype").Property.BorderBlockStartWidth<string | number>;
        borderBlockStyle?: import("csstype").Property.BorderBlockStyle;
        borderBlockWidth?: import("csstype").Property.BorderBlockWidth<string | number>;
        borderBottomColor?: import("csstype").Property.BorderBottomColor;
        borderBottomLeftRadius?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        borderBottomRightRadius?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        borderBottomStyle?: import("csstype").Property.BorderBottomStyle;
        borderBottomWidth?: import("csstype").Property.BorderBottomWidth<string | number>;
        borderCollapse?: import("csstype").Property.BorderCollapse;
        borderEndEndRadius?: import("csstype").Property.BorderEndEndRadius<string | number>;
        borderEndStartRadius?: import("csstype").Property.BorderEndStartRadius<string | number>;
        borderImageOutset?: import("csstype").Property.BorderImageOutset<string | number>;
        borderImageRepeat?: import("csstype").Property.BorderImageRepeat;
        borderImageSlice?: import("csstype").Property.BorderImageSlice;
        borderImageSource?: import("csstype").Property.BorderImageSource;
        borderImageWidth?: import("csstype").Property.BorderImageWidth<string | number>;
        borderInlineColor?: import("csstype").Property.BorderInlineColor;
        borderInlineEndColor?: import("csstype").Property.BorderInlineEndColor;
        borderInlineEndStyle?: import("csstype").Property.BorderInlineEndStyle;
        borderInlineEndWidth?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        borderInlineStartColor?: import("csstype").Property.BorderInlineStartColor;
        borderInlineStartStyle?: import("csstype").Property.BorderInlineStartStyle;
        borderInlineStartWidth?: import("csstype").Property.BorderInlineStartWidth<string | number>;
        borderInlineStyle?: import("csstype").Property.BorderInlineStyle;
        borderInlineWidth?: import("csstype").Property.BorderInlineWidth<string | number>;
        borderLeftColor?: import("csstype").Property.BorderLeftColor;
        borderLeftStyle?: import("csstype").Property.BorderLeftStyle;
        borderLeftWidth?: import("csstype").Property.BorderLeftWidth<string | number>;
        borderRightColor?: import("csstype").Property.BorderRightColor;
        borderRightStyle?: import("csstype").Property.BorderRightStyle;
        borderRightWidth?: import("csstype").Property.BorderRightWidth<string | number>;
        borderSpacing?: import("csstype").Property.BorderSpacing<string | number>;
        borderStartEndRadius?: import("csstype").Property.BorderStartEndRadius<string | number>;
        borderStartStartRadius?: import("csstype").Property.BorderStartStartRadius<string | number>;
        borderTopColor?: import("csstype").Property.BorderTopColor;
        borderTopLeftRadius?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        borderTopRightRadius?: import("csstype").Property.BorderTopRightRadius<string | number>;
        borderTopStyle?: import("csstype").Property.BorderTopStyle;
        borderTopWidth?: import("csstype").Property.BorderTopWidth<string | number>;
        bottom?: import("csstype").Property.Bottom<string | number>;
        boxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        boxShadow?: import("csstype").Property.BoxShadow;
        boxSizing?: import("csstype").Property.BoxSizing;
        breakAfter?: import("csstype").Property.BreakAfter;
        breakBefore?: import("csstype").Property.BreakBefore;
        breakInside?: import("csstype").Property.BreakInside;
        captionSide?: import("csstype").Property.CaptionSide;
        caretColor?: import("csstype").Property.CaretColor;
        caretShape?: import("csstype").Property.CaretShape;
        clear?: import("csstype").Property.Clear;
        clipPath?: import("csstype").Property.ClipPath;
        color?: import("csstype").Property.Color;
        colorAdjust?: import("csstype").Property.PrintColorAdjust;
        colorScheme?: import("csstype").Property.ColorScheme;
        columnCount?: import("csstype").Property.ColumnCount;
        columnFill?: import("csstype").Property.ColumnFill;
        columnGap?: import("csstype").Property.ColumnGap<string | number>;
        columnRuleColor?: import("csstype").Property.ColumnRuleColor;
        columnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        columnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number>;
        columnSpan?: import("csstype").Property.ColumnSpan;
        columnWidth?: import("csstype").Property.ColumnWidth<string | number>;
        contain?: import("csstype").Property.Contain;
        containIntrinsicBlockSize?: import("csstype").Property.ContainIntrinsicBlockSize<string | number>;
        containIntrinsicHeight?: import("csstype").Property.ContainIntrinsicHeight<string | number>;
        containIntrinsicInlineSize?: import("csstype").Property.ContainIntrinsicInlineSize<string | number>;
        containIntrinsicWidth?: import("csstype").Property.ContainIntrinsicWidth<string | number>;
        containerName?: import("csstype").Property.ContainerName;
        containerType?: import("csstype").Property.ContainerType;
        content?: import("csstype").Property.Content;
        contentVisibility?: import("csstype").Property.ContentVisibility;
        counterIncrement?: import("csstype").Property.CounterIncrement;
        counterReset?: import("csstype").Property.CounterReset;
        counterSet?: import("csstype").Property.CounterSet;
        cursor?: import("csstype").Property.Cursor;
        direction?: import("csstype").Property.Direction;
        display?: import("csstype").Property.Display;
        emptyCells?: import("csstype").Property.EmptyCells;
        filter?: import("csstype").Property.Filter;
        flexBasis?: import("csstype").Property.FlexBasis<string | number>;
        flexDirection?: import("csstype").Property.FlexDirection;
        flexGrow?: import("csstype").Property.FlexGrow;
        flexShrink?: import("csstype").Property.FlexShrink;
        flexWrap?: import("csstype").Property.FlexWrap;
        float?: import("csstype").Property.Float;
        fontFamily?: import("csstype").Property.FontFamily;
        fontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        fontKerning?: import("csstype").Property.FontKerning;
        fontLanguageOverride?: import("csstype").Property.FontLanguageOverride;
        fontOpticalSizing?: import("csstype").Property.FontOpticalSizing;
        fontPalette?: import("csstype").Property.FontPalette;
        fontSize?: import("csstype").Property.FontSize<string | number>;
        fontSizeAdjust?: import("csstype").Property.FontSizeAdjust;
        fontSmooth?: import("csstype").Property.FontSmooth<string | number>;
        fontStretch?: import("csstype").Property.FontStretch;
        fontStyle?: import("csstype").Property.FontStyle;
        fontSynthesis?: import("csstype").Property.FontSynthesis;
        fontSynthesisPosition?: import("csstype").Property.FontSynthesisPosition;
        fontSynthesisSmallCaps?: import("csstype").Property.FontSynthesisSmallCaps;
        fontSynthesisStyle?: import("csstype").Property.FontSynthesisStyle;
        fontSynthesisWeight?: import("csstype").Property.FontSynthesisWeight;
        fontVariant?: import("csstype").Property.FontVariant;
        fontVariantAlternates?: import("csstype").Property.FontVariantAlternates;
        fontVariantCaps?: import("csstype").Property.FontVariantCaps;
        fontVariantEastAsian?: import("csstype").Property.FontVariantEastAsian;
        fontVariantEmoji?: import("csstype").Property.FontVariantEmoji;
        fontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        fontVariantNumeric?: import("csstype").Property.FontVariantNumeric;
        fontVariantPosition?: import("csstype").Property.FontVariantPosition;
        fontVariationSettings?: import("csstype").Property.FontVariationSettings;
        fontWeight?: import("csstype").Property.FontWeight;
        forcedColorAdjust?: import("csstype").Property.ForcedColorAdjust;
        gridAutoColumns?: import("csstype").Property.GridAutoColumns<string | number>;
        gridAutoFlow?: import("csstype").Property.GridAutoFlow;
        gridAutoRows?: import("csstype").Property.GridAutoRows<string | number>;
        gridColumnEnd?: import("csstype").Property.GridColumnEnd;
        gridColumnStart?: import("csstype").Property.GridColumnStart;
        gridRowEnd?: import("csstype").Property.GridRowEnd;
        gridRowStart?: import("csstype").Property.GridRowStart;
        gridTemplateAreas?: import("csstype").Property.GridTemplateAreas;
        gridTemplateColumns?: import("csstype").Property.GridTemplateColumns<string | number>;
        gridTemplateRows?: import("csstype").Property.GridTemplateRows<string | number>;
        hangingPunctuation?: import("csstype").Property.HangingPunctuation;
        height?: import("csstype").Property.Height<string | number>;
        hyphenateCharacter?: import("csstype").Property.HyphenateCharacter;
        hyphenateLimitChars?: import("csstype").Property.HyphenateLimitChars;
        hyphens?: import("csstype").Property.Hyphens;
        imageOrientation?: import("csstype").Property.ImageOrientation;
        imageRendering?: import("csstype").Property.ImageRendering;
        imageResolution?: import("csstype").Property.ImageResolution;
        initialLetter?: import("csstype").Property.InitialLetter;
        inlineSize?: import("csstype").Property.InlineSize<string | number>;
        inputSecurity?: import("csstype").Property.InputSecurity;
        insetBlockEnd?: import("csstype").Property.InsetBlockEnd<string | number>;
        insetBlockStart?: import("csstype").Property.InsetBlockStart<string | number>;
        insetInlineEnd?: import("csstype").Property.InsetInlineEnd<string | number>;
        insetInlineStart?: import("csstype").Property.InsetInlineStart<string | number>;
        isolation?: import("csstype").Property.Isolation;
        justifyContent?: import("csstype").Property.JustifyContent;
        justifyItems?: import("csstype").Property.JustifyItems;
        justifySelf?: import("csstype").Property.JustifySelf;
        justifyTracks?: import("csstype").Property.JustifyTracks;
        left?: import("csstype").Property.Left<string | number>;
        letterSpacing?: import("csstype").Property.LetterSpacing<string | number>;
        lineBreak?: import("csstype").Property.LineBreak;
        lineHeight?: import("csstype").Property.LineHeight<string | number>;
        lineHeightStep?: import("csstype").Property.LineHeightStep<string | number>;
        listStyleImage?: import("csstype").Property.ListStyleImage;
        listStylePosition?: import("csstype").Property.ListStylePosition;
        listStyleType?: import("csstype").Property.ListStyleType;
        marginBlockEnd?: import("csstype").Property.MarginBlockEnd<string | number>;
        marginBlockStart?: import("csstype").Property.MarginBlockStart<string | number>;
        marginBottom?: import("csstype").Property.MarginBottom<string | number>;
        marginInlineEnd?: import("csstype").Property.MarginInlineEnd<string | number>;
        marginInlineStart?: import("csstype").Property.MarginInlineStart<string | number>;
        marginLeft?: import("csstype").Property.MarginLeft<string | number>;
        marginRight?: import("csstype").Property.MarginRight<string | number>;
        marginTop?: import("csstype").Property.MarginTop<string | number>;
        marginTrim?: import("csstype").Property.MarginTrim;
        maskBorderMode?: import("csstype").Property.MaskBorderMode;
        maskBorderOutset?: import("csstype").Property.MaskBorderOutset<string | number>;
        maskBorderRepeat?: import("csstype").Property.MaskBorderRepeat;
        maskBorderSlice?: import("csstype").Property.MaskBorderSlice;
        maskBorderSource?: import("csstype").Property.MaskBorderSource;
        maskBorderWidth?: import("csstype").Property.MaskBorderWidth<string | number>;
        maskClip?: import("csstype").Property.MaskClip;
        maskComposite?: import("csstype").Property.MaskComposite;
        maskImage?: import("csstype").Property.MaskImage;
        maskMode?: import("csstype").Property.MaskMode;
        maskOrigin?: import("csstype").Property.MaskOrigin;
        maskPosition?: import("csstype").Property.MaskPosition<string | number>;
        maskRepeat?: import("csstype").Property.MaskRepeat;
        maskSize?: import("csstype").Property.MaskSize<string | number>;
        maskType?: import("csstype").Property.MaskType;
        masonryAutoFlow?: import("csstype").Property.MasonryAutoFlow;
        mathDepth?: import("csstype").Property.MathDepth;
        mathShift?: import("csstype").Property.MathShift;
        mathStyle?: import("csstype").Property.MathStyle;
        maxBlockSize?: import("csstype").Property.MaxBlockSize<string | number>;
        maxHeight?: import("csstype").Property.MaxHeight<string | number>;
        maxInlineSize?: import("csstype").Property.MaxInlineSize<string | number>;
        maxLines?: import("csstype").Property.MaxLines;
        maxWidth?: import("csstype").Property.MaxWidth<string | number>;
        minBlockSize?: import("csstype").Property.MinBlockSize<string | number>;
        minHeight?: import("csstype").Property.MinHeight<string | number>;
        minInlineSize?: import("csstype").Property.MinInlineSize<string | number>;
        minWidth?: import("csstype").Property.MinWidth<string | number>;
        mixBlendMode?: import("csstype").Property.MixBlendMode;
        motionDistance?: import("csstype").Property.OffsetDistance<string | number>;
        motionPath?: import("csstype").Property.OffsetPath;
        motionRotation?: import("csstype").Property.OffsetRotate;
        objectFit?: import("csstype").Property.ObjectFit;
        objectPosition?: import("csstype").Property.ObjectPosition<string | number>;
        offsetAnchor?: import("csstype").Property.OffsetAnchor<string | number>;
        offsetDistance?: import("csstype").Property.OffsetDistance<string | number>;
        offsetPath?: import("csstype").Property.OffsetPath;
        offsetPosition?: import("csstype").Property.OffsetPosition<string | number>;
        offsetRotate?: import("csstype").Property.OffsetRotate;
        offsetRotation?: import("csstype").Property.OffsetRotate;
        opacity?: import("csstype").Property.Opacity;
        order?: import("csstype").Property.Order;
        orphans?: import("csstype").Property.Orphans;
        outlineColor?: import("csstype").Property.OutlineColor;
        outlineOffset?: import("csstype").Property.OutlineOffset<string | number>;
        outlineStyle?: import("csstype").Property.OutlineStyle;
        outlineWidth?: import("csstype").Property.OutlineWidth<string | number>;
        overflowAnchor?: import("csstype").Property.OverflowAnchor;
        overflowBlock?: import("csstype").Property.OverflowBlock;
        overflowClipBox?: import("csstype").Property.OverflowClipBox;
        overflowClipMargin?: import("csstype").Property.OverflowClipMargin<string | number>;
        overflowInline?: import("csstype").Property.OverflowInline;
        overflowWrap?: import("csstype").Property.OverflowWrap;
        overflowX?: import("csstype").Property.OverflowX;
        overflowY?: import("csstype").Property.OverflowY;
        overlay?: import("csstype").Property.Overlay;
        overscrollBehaviorBlock?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorInline?: import("csstype").Property.OverscrollBehaviorInline;
        overscrollBehaviorX?: import("csstype").Property.OverscrollBehaviorX;
        overscrollBehaviorY?: import("csstype").Property.OverscrollBehaviorY;
        paddingBlockEnd?: import("csstype").Property.PaddingBlockEnd<string | number>;
        paddingBlockStart?: import("csstype").Property.PaddingBlockStart<string | number>;
        paddingBottom?: import("csstype").Property.PaddingBottom<string | number>;
        paddingInlineEnd?: import("csstype").Property.PaddingInlineEnd<string | number>;
        paddingInlineStart?: import("csstype").Property.PaddingInlineStart<string | number>;
        paddingLeft?: import("csstype").Property.PaddingLeft<string | number>;
        paddingRight?: import("csstype").Property.PaddingRight<string | number>;
        paddingTop?: import("csstype").Property.PaddingTop<string | number>;
        page?: import("csstype").Property.Page;
        pageBreakAfter?: import("csstype").Property.PageBreakAfter;
        pageBreakBefore?: import("csstype").Property.PageBreakBefore;
        pageBreakInside?: import("csstype").Property.PageBreakInside;
        paintOrder?: import("csstype").Property.PaintOrder;
        perspective?: import("csstype").Property.Perspective<string | number>;
        perspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number>;
        pointerEvents?: import("csstype").Property.PointerEvents;
        position?: import("csstype").Property.Position;
        printColorAdjust?: import("csstype").Property.PrintColorAdjust;
        quotes?: import("csstype").Property.Quotes;
        resize?: import("csstype").Property.Resize;
        right?: import("csstype").Property.Right<string | number>;
        rotate?: import("csstype").Property.Rotate;
        rowGap?: import("csstype").Property.RowGap<string | number>;
        rubyAlign?: import("csstype").Property.RubyAlign;
        rubyMerge?: import("csstype").Property.RubyMerge;
        rubyPosition?: import("csstype").Property.RubyPosition;
        scale?: import("csstype").Property.Scale;
        scrollBehavior?: import("csstype").Property.ScrollBehavior;
        scrollMarginBlockEnd?: import("csstype").Property.ScrollMarginBlockEnd<string | number>;
        scrollMarginBlockStart?: import("csstype").Property.ScrollMarginBlockStart<string | number>;
        scrollMarginBottom?: import("csstype").Property.ScrollMarginBottom<string | number>;
        scrollMarginInlineEnd?: import("csstype").Property.ScrollMarginInlineEnd<string | number>;
        scrollMarginInlineStart?: import("csstype").Property.ScrollMarginInlineStart<string | number>;
        scrollMarginLeft?: import("csstype").Property.ScrollMarginLeft<string | number>;
        scrollMarginRight?: import("csstype").Property.ScrollMarginRight<string | number>;
        scrollMarginTop?: import("csstype").Property.ScrollMarginTop<string | number>;
        scrollPaddingBlockEnd?: import("csstype").Property.ScrollPaddingBlockEnd<string | number>;
        scrollPaddingBlockStart?: import("csstype").Property.ScrollPaddingBlockStart<string | number>;
        scrollPaddingBottom?: import("csstype").Property.ScrollPaddingBottom<string | number>;
        scrollPaddingInlineEnd?: import("csstype").Property.ScrollPaddingInlineEnd<string | number>;
        scrollPaddingInlineStart?: import("csstype").Property.ScrollPaddingInlineStart<string | number>;
        scrollPaddingLeft?: import("csstype").Property.ScrollPaddingLeft<string | number>;
        scrollPaddingRight?: import("csstype").Property.ScrollPaddingRight<string | number>;
        scrollPaddingTop?: import("csstype").Property.ScrollPaddingTop<string | number>;
        scrollSnapAlign?: import("csstype").Property.ScrollSnapAlign;
        scrollSnapMarginBottom?: import("csstype").Property.ScrollMarginBottom<string | number>;
        scrollSnapMarginLeft?: import("csstype").Property.ScrollMarginLeft<string | number>;
        scrollSnapMarginRight?: import("csstype").Property.ScrollMarginRight<string | number>;
        scrollSnapMarginTop?: import("csstype").Property.ScrollMarginTop<string | number>;
        scrollSnapStop?: import("csstype").Property.ScrollSnapStop;
        scrollSnapType?: import("csstype").Property.ScrollSnapType;
        scrollTimelineAxis?: import("csstype").Property.ScrollTimelineAxis;
        scrollTimelineName?: import("csstype").Property.ScrollTimelineName;
        scrollbarColor?: import("csstype").Property.ScrollbarColor;
        scrollbarGutter?: import("csstype").Property.ScrollbarGutter;
        scrollbarWidth?: import("csstype").Property.ScrollbarWidth;
        shapeImageThreshold?: import("csstype").Property.ShapeImageThreshold;
        shapeMargin?: import("csstype").Property.ShapeMargin<string | number>;
        shapeOutside?: import("csstype").Property.ShapeOutside;
        tabSize?: import("csstype").Property.TabSize<string | number>;
        tableLayout?: import("csstype").Property.TableLayout;
        textAlign?: import("csstype").Property.TextAlign;
        textAlignLast?: import("csstype").Property.TextAlignLast;
        textCombineUpright?: import("csstype").Property.TextCombineUpright;
        textDecorationColor?: import("csstype").Property.TextDecorationColor;
        textDecorationLine?: import("csstype").Property.TextDecorationLine;
        textDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        textDecorationSkipInk?: import("csstype").Property.TextDecorationSkipInk;
        textDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        textDecorationThickness?: import("csstype").Property.TextDecorationThickness<string | number>;
        textEmphasisColor?: import("csstype").Property.TextEmphasisColor;
        textEmphasisPosition?: import("csstype").Property.TextEmphasisPosition;
        textEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        textIndent?: import("csstype").Property.TextIndent<string | number>;
        textJustify?: import("csstype").Property.TextJustify;
        textOrientation?: import("csstype").Property.TextOrientation;
        textOverflow?: import("csstype").Property.TextOverflow;
        textRendering?: import("csstype").Property.TextRendering;
        textShadow?: import("csstype").Property.TextShadow;
        textSizeAdjust?: import("csstype").Property.TextSizeAdjust;
        textTransform?: import("csstype").Property.TextTransform;
        textUnderlineOffset?: import("csstype").Property.TextUnderlineOffset<string | number>;
        textUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        textWrap?: import("csstype").Property.TextWrap;
        timelineScope?: import("csstype").Property.TimelineScope;
        top?: import("csstype").Property.Top<string | number>;
        touchAction?: import("csstype").Property.TouchAction;
        transform?: import("csstype").Property.Transform;
        transformBox?: import("csstype").Property.TransformBox;
        transformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        transformStyle?: import("csstype").Property.TransformStyle;
        transitionBehavior?: import("csstype").Property.TransitionBehavior;
        transitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        transitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        transitionProperty?: import("csstype").Property.TransitionProperty;
        transitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        translate?: import("csstype").Property.Translate<string | number>;
        unicodeBidi?: import("csstype").Property.UnicodeBidi;
        userSelect?: import("csstype").Property.UserSelect;
        verticalAlign?: import("csstype").Property.VerticalAlign<string | number>;
        viewTimelineAxis?: import("csstype").Property.ViewTimelineAxis;
        viewTimelineInset?: import("csstype").Property.ViewTimelineInset<string | number>;
        viewTimelineName?: import("csstype").Property.ViewTimelineName;
        viewTransitionName?: import("csstype").Property.ViewTransitionName;
        visibility?: import("csstype").Property.Visibility;
        whiteSpace?: import("csstype").Property.WhiteSpace;
        whiteSpaceCollapse?: import("csstype").Property.WhiteSpaceCollapse;
        whiteSpaceTrim?: import("csstype").Property.WhiteSpaceTrim;
        widows?: import("csstype").Property.Widows;
        width?: import("csstype").Property.Width<string | number>;
        willChange?: import("csstype").Property.WillChange;
        wordBreak?: import("csstype").Property.WordBreak;
        wordSpacing?: import("csstype").Property.WordSpacing<string | number>;
        wordWrap?: import("csstype").Property.WordWrap;
        writingMode?: import("csstype").Property.WritingMode;
        zIndex?: import("csstype").Property.ZIndex;
        zoom?: import("csstype").Property.Zoom;
        all?: import("csstype").Globals;
        animation?: import("csstype").Property.Animation<string & {}>;
        animationRange?: import("csstype").Property.AnimationRange<string | number>;
        background?: import("csstype").Property.Background<string | number>;
        backgroundPosition?: import("csstype").Property.BackgroundPosition<string | number>;
        border?: import("csstype").Property.Border<string | number>;
        borderBlock?: import("csstype").Property.BorderBlock<string | number>;
        borderBlockEnd?: import("csstype").Property.BorderBlockEnd<string | number>;
        borderBlockStart?: import("csstype").Property.BorderBlockStart<string | number>;
        borderBottom?: import("csstype").Property.BorderBottom<string | number>;
        borderColor?: import("csstype").Property.BorderColor;
        borderImage?: import("csstype").Property.BorderImage;
        borderInline?: import("csstype").Property.BorderInline<string | number>;
        borderInlineEnd?: import("csstype").Property.BorderInlineEnd<string | number>;
        borderInlineStart?: import("csstype").Property.BorderInlineStart<string | number>;
        borderLeft?: import("csstype").Property.BorderLeft<string | number>;
        borderRadius?: import("csstype").Property.BorderRadius<string | number>;
        borderRight?: import("csstype").Property.BorderRight<string | number>;
        borderStyle?: import("csstype").Property.BorderStyle;
        borderTop?: import("csstype").Property.BorderTop<string | number>;
        borderWidth?: import("csstype").Property.BorderWidth<string | number>;
        caret?: import("csstype").Property.Caret;
        columnRule?: import("csstype").Property.ColumnRule<string | number>;
        columns?: import("csstype").Property.Columns<string | number>;
        containIntrinsicSize?: import("csstype").Property.ContainIntrinsicSize<string | number>;
        container?: import("csstype").Property.Container;
        flex?: import("csstype").Property.Flex<string | number>;
        flexFlow?: import("csstype").Property.FlexFlow;
        font?: import("csstype").Property.Font;
        gap?: import("csstype").Property.Gap<string | number>;
        grid?: import("csstype").Property.Grid;
        gridArea?: import("csstype").Property.GridArea;
        gridColumn?: import("csstype").Property.GridColumn;
        gridRow?: import("csstype").Property.GridRow;
        gridTemplate?: import("csstype").Property.GridTemplate;
        inset?: import("csstype").Property.Inset<string | number>;
        insetBlock?: import("csstype").Property.InsetBlock<string | number>;
        insetInline?: import("csstype").Property.InsetInline<string | number>;
        lineClamp?: import("csstype").Property.LineClamp;
        listStyle?: import("csstype").Property.ListStyle;
        margin?: import("csstype").Property.Margin<string | number>;
        marginBlock?: import("csstype").Property.MarginBlock<string | number>;
        marginInline?: import("csstype").Property.MarginInline<string | number>;
        mask?: import("csstype").Property.Mask<string | number>;
        maskBorder?: import("csstype").Property.MaskBorder;
        motion?: import("csstype").Property.Offset<string | number>;
        offset?: import("csstype").Property.Offset<string | number>;
        outline?: import("csstype").Property.Outline<string | number>;
        overflow?: import("csstype").Property.Overflow;
        overscrollBehavior?: import("csstype").Property.OverscrollBehavior;
        padding?: import("csstype").Property.Padding<string | number>;
        paddingBlock?: import("csstype").Property.PaddingBlock<string | number>;
        paddingInline?: import("csstype").Property.PaddingInline<string | number>;
        placeContent?: import("csstype").Property.PlaceContent;
        placeItems?: import("csstype").Property.PlaceItems;
        placeSelf?: import("csstype").Property.PlaceSelf;
        scrollMargin?: import("csstype").Property.ScrollMargin<string | number>;
        scrollMarginBlock?: import("csstype").Property.ScrollMarginBlock<string | number>;
        scrollMarginInline?: import("csstype").Property.ScrollMarginInline<string | number>;
        scrollPadding?: import("csstype").Property.ScrollPadding<string | number>;
        scrollPaddingBlock?: import("csstype").Property.ScrollPaddingBlock<string | number>;
        scrollPaddingInline?: import("csstype").Property.ScrollPaddingInline<string | number>;
        scrollSnapMargin?: import("csstype").Property.ScrollMargin<string | number>;
        scrollTimeline?: import("csstype").Property.ScrollTimeline;
        textDecoration?: import("csstype").Property.TextDecoration<string | number>;
        textEmphasis?: import("csstype").Property.TextEmphasis;
        transition?: import("csstype").Property.Transition<string & {}>;
        viewTimeline?: import("csstype").Property.ViewTimeline;
        MozAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        MozAnimationDirection?: import("csstype").Property.AnimationDirection;
        MozAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        MozAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        MozAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        MozAnimationName?: import("csstype").Property.AnimationName;
        MozAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        MozAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        MozAppearance?: import("csstype").Property.MozAppearance;
        MozBinding?: import("csstype").Property.MozBinding;
        MozBorderBottomColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderEndColor?: import("csstype").Property.BorderInlineEndColor;
        MozBorderEndStyle?: import("csstype").Property.BorderInlineEndStyle;
        MozBorderEndWidth?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        MozBorderLeftColors?: import("csstype").Property.MozBorderLeftColors;
        MozBorderRightColors?: import("csstype").Property.MozBorderRightColors;
        MozBorderStartColor?: import("csstype").Property.BorderInlineStartColor;
        MozBorderStartStyle?: import("csstype").Property.BorderInlineStartStyle;
        MozBorderTopColors?: import("csstype").Property.MozBorderTopColors;
        MozBoxSizing?: import("csstype").Property.BoxSizing;
        MozColumnCount?: import("csstype").Property.ColumnCount;
        MozColumnFill?: import("csstype").Property.ColumnFill;
        MozColumnRuleColor?: import("csstype").Property.ColumnRuleColor;
        MozColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        MozColumnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number>;
        MozColumnWidth?: import("csstype").Property.ColumnWidth<string | number>;
        MozContextProperties?: import("csstype").Property.MozContextProperties;
        MozFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        MozFontLanguageOverride?: import("csstype").Property.FontLanguageOverride;
        MozHyphens?: import("csstype").Property.Hyphens;
        MozImageRegion?: import("csstype").Property.MozImageRegion;
        MozMarginEnd?: import("csstype").Property.MarginInlineEnd<string | number>;
        MozMarginStart?: import("csstype").Property.MarginInlineStart<string | number>;
        MozOrient?: import("csstype").Property.MozOrient;
        MozOsxFontSmoothing?: import("csstype").Property.FontSmooth<string | number>;
        MozOutlineRadiusBottomleft?: import("csstype").Property.MozOutlineRadiusBottomleft<string | number>;
        MozOutlineRadiusBottomright?: import("csstype").Property.MozOutlineRadiusBottomright<string | number>;
        MozOutlineRadiusTopleft?: import("csstype").Property.MozOutlineRadiusTopleft<string | number>;
        MozOutlineRadiusTopright?: import("csstype").Property.MozOutlineRadiusTopright<string | number>;
        MozPaddingEnd?: import("csstype").Property.PaddingInlineEnd<string | number>;
        MozPaddingStart?: import("csstype").Property.PaddingInlineStart<string | number>;
        MozStackSizing?: import("csstype").Property.MozStackSizing;
        MozTabSize?: import("csstype").Property.TabSize<string | number>;
        MozTextBlink?: import("csstype").Property.MozTextBlink;
        MozTextSizeAdjust?: import("csstype").Property.TextSizeAdjust;
        MozUserFocus?: import("csstype").Property.MozUserFocus;
        MozUserModify?: import("csstype").Property.MozUserModify;
        MozUserSelect?: import("csstype").Property.UserSelect;
        MozWindowDragging?: import("csstype").Property.MozWindowDragging;
        MozWindowShadow?: import("csstype").Property.MozWindowShadow;
        msAccelerator?: import("csstype").Property.MsAccelerator;
        msBlockProgression?: import("csstype").Property.MsBlockProgression;
        msContentZoomChaining?: import("csstype").Property.MsContentZoomChaining;
        msContentZoomLimitMax?: import("csstype").Property.MsContentZoomLimitMax;
        msContentZoomLimitMin?: import("csstype").Property.MsContentZoomLimitMin;
        msContentZoomSnapPoints?: import("csstype").Property.MsContentZoomSnapPoints;
        msContentZoomSnapType?: import("csstype").Property.MsContentZoomSnapType;
        msContentZooming?: import("csstype").Property.MsContentZooming;
        msFilter?: import("csstype").Property.MsFilter;
        msFlexDirection?: import("csstype").Property.FlexDirection;
        msFlexPositive?: import("csstype").Property.FlexGrow;
        msFlowFrom?: import("csstype").Property.MsFlowFrom;
        msFlowInto?: import("csstype").Property.MsFlowInto;
        msGridColumns?: import("csstype").Property.MsGridColumns<string | number>;
        msGridRows?: import("csstype").Property.MsGridRows<string | number>;
        msHighContrastAdjust?: import("csstype").Property.MsHighContrastAdjust;
        msHyphenateLimitChars?: import("csstype").Property.MsHyphenateLimitChars;
        msHyphenateLimitLines?: import("csstype").Property.MsHyphenateLimitLines;
        msHyphenateLimitZone?: import("csstype").Property.MsHyphenateLimitZone<string | number>;
        msHyphens?: import("csstype").Property.Hyphens;
        msImeAlign?: import("csstype").Property.MsImeAlign;
        msLineBreak?: import("csstype").Property.LineBreak;
        msOrder?: import("csstype").Property.Order;
        msOverflowStyle?: import("csstype").Property.MsOverflowStyle;
        msOverflowX?: import("csstype").Property.OverflowX;
        msOverflowY?: import("csstype").Property.OverflowY;
        msScrollChaining?: import("csstype").Property.MsScrollChaining;
        msScrollLimitXMax?: import("csstype").Property.MsScrollLimitXMax<string | number>;
        msScrollLimitXMin?: import("csstype").Property.MsScrollLimitXMin<string | number>;
        msScrollLimitYMax?: import("csstype").Property.MsScrollLimitYMax<string | number>;
        msScrollLimitYMin?: import("csstype").Property.MsScrollLimitYMin<string | number>;
        msScrollRails?: import("csstype").Property.MsScrollRails;
        msScrollSnapPointsX?: import("csstype").Property.MsScrollSnapPointsX;
        msScrollSnapPointsY?: import("csstype").Property.MsScrollSnapPointsY;
        msScrollSnapType?: import("csstype").Property.MsScrollSnapType;
        msScrollTranslation?: import("csstype").Property.MsScrollTranslation;
        msScrollbar3dlightColor?: import("csstype").Property.MsScrollbar3dlightColor;
        msScrollbarArrowColor?: import("csstype").Property.MsScrollbarArrowColor;
        msScrollbarBaseColor?: import("csstype").Property.MsScrollbarBaseColor;
        msScrollbarDarkshadowColor?: import("csstype").Property.MsScrollbarDarkshadowColor;
        msScrollbarFaceColor?: import("csstype").Property.MsScrollbarFaceColor;
        msScrollbarHighlightColor?: import("csstype").Property.MsScrollbarHighlightColor;
        msScrollbarShadowColor?: import("csstype").Property.MsScrollbarShadowColor;
        msScrollbarTrackColor?: import("csstype").Property.MsScrollbarTrackColor;
        msTextAutospace?: import("csstype").Property.MsTextAutospace;
        msTextCombineHorizontal?: import("csstype").Property.TextCombineUpright;
        msTextOverflow?: import("csstype").Property.TextOverflow;
        msTouchAction?: import("csstype").Property.TouchAction;
        msTouchSelect?: import("csstype").Property.MsTouchSelect;
        msTransform?: import("csstype").Property.Transform;
        msTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        msTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        msTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        msTransitionProperty?: import("csstype").Property.TransitionProperty;
        msTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        msUserSelect?: import("csstype").Property.MsUserSelect;
        msWordBreak?: import("csstype").Property.WordBreak;
        msWrapFlow?: import("csstype").Property.MsWrapFlow;
        msWrapMargin?: import("csstype").Property.MsWrapMargin<string | number>;
        msWrapThrough?: import("csstype").Property.MsWrapThrough;
        msWritingMode?: import("csstype").Property.WritingMode;
        WebkitAlignContent?: import("csstype").Property.AlignContent;
        WebkitAlignItems?: import("csstype").Property.AlignItems;
        WebkitAlignSelf?: import("csstype").Property.AlignSelf;
        WebkitAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitAnimationDirection?: import("csstype").Property.AnimationDirection;
        WebkitAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        WebkitAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        WebkitAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        WebkitAnimationName?: import("csstype").Property.AnimationName;
        WebkitAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        WebkitAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitAppearance?: import("csstype").Property.WebkitAppearance;
        WebkitBackdropFilter?: import("csstype").Property.BackdropFilter;
        WebkitBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        WebkitBackgroundClip?: import("csstype").Property.BackgroundClip;
        WebkitBackgroundOrigin?: import("csstype").Property.BackgroundOrigin;
        WebkitBackgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        WebkitBorderBeforeColor?: import("csstype").Property.WebkitBorderBeforeColor;
        WebkitBorderBeforeStyle?: import("csstype").Property.WebkitBorderBeforeStyle;
        WebkitBorderBeforeWidth?: import("csstype").Property.WebkitBorderBeforeWidth<string | number>;
        WebkitBorderBottomLeftRadius?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        WebkitBorderBottomRightRadius?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        WebkitBorderImageSlice?: import("csstype").Property.BorderImageSlice;
        WebkitBorderTopLeftRadius?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        WebkitBorderTopRightRadius?: import("csstype").Property.BorderTopRightRadius<string | number>;
        WebkitBoxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        WebkitBoxReflect?: import("csstype").Property.WebkitBoxReflect<string | number>;
        WebkitBoxShadow?: import("csstype").Property.BoxShadow;
        WebkitBoxSizing?: import("csstype").Property.BoxSizing;
        WebkitClipPath?: import("csstype").Property.ClipPath;
        WebkitColumnCount?: import("csstype").Property.ColumnCount;
        WebkitColumnFill?: import("csstype").Property.ColumnFill;
        WebkitColumnRuleColor?: import("csstype").Property.ColumnRuleColor;
        WebkitColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        WebkitColumnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number>;
        WebkitColumnSpan?: import("csstype").Property.ColumnSpan;
        WebkitColumnWidth?: import("csstype").Property.ColumnWidth<string | number>;
        WebkitFilter?: import("csstype").Property.Filter;
        WebkitFlexBasis?: import("csstype").Property.FlexBasis<string | number>;
        WebkitFlexDirection?: import("csstype").Property.FlexDirection;
        WebkitFlexGrow?: import("csstype").Property.FlexGrow;
        WebkitFlexShrink?: import("csstype").Property.FlexShrink;
        WebkitFlexWrap?: import("csstype").Property.FlexWrap;
        WebkitFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        WebkitFontKerning?: import("csstype").Property.FontKerning;
        WebkitFontSmoothing?: import("csstype").Property.FontSmooth<string | number>;
        WebkitFontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        WebkitHyphenateCharacter?: import("csstype").Property.HyphenateCharacter;
        WebkitHyphens?: import("csstype").Property.Hyphens;
        WebkitInitialLetter?: import("csstype").Property.InitialLetter;
        WebkitJustifyContent?: import("csstype").Property.JustifyContent;
        WebkitLineBreak?: import("csstype").Property.LineBreak;
        WebkitLineClamp?: import("csstype").Property.WebkitLineClamp;
        WebkitMarginEnd?: import("csstype").Property.MarginInlineEnd<string | number>;
        WebkitMarginStart?: import("csstype").Property.MarginInlineStart<string | number>;
        WebkitMaskAttachment?: import("csstype").Property.WebkitMaskAttachment;
        WebkitMaskBoxImageOutset?: import("csstype").Property.MaskBorderOutset<string | number>;
        WebkitMaskBoxImageRepeat?: import("csstype").Property.MaskBorderRepeat;
        WebkitMaskBoxImageSlice?: import("csstype").Property.MaskBorderSlice;
        WebkitMaskBoxImageSource?: import("csstype").Property.MaskBorderSource;
        WebkitMaskBoxImageWidth?: import("csstype").Property.MaskBorderWidth<string | number>;
        WebkitMaskClip?: import("csstype").Property.WebkitMaskClip;
        WebkitMaskComposite?: import("csstype").Property.WebkitMaskComposite;
        WebkitMaskImage?: import("csstype").Property.WebkitMaskImage;
        WebkitMaskOrigin?: import("csstype").Property.WebkitMaskOrigin;
        WebkitMaskPosition?: import("csstype").Property.WebkitMaskPosition<string | number>;
        WebkitMaskPositionX?: import("csstype").Property.WebkitMaskPositionX<string | number>;
        WebkitMaskPositionY?: import("csstype").Property.WebkitMaskPositionY<string | number>;
        WebkitMaskRepeat?: import("csstype").Property.WebkitMaskRepeat;
        WebkitMaskRepeatX?: import("csstype").Property.WebkitMaskRepeatX;
        WebkitMaskRepeatY?: import("csstype").Property.WebkitMaskRepeatY;
        WebkitMaskSize?: import("csstype").Property.WebkitMaskSize<string | number>;
        WebkitMaxInlineSize?: import("csstype").Property.MaxInlineSize<string | number>;
        WebkitOrder?: import("csstype").Property.Order;
        WebkitOverflowScrolling?: import("csstype").Property.WebkitOverflowScrolling;
        WebkitPaddingEnd?: import("csstype").Property.PaddingInlineEnd<string | number>;
        WebkitPaddingStart?: import("csstype").Property.PaddingInlineStart<string | number>;
        WebkitPerspective?: import("csstype").Property.Perspective<string | number>;
        WebkitPerspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number>;
        WebkitPrintColorAdjust?: import("csstype").Property.PrintColorAdjust;
        WebkitRubyPosition?: import("csstype").Property.RubyPosition;
        WebkitScrollSnapType?: import("csstype").Property.ScrollSnapType;
        WebkitShapeMargin?: import("csstype").Property.ShapeMargin<string | number>;
        WebkitTapHighlightColor?: import("csstype").Property.WebkitTapHighlightColor;
        WebkitTextCombine?: import("csstype").Property.TextCombineUpright;
        WebkitTextDecorationColor?: import("csstype").Property.TextDecorationColor;
        WebkitTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        WebkitTextDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        WebkitTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        WebkitTextEmphasisColor?: import("csstype").Property.TextEmphasisColor;
        WebkitTextEmphasisPosition?: import("csstype").Property.TextEmphasisPosition;
        WebkitTextEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        WebkitTextFillColor?: import("csstype").Property.WebkitTextFillColor;
        WebkitTextOrientation?: import("csstype").Property.TextOrientation;
        WebkitTextSizeAdjust?: import("csstype").Property.TextSizeAdjust;
        WebkitTextStrokeColor?: import("csstype").Property.WebkitTextStrokeColor;
        WebkitTextStrokeWidth?: import("csstype").Property.WebkitTextStrokeWidth<string | number>;
        WebkitTextUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        WebkitTouchCallout?: import("csstype").Property.WebkitTouchCallout;
        WebkitTransform?: import("csstype").Property.Transform;
        WebkitTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        WebkitTransformStyle?: import("csstype").Property.TransformStyle;
        WebkitTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        WebkitTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        WebkitTransitionProperty?: import("csstype").Property.TransitionProperty;
        WebkitTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        WebkitUserModify?: import("csstype").Property.WebkitUserModify;
        WebkitUserSelect?: import("csstype").Property.UserSelect;
        WebkitWritingMode?: import("csstype").Property.WritingMode;
        MozAnimation?: import("csstype").Property.Animation<string & {}>;
        MozBorderImage?: import("csstype").Property.BorderImage;
        MozColumnRule?: import("csstype").Property.ColumnRule<string | number>;
        MozColumns?: import("csstype").Property.Columns<string | number>;
        MozOutlineRadius?: import("csstype").Property.MozOutlineRadius<string | number>;
        msContentZoomLimit?: import("csstype").Property.MsContentZoomLimit;
        msContentZoomSnap?: import("csstype").Property.MsContentZoomSnap;
        msFlex?: import("csstype").Property.Flex<string | number>;
        msScrollLimit?: import("csstype").Property.MsScrollLimit;
        msScrollSnapX?: import("csstype").Property.MsScrollSnapX;
        msScrollSnapY?: import("csstype").Property.MsScrollSnapY;
        msTransition?: import("csstype").Property.Transition<string & {}>;
        WebkitAnimation?: import("csstype").Property.Animation<string & {}>;
        WebkitBorderBefore?: import("csstype").Property.WebkitBorderBefore<string | number>;
        WebkitBorderImage?: import("csstype").Property.BorderImage;
        WebkitBorderRadius?: import("csstype").Property.BorderRadius<string | number>;
        WebkitColumnRule?: import("csstype").Property.ColumnRule<string | number>;
        WebkitColumns?: import("csstype").Property.Columns<string | number>;
        WebkitFlex?: import("csstype").Property.Flex<string | number>;
        WebkitFlexFlow?: import("csstype").Property.FlexFlow;
        WebkitMask?: import("csstype").Property.WebkitMask<string | number>;
        WebkitMaskBoxImage?: import("csstype").Property.MaskBorder;
        WebkitTextEmphasis?: import("csstype").Property.TextEmphasis;
        WebkitTextStroke?: import("csstype").Property.WebkitTextStroke<string | number>;
        WebkitTransition?: import("csstype").Property.Transition<string & {}>;
        azimuth?: import("csstype").Property.Azimuth;
        boxAlign?: import("csstype").Property.BoxAlign;
        boxDirection?: import("csstype").Property.BoxDirection;
        boxFlex?: import("csstype").Property.BoxFlex;
        boxFlexGroup?: import("csstype").Property.BoxFlexGroup;
        boxLines?: import("csstype").Property.BoxLines;
        boxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        boxOrient?: import("csstype").Property.BoxOrient;
        boxPack?: import("csstype").Property.BoxPack;
        clip?: import("csstype").Property.Clip;
        gridColumnGap?: import("csstype").Property.GridColumnGap<string | number>;
        gridGap?: import("csstype").Property.GridGap<string | number>;
        gridRowGap?: import("csstype").Property.GridRowGap<string | number>;
        imeMode?: import("csstype").Property.ImeMode;
        offsetBlock?: import("csstype").Property.InsetBlock<string | number>;
        offsetBlockEnd?: import("csstype").Property.InsetBlockEnd<string | number>;
        offsetBlockStart?: import("csstype").Property.InsetBlockStart<string | number>;
        offsetInline?: import("csstype").Property.InsetInline<string | number>;
        offsetInlineEnd?: import("csstype").Property.InsetInlineEnd<string | number>;
        offsetInlineStart?: import("csstype").Property.InsetInlineStart<string | number>;
        scrollSnapCoordinate?: import("csstype").Property.ScrollSnapCoordinate<string | number>;
        scrollSnapDestination?: import("csstype").Property.ScrollSnapDestination<string | number>;
        scrollSnapPointsX?: import("csstype").Property.ScrollSnapPointsX;
        scrollSnapPointsY?: import("csstype").Property.ScrollSnapPointsY;
        scrollSnapTypeX?: import("csstype").Property.ScrollSnapTypeX;
        scrollSnapTypeY?: import("csstype").Property.ScrollSnapTypeY;
        KhtmlBoxAlign?: import("csstype").Property.BoxAlign;
        KhtmlBoxDirection?: import("csstype").Property.BoxDirection;
        KhtmlBoxFlex?: import("csstype").Property.BoxFlex;
        KhtmlBoxFlexGroup?: import("csstype").Property.BoxFlexGroup;
        KhtmlBoxLines?: import("csstype").Property.BoxLines;
        KhtmlBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        KhtmlBoxOrient?: import("csstype").Property.BoxOrient;
        KhtmlBoxPack?: import("csstype").Property.BoxPack;
        KhtmlLineBreak?: import("csstype").Property.LineBreak;
        KhtmlOpacity?: import("csstype").Property.Opacity;
        KhtmlUserSelect?: import("csstype").Property.UserSelect;
        MozBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        MozBackgroundClip?: import("csstype").Property.BackgroundClip;
        MozBackgroundInlinePolicy?: import("csstype").Property.BoxDecorationBreak;
        MozBackgroundOrigin?: import("csstype").Property.BackgroundOrigin;
        MozBackgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        MozBorderRadius?: import("csstype").Property.BorderRadius<string | number>;
        MozBorderRadiusBottomleft?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        MozBorderRadiusBottomright?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        MozBorderRadiusTopleft?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        MozBorderRadiusTopright?: import("csstype").Property.BorderTopRightRadius<string | number>;
        MozBoxAlign?: import("csstype").Property.BoxAlign;
        MozBoxDirection?: import("csstype").Property.BoxDirection;
        MozBoxFlex?: import("csstype").Property.BoxFlex;
        MozBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        MozBoxOrient?: import("csstype").Property.BoxOrient;
        MozBoxPack?: import("csstype").Property.BoxPack;
        MozBoxShadow?: import("csstype").Property.BoxShadow;
        MozFloatEdge?: import("csstype").Property.MozFloatEdge;
        MozForceBrokenImageIcon?: import("csstype").Property.MozForceBrokenImageIcon;
        MozOpacity?: import("csstype").Property.Opacity;
        MozOutline?: import("csstype").Property.Outline<string | number>;
        MozOutlineColor?: import("csstype").Property.OutlineColor;
        MozOutlineStyle?: import("csstype").Property.OutlineStyle;
        MozOutlineWidth?: import("csstype").Property.OutlineWidth<string | number>;
        MozPerspective?: import("csstype").Property.Perspective<string | number>;
        MozPerspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number>;
        MozTextAlignLast?: import("csstype").Property.TextAlignLast;
        MozTextDecorationColor?: import("csstype").Property.TextDecorationColor;
        MozTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        MozTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        MozTransform?: import("csstype").Property.Transform;
        MozTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        MozTransformStyle?: import("csstype").Property.TransformStyle;
        MozTransition?: import("csstype").Property.Transition<string & {}>;
        MozTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        MozTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        MozTransitionProperty?: import("csstype").Property.TransitionProperty;
        MozTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        MozUserInput?: import("csstype").Property.MozUserInput;
        msImeMode?: import("csstype").Property.ImeMode;
        OAnimation?: import("csstype").Property.Animation<string & {}>;
        OAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        OAnimationDirection?: import("csstype").Property.AnimationDirection;
        OAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        OAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        OAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        OAnimationName?: import("csstype").Property.AnimationName;
        OAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        OAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        OBackgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        OBorderImage?: import("csstype").Property.BorderImage;
        OObjectFit?: import("csstype").Property.ObjectFit;
        OObjectPosition?: import("csstype").Property.ObjectPosition<string | number>;
        OTabSize?: import("csstype").Property.TabSize<string | number>;
        OTextOverflow?: import("csstype").Property.TextOverflow;
        OTransform?: import("csstype").Property.Transform;
        OTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        OTransition?: import("csstype").Property.Transition<string & {}>;
        OTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        OTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        OTransitionProperty?: import("csstype").Property.TransitionProperty;
        OTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        WebkitBoxAlign?: import("csstype").Property.BoxAlign;
        WebkitBoxDirection?: import("csstype").Property.BoxDirection;
        WebkitBoxFlex?: import("csstype").Property.BoxFlex;
        WebkitBoxFlexGroup?: import("csstype").Property.BoxFlexGroup;
        WebkitBoxLines?: import("csstype").Property.BoxLines;
        WebkitBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        WebkitBoxOrient?: import("csstype").Property.BoxOrient;
        WebkitBoxPack?: import("csstype").Property.BoxPack;
        alignmentBaseline?: import("csstype").Property.AlignmentBaseline;
        baselineShift?: import("csstype").Property.BaselineShift<string | number>;
        clipRule?: import("csstype").Property.ClipRule;
        colorInterpolation?: import("csstype").Property.ColorInterpolation;
        colorRendering?: import("csstype").Property.ColorRendering;
        dominantBaseline?: import("csstype").Property.DominantBaseline;
        fill?: import("csstype").Property.Fill;
        fillOpacity?: import("csstype").Property.FillOpacity;
        fillRule?: import("csstype").Property.FillRule;
        floodColor?: import("csstype").Property.FloodColor;
        floodOpacity?: import("csstype").Property.FloodOpacity;
        glyphOrientationVertical?: import("csstype").Property.GlyphOrientationVertical;
        lightingColor?: import("csstype").Property.LightingColor;
        marker?: import("csstype").Property.Marker;
        markerEnd?: import("csstype").Property.MarkerEnd;
        markerMid?: import("csstype").Property.MarkerMid;
        markerStart?: import("csstype").Property.MarkerStart;
        shapeRendering?: import("csstype").Property.ShapeRendering;
        stopColor?: import("csstype").Property.StopColor;
        stopOpacity?: import("csstype").Property.StopOpacity;
        stroke?: import("csstype").Property.Stroke;
        strokeDasharray?: import("csstype").Property.StrokeDasharray<string | number>;
        strokeDashoffset?: import("csstype").Property.StrokeDashoffset<string | number>;
        strokeLinecap?: import("csstype").Property.StrokeLinecap;
        strokeLinejoin?: import("csstype").Property.StrokeLinejoin;
        strokeMiterlimit?: import("csstype").Property.StrokeMiterlimit;
        strokeOpacity?: import("csstype").Property.StrokeOpacity;
        strokeWidth?: import("csstype").Property.StrokeWidth<string | number>;
        textAnchor?: import("csstype").Property.TextAnchor;
        vectorEffect?: import("csstype").Property.VectorEffect;
        "accent-color"?: import("csstype").Property.AccentColor;
        "align-content"?: import("csstype").Property.AlignContent;
        "align-items"?: import("csstype").Property.AlignItems;
        "align-self"?: import("csstype").Property.AlignSelf;
        "align-tracks"?: import("csstype").Property.AlignTracks;
        "animation-composition"?: import("csstype").Property.AnimationComposition;
        "animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "animation-direction"?: import("csstype").Property.AnimationDirection;
        "animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "animation-name"?: import("csstype").Property.AnimationName;
        "animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "animation-range-end"?: import("csstype").Property.AnimationRangeEnd<string | number>;
        "animation-range-start"?: import("csstype").Property.AnimationRangeStart<string | number>;
        "animation-timeline"?: import("csstype").Property.AnimationTimeline;
        "animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "aspect-ratio"?: import("csstype").Property.AspectRatio;
        "backdrop-filter"?: import("csstype").Property.BackdropFilter;
        "backface-visibility"?: import("csstype").Property.BackfaceVisibility;
        "background-attachment"?: import("csstype").Property.BackgroundAttachment;
        "background-blend-mode"?: import("csstype").Property.BackgroundBlendMode;
        "background-clip"?: import("csstype").Property.BackgroundClip;
        "background-color"?: import("csstype").Property.BackgroundColor;
        "background-image"?: import("csstype").Property.BackgroundImage;
        "background-origin"?: import("csstype").Property.BackgroundOrigin;
        "background-position-x"?: import("csstype").Property.BackgroundPositionX<string | number>;
        "background-position-y"?: import("csstype").Property.BackgroundPositionY<string | number>;
        "background-repeat"?: import("csstype").Property.BackgroundRepeat;
        "background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "block-overflow"?: import("csstype").Property.BlockOverflow;
        "block-size"?: import("csstype").Property.BlockSize<string | number>;
        "border-block-color"?: import("csstype").Property.BorderBlockColor;
        "border-block-end-color"?: import("csstype").Property.BorderBlockEndColor;
        "border-block-end-style"?: import("csstype").Property.BorderBlockEndStyle;
        "border-block-end-width"?: import("csstype").Property.BorderBlockEndWidth<string | number>;
        "border-block-start-color"?: import("csstype").Property.BorderBlockStartColor;
        "border-block-start-style"?: import("csstype").Property.BorderBlockStartStyle;
        "border-block-start-width"?: import("csstype").Property.BorderBlockStartWidth<string | number>;
        "border-block-style"?: import("csstype").Property.BorderBlockStyle;
        "border-block-width"?: import("csstype").Property.BorderBlockWidth<string | number>;
        "border-bottom-color"?: import("csstype").Property.BorderBottomColor;
        "border-bottom-left-radius"?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        "border-bottom-right-radius"?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        "border-bottom-style"?: import("csstype").Property.BorderBottomStyle;
        "border-bottom-width"?: import("csstype").Property.BorderBottomWidth<string | number>;
        "border-collapse"?: import("csstype").Property.BorderCollapse;
        "border-end-end-radius"?: import("csstype").Property.BorderEndEndRadius<string | number>;
        "border-end-start-radius"?: import("csstype").Property.BorderEndStartRadius<string | number>;
        "border-image-outset"?: import("csstype").Property.BorderImageOutset<string | number>;
        "border-image-repeat"?: import("csstype").Property.BorderImageRepeat;
        "border-image-slice"?: import("csstype").Property.BorderImageSlice;
        "border-image-source"?: import("csstype").Property.BorderImageSource;
        "border-image-width"?: import("csstype").Property.BorderImageWidth<string | number>;
        "border-inline-color"?: import("csstype").Property.BorderInlineColor;
        "border-inline-end-color"?: import("csstype").Property.BorderInlineEndColor;
        "border-inline-end-style"?: import("csstype").Property.BorderInlineEndStyle;
        "border-inline-end-width"?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        "border-inline-start-color"?: import("csstype").Property.BorderInlineStartColor;
        "border-inline-start-style"?: import("csstype").Property.BorderInlineStartStyle;
        "border-inline-start-width"?: import("csstype").Property.BorderInlineStartWidth<string | number>;
        "border-inline-style"?: import("csstype").Property.BorderInlineStyle;
        "border-inline-width"?: import("csstype").Property.BorderInlineWidth<string | number>;
        "border-left-color"?: import("csstype").Property.BorderLeftColor;
        "border-left-style"?: import("csstype").Property.BorderLeftStyle;
        "border-left-width"?: import("csstype").Property.BorderLeftWidth<string | number>;
        "border-right-color"?: import("csstype").Property.BorderRightColor;
        "border-right-style"?: import("csstype").Property.BorderRightStyle;
        "border-right-width"?: import("csstype").Property.BorderRightWidth<string | number>;
        "border-spacing"?: import("csstype").Property.BorderSpacing<string | number>;
        "border-start-end-radius"?: import("csstype").Property.BorderStartEndRadius<string | number>;
        "border-start-start-radius"?: import("csstype").Property.BorderStartStartRadius<string | number>;
        "border-top-color"?: import("csstype").Property.BorderTopColor;
        "border-top-left-radius"?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        "border-top-right-radius"?: import("csstype").Property.BorderTopRightRadius<string | number>;
        "border-top-style"?: import("csstype").Property.BorderTopStyle;
        "border-top-width"?: import("csstype").Property.BorderTopWidth<string | number>;
        "box-decoration-break"?: import("csstype").Property.BoxDecorationBreak;
        "box-shadow"?: import("csstype").Property.BoxShadow;
        "box-sizing"?: import("csstype").Property.BoxSizing;
        "break-after"?: import("csstype").Property.BreakAfter;
        "break-before"?: import("csstype").Property.BreakBefore;
        "break-inside"?: import("csstype").Property.BreakInside;
        "caption-side"?: import("csstype").Property.CaptionSide;
        "caret-color"?: import("csstype").Property.CaretColor;
        "caret-shape"?: import("csstype").Property.CaretShape;
        "clip-path"?: import("csstype").Property.ClipPath;
        "color-adjust"?: import("csstype").Property.PrintColorAdjust;
        "color-scheme"?: import("csstype").Property.ColorScheme;
        "column-count"?: import("csstype").Property.ColumnCount;
        "column-fill"?: import("csstype").Property.ColumnFill;
        "column-gap"?: import("csstype").Property.ColumnGap<string | number>;
        "column-rule-color"?: import("csstype").Property.ColumnRuleColor;
        "column-rule-style"?: import("csstype").Property.ColumnRuleStyle;
        "column-rule-width"?: import("csstype").Property.ColumnRuleWidth<string | number>;
        "column-span"?: import("csstype").Property.ColumnSpan;
        "column-width"?: import("csstype").Property.ColumnWidth<string | number>;
        "contain-intrinsic-block-size"?: import("csstype").Property.ContainIntrinsicBlockSize<string | number>;
        "contain-intrinsic-height"?: import("csstype").Property.ContainIntrinsicHeight<string | number>;
        "contain-intrinsic-inline-size"?: import("csstype").Property.ContainIntrinsicInlineSize<string | number>;
        "contain-intrinsic-width"?: import("csstype").Property.ContainIntrinsicWidth<string | number>;
        "container-name"?: import("csstype").Property.ContainerName;
        "container-type"?: import("csstype").Property.ContainerType;
        "content-visibility"?: import("csstype").Property.ContentVisibility;
        "counter-increment"?: import("csstype").Property.CounterIncrement;
        "counter-reset"?: import("csstype").Property.CounterReset;
        "counter-set"?: import("csstype").Property.CounterSet;
        "empty-cells"?: import("csstype").Property.EmptyCells;
        "flex-basis"?: import("csstype").Property.FlexBasis<string | number>;
        "flex-direction"?: import("csstype").Property.FlexDirection;
        "flex-grow"?: import("csstype").Property.FlexGrow;
        "flex-shrink"?: import("csstype").Property.FlexShrink;
        "flex-wrap"?: import("csstype").Property.FlexWrap;
        "font-family"?: import("csstype").Property.FontFamily;
        "font-feature-settings"?: import("csstype").Property.FontFeatureSettings;
        "font-kerning"?: import("csstype").Property.FontKerning;
        "font-language-override"?: import("csstype").Property.FontLanguageOverride;
        "font-optical-sizing"?: import("csstype").Property.FontOpticalSizing;
        "font-palette"?: import("csstype").Property.FontPalette;
        "font-size"?: import("csstype").Property.FontSize<string | number>;
        "font-size-adjust"?: import("csstype").Property.FontSizeAdjust;
        "font-smooth"?: import("csstype").Property.FontSmooth<string | number>;
        "font-stretch"?: import("csstype").Property.FontStretch;
        "font-style"?: import("csstype").Property.FontStyle;
        "font-synthesis"?: import("csstype").Property.FontSynthesis;
        "font-synthesis-position"?: import("csstype").Property.FontSynthesisPosition;
        "font-synthesis-small-caps"?: import("csstype").Property.FontSynthesisSmallCaps;
        "font-synthesis-style"?: import("csstype").Property.FontSynthesisStyle;
        "font-synthesis-weight"?: import("csstype").Property.FontSynthesisWeight;
        "font-variant"?: import("csstype").Property.FontVariant;
        "font-variant-alternates"?: import("csstype").Property.FontVariantAlternates;
        "font-variant-caps"?: import("csstype").Property.FontVariantCaps;
        "font-variant-east-asian"?: import("csstype").Property.FontVariantEastAsian;
        "font-variant-emoji"?: import("csstype").Property.FontVariantEmoji;
        "font-variant-ligatures"?: import("csstype").Property.FontVariantLigatures;
        "font-variant-numeric"?: import("csstype").Property.FontVariantNumeric;
        "font-variant-position"?: import("csstype").Property.FontVariantPosition;
        "font-variation-settings"?: import("csstype").Property.FontVariationSettings;
        "font-weight"?: import("csstype").Property.FontWeight;
        "forced-color-adjust"?: import("csstype").Property.ForcedColorAdjust;
        "grid-auto-columns"?: import("csstype").Property.GridAutoColumns<string | number>;
        "grid-auto-flow"?: import("csstype").Property.GridAutoFlow;
        "grid-auto-rows"?: import("csstype").Property.GridAutoRows<string | number>;
        "grid-column-end"?: import("csstype").Property.GridColumnEnd;
        "grid-column-start"?: import("csstype").Property.GridColumnStart;
        "grid-row-end"?: import("csstype").Property.GridRowEnd;
        "grid-row-start"?: import("csstype").Property.GridRowStart;
        "grid-template-areas"?: import("csstype").Property.GridTemplateAreas;
        "grid-template-columns"?: import("csstype").Property.GridTemplateColumns<string | number>;
        "grid-template-rows"?: import("csstype").Property.GridTemplateRows<string | number>;
        "hanging-punctuation"?: import("csstype").Property.HangingPunctuation;
        "hyphenate-character"?: import("csstype").Property.HyphenateCharacter;
        "hyphenate-limit-chars"?: import("csstype").Property.HyphenateLimitChars;
        "image-orientation"?: import("csstype").Property.ImageOrientation;
        "image-rendering"?: import("csstype").Property.ImageRendering;
        "image-resolution"?: import("csstype").Property.ImageResolution;
        "initial-letter"?: import("csstype").Property.InitialLetter;
        "inline-size"?: import("csstype").Property.InlineSize<string | number>;
        "input-security"?: import("csstype").Property.InputSecurity;
        "inset-block-end"?: import("csstype").Property.InsetBlockEnd<string | number>;
        "inset-block-start"?: import("csstype").Property.InsetBlockStart<string | number>;
        "inset-inline-end"?: import("csstype").Property.InsetInlineEnd<string | number>;
        "inset-inline-start"?: import("csstype").Property.InsetInlineStart<string | number>;
        "justify-content"?: import("csstype").Property.JustifyContent;
        "justify-items"?: import("csstype").Property.JustifyItems;
        "justify-self"?: import("csstype").Property.JustifySelf;
        "justify-tracks"?: import("csstype").Property.JustifyTracks;
        "letter-spacing"?: import("csstype").Property.LetterSpacing<string | number>;
        "line-break"?: import("csstype").Property.LineBreak;
        "line-height"?: import("csstype").Property.LineHeight<string | number>;
        "line-height-step"?: import("csstype").Property.LineHeightStep<string | number>;
        "list-style-image"?: import("csstype").Property.ListStyleImage;
        "list-style-position"?: import("csstype").Property.ListStylePosition;
        "list-style-type"?: import("csstype").Property.ListStyleType;
        "margin-block-end"?: import("csstype").Property.MarginBlockEnd<string | number>;
        "margin-block-start"?: import("csstype").Property.MarginBlockStart<string | number>;
        "margin-bottom"?: import("csstype").Property.MarginBottom<string | number>;
        "margin-inline-end"?: import("csstype").Property.MarginInlineEnd<string | number>;
        "margin-inline-start"?: import("csstype").Property.MarginInlineStart<string | number>;
        "margin-left"?: import("csstype").Property.MarginLeft<string | number>;
        "margin-right"?: import("csstype").Property.MarginRight<string | number>;
        "margin-top"?: import("csstype").Property.MarginTop<string | number>;
        "margin-trim"?: import("csstype").Property.MarginTrim;
        "mask-border-mode"?: import("csstype").Property.MaskBorderMode;
        "mask-border-outset"?: import("csstype").Property.MaskBorderOutset<string | number>;
        "mask-border-repeat"?: import("csstype").Property.MaskBorderRepeat;
        "mask-border-slice"?: import("csstype").Property.MaskBorderSlice;
        "mask-border-source"?: import("csstype").Property.MaskBorderSource;
        "mask-border-width"?: import("csstype").Property.MaskBorderWidth<string | number>;
        "mask-clip"?: import("csstype").Property.MaskClip;
        "mask-composite"?: import("csstype").Property.MaskComposite;
        "mask-image"?: import("csstype").Property.MaskImage;
        "mask-mode"?: import("csstype").Property.MaskMode;
        "mask-origin"?: import("csstype").Property.MaskOrigin;
        "mask-position"?: import("csstype").Property.MaskPosition<string | number>;
        "mask-repeat"?: import("csstype").Property.MaskRepeat;
        "mask-size"?: import("csstype").Property.MaskSize<string | number>;
        "mask-type"?: import("csstype").Property.MaskType;
        "masonry-auto-flow"?: import("csstype").Property.MasonryAutoFlow;
        "math-depth"?: import("csstype").Property.MathDepth;
        "math-shift"?: import("csstype").Property.MathShift;
        "math-style"?: import("csstype").Property.MathStyle;
        "max-block-size"?: import("csstype").Property.MaxBlockSize<string | number>;
        "max-height"?: import("csstype").Property.MaxHeight<string | number>;
        "max-inline-size"?: import("csstype").Property.MaxInlineSize<string | number>;
        "max-lines"?: import("csstype").Property.MaxLines;
        "max-width"?: import("csstype").Property.MaxWidth<string | number>;
        "min-block-size"?: import("csstype").Property.MinBlockSize<string | number>;
        "min-height"?: import("csstype").Property.MinHeight<string | number>;
        "min-inline-size"?: import("csstype").Property.MinInlineSize<string | number>;
        "min-width"?: import("csstype").Property.MinWidth<string | number>;
        "mix-blend-mode"?: import("csstype").Property.MixBlendMode;
        "motion-distance"?: import("csstype").Property.OffsetDistance<string | number>;
        "motion-path"?: import("csstype").Property.OffsetPath;
        "motion-rotation"?: import("csstype").Property.OffsetRotate;
        "object-fit"?: import("csstype").Property.ObjectFit;
        "object-position"?: import("csstype").Property.ObjectPosition<string | number>;
        "offset-anchor"?: import("csstype").Property.OffsetAnchor<string | number>;
        "offset-distance"?: import("csstype").Property.OffsetDistance<string | number>;
        "offset-path"?: import("csstype").Property.OffsetPath;
        "offset-position"?: import("csstype").Property.OffsetPosition<string | number>;
        "offset-rotate"?: import("csstype").Property.OffsetRotate;
        "offset-rotation"?: import("csstype").Property.OffsetRotate;
        "outline-color"?: import("csstype").Property.OutlineColor;
        "outline-offset"?: import("csstype").Property.OutlineOffset<string | number>;
        "outline-style"?: import("csstype").Property.OutlineStyle;
        "outline-width"?: import("csstype").Property.OutlineWidth<string | number>;
        "overflow-anchor"?: import("csstype").Property.OverflowAnchor;
        "overflow-block"?: import("csstype").Property.OverflowBlock;
        "overflow-clip-box"?: import("csstype").Property.OverflowClipBox;
        "overflow-clip-margin"?: import("csstype").Property.OverflowClipMargin<string | number>;
        "overflow-inline"?: import("csstype").Property.OverflowInline;
        "overflow-wrap"?: import("csstype").Property.OverflowWrap;
        "overflow-x"?: import("csstype").Property.OverflowX;
        "overflow-y"?: import("csstype").Property.OverflowY;
        "overscroll-behavior-block"?: import("csstype").Property.OverscrollBehaviorBlock;
        "overscroll-behavior-inline"?: import("csstype").Property.OverscrollBehaviorInline;
        "overscroll-behavior-x"?: import("csstype").Property.OverscrollBehaviorX;
        "overscroll-behavior-y"?: import("csstype").Property.OverscrollBehaviorY;
        "padding-block-end"?: import("csstype").Property.PaddingBlockEnd<string | number>;
        "padding-block-start"?: import("csstype").Property.PaddingBlockStart<string | number>;
        "padding-bottom"?: import("csstype").Property.PaddingBottom<string | number>;
        "padding-inline-end"?: import("csstype").Property.PaddingInlineEnd<string | number>;
        "padding-inline-start"?: import("csstype").Property.PaddingInlineStart<string | number>;
        "padding-left"?: import("csstype").Property.PaddingLeft<string | number>;
        "padding-right"?: import("csstype").Property.PaddingRight<string | number>;
        "padding-top"?: import("csstype").Property.PaddingTop<string | number>;
        "page-break-after"?: import("csstype").Property.PageBreakAfter;
        "page-break-before"?: import("csstype").Property.PageBreakBefore;
        "page-break-inside"?: import("csstype").Property.PageBreakInside;
        "paint-order"?: import("csstype").Property.PaintOrder;
        "perspective-origin"?: import("csstype").Property.PerspectiveOrigin<string | number>;
        "pointer-events"?: import("csstype").Property.PointerEvents;
        "print-color-adjust"?: import("csstype").Property.PrintColorAdjust;
        "row-gap"?: import("csstype").Property.RowGap<string | number>;
        "ruby-align"?: import("csstype").Property.RubyAlign;
        "ruby-merge"?: import("csstype").Property.RubyMerge;
        "ruby-position"?: import("csstype").Property.RubyPosition;
        "scroll-behavior"?: import("csstype").Property.ScrollBehavior;
        "scroll-margin-block-end"?: import("csstype").Property.ScrollMarginBlockEnd<string | number>;
        "scroll-margin-block-start"?: import("csstype").Property.ScrollMarginBlockStart<string | number>;
        "scroll-margin-bottom"?: import("csstype").Property.ScrollMarginBottom<string | number>;
        "scroll-margin-inline-end"?: import("csstype").Property.ScrollMarginInlineEnd<string | number>;
        "scroll-margin-inline-start"?: import("csstype").Property.ScrollMarginInlineStart<string | number>;
        "scroll-margin-left"?: import("csstype").Property.ScrollMarginLeft<string | number>;
        "scroll-margin-right"?: import("csstype").Property.ScrollMarginRight<string | number>;
        "scroll-margin-top"?: import("csstype").Property.ScrollMarginTop<string | number>;
        "scroll-padding-block-end"?: import("csstype").Property.ScrollPaddingBlockEnd<string | number>;
        "scroll-padding-block-start"?: import("csstype").Property.ScrollPaddingBlockStart<string | number>;
        "scroll-padding-bottom"?: import("csstype").Property.ScrollPaddingBottom<string | number>;
        "scroll-padding-inline-end"?: import("csstype").Property.ScrollPaddingInlineEnd<string | number>;
        "scroll-padding-inline-start"?: import("csstype").Property.ScrollPaddingInlineStart<string | number>;
        "scroll-padding-left"?: import("csstype").Property.ScrollPaddingLeft<string | number>;
        "scroll-padding-right"?: import("csstype").Property.ScrollPaddingRight<string | number>;
        "scroll-padding-top"?: import("csstype").Property.ScrollPaddingTop<string | number>;
        "scroll-snap-align"?: import("csstype").Property.ScrollSnapAlign;
        "scroll-snap-margin-bottom"?: import("csstype").Property.ScrollMarginBottom<string | number>;
        "scroll-snap-margin-left"?: import("csstype").Property.ScrollMarginLeft<string | number>;
        "scroll-snap-margin-right"?: import("csstype").Property.ScrollMarginRight<string | number>;
        "scroll-snap-margin-top"?: import("csstype").Property.ScrollMarginTop<string | number>;
        "scroll-snap-stop"?: import("csstype").Property.ScrollSnapStop;
        "scroll-snap-type"?: import("csstype").Property.ScrollSnapType;
        "scroll-timeline-axis"?: import("csstype").Property.ScrollTimelineAxis;
        "scroll-timeline-name"?: import("csstype").Property.ScrollTimelineName;
        "scrollbar-color"?: import("csstype").Property.ScrollbarColor;
        "scrollbar-gutter"?: import("csstype").Property.ScrollbarGutter;
        "scrollbar-width"?: import("csstype").Property.ScrollbarWidth;
        "shape-image-threshold"?: import("csstype").Property.ShapeImageThreshold;
        "shape-margin"?: import("csstype").Property.ShapeMargin<string | number>;
        "shape-outside"?: import("csstype").Property.ShapeOutside;
        "tab-size"?: import("csstype").Property.TabSize<string | number>;
        "table-layout"?: import("csstype").Property.TableLayout;
        "text-align"?: import("csstype").Property.TextAlign;
        "text-align-last"?: import("csstype").Property.TextAlignLast;
        "text-combine-upright"?: import("csstype").Property.TextCombineUpright;
        "text-decoration-color"?: import("csstype").Property.TextDecorationColor;
        "text-decoration-line"?: import("csstype").Property.TextDecorationLine;
        "text-decoration-skip"?: import("csstype").Property.TextDecorationSkip;
        "text-decoration-skip-ink"?: import("csstype").Property.TextDecorationSkipInk;
        "text-decoration-style"?: import("csstype").Property.TextDecorationStyle;
        "text-decoration-thickness"?: import("csstype").Property.TextDecorationThickness<string | number>;
        "text-emphasis-color"?: import("csstype").Property.TextEmphasisColor;
        "text-emphasis-position"?: import("csstype").Property.TextEmphasisPosition;
        "text-emphasis-style"?: import("csstype").Property.TextEmphasisStyle;
        "text-indent"?: import("csstype").Property.TextIndent<string | number>;
        "text-justify"?: import("csstype").Property.TextJustify;
        "text-orientation"?: import("csstype").Property.TextOrientation;
        "text-overflow"?: import("csstype").Property.TextOverflow;
        "text-rendering"?: import("csstype").Property.TextRendering;
        "text-shadow"?: import("csstype").Property.TextShadow;
        "text-size-adjust"?: import("csstype").Property.TextSizeAdjust;
        "text-transform"?: import("csstype").Property.TextTransform;
        "text-underline-offset"?: import("csstype").Property.TextUnderlineOffset<string | number>;
        "text-underline-position"?: import("csstype").Property.TextUnderlinePosition;
        "text-wrap"?: import("csstype").Property.TextWrap;
        "timeline-scope"?: import("csstype").Property.TimelineScope;
        "touch-action"?: import("csstype").Property.TouchAction;
        "transform-box"?: import("csstype").Property.TransformBox;
        "transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "transform-style"?: import("csstype").Property.TransformStyle;
        "transition-behavior"?: import("csstype").Property.TransitionBehavior;
        "transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "transition-property"?: import("csstype").Property.TransitionProperty;
        "transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "unicode-bidi"?: import("csstype").Property.UnicodeBidi;
        "user-select"?: import("csstype").Property.UserSelect;
        "vertical-align"?: import("csstype").Property.VerticalAlign<string | number>;
        "view-timeline-axis"?: import("csstype").Property.ViewTimelineAxis;
        "view-timeline-inset"?: import("csstype").Property.ViewTimelineInset<string | number>;
        "view-timeline-name"?: import("csstype").Property.ViewTimelineName;
        "view-transition-name"?: import("csstype").Property.ViewTransitionName;
        "white-space"?: import("csstype").Property.WhiteSpace;
        "white-space-collapse"?: import("csstype").Property.WhiteSpaceCollapse;
        "white-space-trim"?: import("csstype").Property.WhiteSpaceTrim;
        "will-change"?: import("csstype").Property.WillChange;
        "word-break"?: import("csstype").Property.WordBreak;
        "word-spacing"?: import("csstype").Property.WordSpacing<string | number>;
        "word-wrap"?: import("csstype").Property.WordWrap;
        "writing-mode"?: import("csstype").Property.WritingMode;
        "z-index"?: import("csstype").Property.ZIndex;
        "animation-range"?: import("csstype").Property.AnimationRange<string | number>;
        "background-position"?: import("csstype").Property.BackgroundPosition<string | number>;
        "border-block"?: import("csstype").Property.BorderBlock<string | number>;
        "border-block-end"?: import("csstype").Property.BorderBlockEnd<string | number>;
        "border-block-start"?: import("csstype").Property.BorderBlockStart<string | number>;
        "border-bottom"?: import("csstype").Property.BorderBottom<string | number>;
        "border-color"?: import("csstype").Property.BorderColor;
        "border-image"?: import("csstype").Property.BorderImage;
        "border-inline"?: import("csstype").Property.BorderInline<string | number>;
        "border-inline-end"?: import("csstype").Property.BorderInlineEnd<string | number>;
        "border-inline-start"?: import("csstype").Property.BorderInlineStart<string | number>;
        "border-left"?: import("csstype").Property.BorderLeft<string | number>;
        "border-radius"?: import("csstype").Property.BorderRadius<string | number>;
        "border-right"?: import("csstype").Property.BorderRight<string | number>;
        "border-style"?: import("csstype").Property.BorderStyle;
        "border-top"?: import("csstype").Property.BorderTop<string | number>;
        "border-width"?: import("csstype").Property.BorderWidth<string | number>;
        "column-rule"?: import("csstype").Property.ColumnRule<string | number>;
        "contain-intrinsic-size"?: import("csstype").Property.ContainIntrinsicSize<string | number>;
        "flex-flow"?: import("csstype").Property.FlexFlow;
        "grid-area"?: import("csstype").Property.GridArea;
        "grid-column"?: import("csstype").Property.GridColumn;
        "grid-row"?: import("csstype").Property.GridRow;
        "grid-template"?: import("csstype").Property.GridTemplate;
        "inset-block"?: import("csstype").Property.InsetBlock<string | number>;
        "inset-inline"?: import("csstype").Property.InsetInline<string | number>;
        "line-clamp"?: import("csstype").Property.LineClamp;
        "list-style"?: import("csstype").Property.ListStyle;
        "margin-block"?: import("csstype").Property.MarginBlock<string | number>;
        "margin-inline"?: import("csstype").Property.MarginInline<string | number>;
        "mask-border"?: import("csstype").Property.MaskBorder;
        "overscroll-behavior"?: import("csstype").Property.OverscrollBehavior;
        "padding-block"?: import("csstype").Property.PaddingBlock<string | number>;
        "padding-inline"?: import("csstype").Property.PaddingInline<string | number>;
        "place-content"?: import("csstype").Property.PlaceContent;
        "place-items"?: import("csstype").Property.PlaceItems;
        "place-self"?: import("csstype").Property.PlaceSelf;
        "scroll-margin"?: import("csstype").Property.ScrollMargin<string | number>;
        "scroll-margin-block"?: import("csstype").Property.ScrollMarginBlock<string | number>;
        "scroll-margin-inline"?: import("csstype").Property.ScrollMarginInline<string | number>;
        "scroll-padding"?: import("csstype").Property.ScrollPadding<string | number>;
        "scroll-padding-block"?: import("csstype").Property.ScrollPaddingBlock<string | number>;
        "scroll-padding-inline"?: import("csstype").Property.ScrollPaddingInline<string | number>;
        "scroll-snap-margin"?: import("csstype").Property.ScrollMargin<string | number>;
        "scroll-timeline"?: import("csstype").Property.ScrollTimeline;
        "text-decoration"?: import("csstype").Property.TextDecoration<string | number>;
        "text-emphasis"?: import("csstype").Property.TextEmphasis;
        "view-timeline"?: import("csstype").Property.ViewTimeline;
        "-moz-animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "-moz-animation-direction"?: import("csstype").Property.AnimationDirection;
        "-moz-animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "-moz-animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "-moz-animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "-moz-animation-name"?: import("csstype").Property.AnimationName;
        "-moz-animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "-moz-animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "-moz-appearance"?: import("csstype").Property.MozAppearance;
        "-moz-binding"?: import("csstype").Property.MozBinding;
        "-moz-border-bottom-colors"?: import("csstype").Property.MozBorderBottomColors;
        "-moz-border-end-color"?: import("csstype").Property.BorderInlineEndColor;
        "-moz-border-end-style"?: import("csstype").Property.BorderInlineEndStyle;
        "-moz-border-end-width"?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        "-moz-border-left-colors"?: import("csstype").Property.MozBorderLeftColors;
        "-moz-border-right-colors"?: import("csstype").Property.MozBorderRightColors;
        "-moz-border-start-color"?: import("csstype").Property.BorderInlineStartColor;
        "-moz-border-start-style"?: import("csstype").Property.BorderInlineStartStyle;
        "-moz-border-top-colors"?: import("csstype").Property.MozBorderTopColors;
        "-moz-box-sizing"?: import("csstype").Property.BoxSizing;
        "-moz-column-count"?: import("csstype").Property.ColumnCount;
        "-moz-column-fill"?: import("csstype").Property.ColumnFill;
        "-moz-column-rule-color"?: import("csstype").Property.ColumnRuleColor;
        "-moz-column-rule-style"?: import("csstype").Property.ColumnRuleStyle;
        "-moz-column-rule-width"?: import("csstype").Property.ColumnRuleWidth<string | number>;
        "-moz-column-width"?: import("csstype").Property.ColumnWidth<string | number>;
        "-moz-context-properties"?: import("csstype").Property.MozContextProperties;
        "-moz-font-feature-settings"?: import("csstype").Property.FontFeatureSettings;
        "-moz-font-language-override"?: import("csstype").Property.FontLanguageOverride;
        "-moz-hyphens"?: import("csstype").Property.Hyphens;
        "-moz-image-region"?: import("csstype").Property.MozImageRegion;
        "-moz-margin-end"?: import("csstype").Property.MarginInlineEnd<string | number>;
        "-moz-margin-start"?: import("csstype").Property.MarginInlineStart<string | number>;
        "-moz-orient"?: import("csstype").Property.MozOrient;
        "-moz-osx-font-smoothing"?: import("csstype").Property.FontSmooth<string | number>;
        "-moz-outline-radius-bottomleft"?: import("csstype").Property.MozOutlineRadiusBottomleft<string | number>;
        "-moz-outline-radius-bottomright"?: import("csstype").Property.MozOutlineRadiusBottomright<string | number>;
        "-moz-outline-radius-topleft"?: import("csstype").Property.MozOutlineRadiusTopleft<string | number>;
        "-moz-outline-radius-topright"?: import("csstype").Property.MozOutlineRadiusTopright<string | number>;
        "-moz-padding-end"?: import("csstype").Property.PaddingInlineEnd<string | number>;
        "-moz-padding-start"?: import("csstype").Property.PaddingInlineStart<string | number>;
        "-moz-stack-sizing"?: import("csstype").Property.MozStackSizing;
        "-moz-tab-size"?: import("csstype").Property.TabSize<string | number>;
        "-moz-text-blink"?: import("csstype").Property.MozTextBlink;
        "-moz-text-size-adjust"?: import("csstype").Property.TextSizeAdjust;
        "-moz-user-focus"?: import("csstype").Property.MozUserFocus;
        "-moz-user-modify"?: import("csstype").Property.MozUserModify;
        "-moz-user-select"?: import("csstype").Property.UserSelect;
        "-moz-window-dragging"?: import("csstype").Property.MozWindowDragging;
        "-moz-window-shadow"?: import("csstype").Property.MozWindowShadow;
        "-ms-accelerator"?: import("csstype").Property.MsAccelerator;
        "-ms-block-progression"?: import("csstype").Property.MsBlockProgression;
        "-ms-content-zoom-chaining"?: import("csstype").Property.MsContentZoomChaining;
        "-ms-content-zoom-limit-max"?: import("csstype").Property.MsContentZoomLimitMax;
        "-ms-content-zoom-limit-min"?: import("csstype").Property.MsContentZoomLimitMin;
        "-ms-content-zoom-snap-points"?: import("csstype").Property.MsContentZoomSnapPoints;
        "-ms-content-zoom-snap-type"?: import("csstype").Property.MsContentZoomSnapType;
        "-ms-content-zooming"?: import("csstype").Property.MsContentZooming;
        "-ms-filter"?: import("csstype").Property.MsFilter;
        "-ms-flex-direction"?: import("csstype").Property.FlexDirection;
        "-ms-flex-positive"?: import("csstype").Property.FlexGrow;
        "-ms-flow-from"?: import("csstype").Property.MsFlowFrom;
        "-ms-flow-into"?: import("csstype").Property.MsFlowInto;
        "-ms-grid-columns"?: import("csstype").Property.MsGridColumns<string | number>;
        "-ms-grid-rows"?: import("csstype").Property.MsGridRows<string | number>;
        "-ms-high-contrast-adjust"?: import("csstype").Property.MsHighContrastAdjust;
        "-ms-hyphenate-limit-chars"?: import("csstype").Property.MsHyphenateLimitChars;
        "-ms-hyphenate-limit-lines"?: import("csstype").Property.MsHyphenateLimitLines;
        "-ms-hyphenate-limit-zone"?: import("csstype").Property.MsHyphenateLimitZone<string | number>;
        "-ms-hyphens"?: import("csstype").Property.Hyphens;
        "-ms-ime-align"?: import("csstype").Property.MsImeAlign;
        "-ms-line-break"?: import("csstype").Property.LineBreak;
        "-ms-order"?: import("csstype").Property.Order;
        "-ms-overflow-style"?: import("csstype").Property.MsOverflowStyle;
        "-ms-overflow-x"?: import("csstype").Property.OverflowX;
        "-ms-overflow-y"?: import("csstype").Property.OverflowY;
        "-ms-scroll-chaining"?: import("csstype").Property.MsScrollChaining;
        "-ms-scroll-limit-x-max"?: import("csstype").Property.MsScrollLimitXMax<string | number>;
        "-ms-scroll-limit-x-min"?: import("csstype").Property.MsScrollLimitXMin<string | number>;
        "-ms-scroll-limit-y-max"?: import("csstype").Property.MsScrollLimitYMax<string | number>;
        "-ms-scroll-limit-y-min"?: import("csstype").Property.MsScrollLimitYMin<string | number>;
        "-ms-scroll-rails"?: import("csstype").Property.MsScrollRails;
        "-ms-scroll-snap-points-x"?: import("csstype").Property.MsScrollSnapPointsX;
        "-ms-scroll-snap-points-y"?: import("csstype").Property.MsScrollSnapPointsY;
        "-ms-scroll-snap-type"?: import("csstype").Property.MsScrollSnapType;
        "-ms-scroll-translation"?: import("csstype").Property.MsScrollTranslation;
        "-ms-scrollbar-3dlight-color"?: import("csstype").Property.MsScrollbar3dlightColor;
        "-ms-scrollbar-arrow-color"?: import("csstype").Property.MsScrollbarArrowColor;
        "-ms-scrollbar-base-color"?: import("csstype").Property.MsScrollbarBaseColor;
        "-ms-scrollbar-darkshadow-color"?: import("csstype").Property.MsScrollbarDarkshadowColor;
        "-ms-scrollbar-face-color"?: import("csstype").Property.MsScrollbarFaceColor;
        "-ms-scrollbar-highlight-color"?: import("csstype").Property.MsScrollbarHighlightColor;
        "-ms-scrollbar-shadow-color"?: import("csstype").Property.MsScrollbarShadowColor;
        "-ms-scrollbar-track-color"?: import("csstype").Property.MsScrollbarTrackColor;
        "-ms-text-autospace"?: import("csstype").Property.MsTextAutospace;
        "-ms-text-combine-horizontal"?: import("csstype").Property.TextCombineUpright;
        "-ms-text-overflow"?: import("csstype").Property.TextOverflow;
        "-ms-touch-action"?: import("csstype").Property.TouchAction;
        "-ms-touch-select"?: import("csstype").Property.MsTouchSelect;
        "-ms-transform"?: import("csstype").Property.Transform;
        "-ms-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-ms-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-ms-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-ms-transition-property"?: import("csstype").Property.TransitionProperty;
        "-ms-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-ms-user-select"?: import("csstype").Property.MsUserSelect;
        "-ms-word-break"?: import("csstype").Property.WordBreak;
        "-ms-wrap-flow"?: import("csstype").Property.MsWrapFlow;
        "-ms-wrap-margin"?: import("csstype").Property.MsWrapMargin<string | number>;
        "-ms-wrap-through"?: import("csstype").Property.MsWrapThrough;
        "-ms-writing-mode"?: import("csstype").Property.WritingMode;
        "-webkit-align-content"?: import("csstype").Property.AlignContent;
        "-webkit-align-items"?: import("csstype").Property.AlignItems;
        "-webkit-align-self"?: import("csstype").Property.AlignSelf;
        "-webkit-animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "-webkit-animation-direction"?: import("csstype").Property.AnimationDirection;
        "-webkit-animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "-webkit-animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "-webkit-animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "-webkit-animation-name"?: import("csstype").Property.AnimationName;
        "-webkit-animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "-webkit-animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "-webkit-appearance"?: import("csstype").Property.WebkitAppearance;
        "-webkit-backdrop-filter"?: import("csstype").Property.BackdropFilter;
        "-webkit-backface-visibility"?: import("csstype").Property.BackfaceVisibility;
        "-webkit-background-clip"?: import("csstype").Property.BackgroundClip;
        "-webkit-background-origin"?: import("csstype").Property.BackgroundOrigin;
        "-webkit-background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "-webkit-border-before-color"?: import("csstype").Property.WebkitBorderBeforeColor;
        "-webkit-border-before-style"?: import("csstype").Property.WebkitBorderBeforeStyle;
        "-webkit-border-before-width"?: import("csstype").Property.WebkitBorderBeforeWidth<string | number>;
        "-webkit-border-bottom-left-radius"?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        "-webkit-border-bottom-right-radius"?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        "-webkit-border-image-slice"?: import("csstype").Property.BorderImageSlice;
        "-webkit-border-top-left-radius"?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        "-webkit-border-top-right-radius"?: import("csstype").Property.BorderTopRightRadius<string | number>;
        "-webkit-box-decoration-break"?: import("csstype").Property.BoxDecorationBreak;
        "-webkit-box-reflect"?: import("csstype").Property.WebkitBoxReflect<string | number>;
        "-webkit-box-shadow"?: import("csstype").Property.BoxShadow;
        "-webkit-box-sizing"?: import("csstype").Property.BoxSizing;
        "-webkit-clip-path"?: import("csstype").Property.ClipPath;
        "-webkit-column-count"?: import("csstype").Property.ColumnCount;
        "-webkit-column-fill"?: import("csstype").Property.ColumnFill;
        "-webkit-column-rule-color"?: import("csstype").Property.ColumnRuleColor;
        "-webkit-column-rule-style"?: import("csstype").Property.ColumnRuleStyle;
        "-webkit-column-rule-width"?: import("csstype").Property.ColumnRuleWidth<string | number>;
        "-webkit-column-span"?: import("csstype").Property.ColumnSpan;
        "-webkit-column-width"?: import("csstype").Property.ColumnWidth<string | number>;
        "-webkit-filter"?: import("csstype").Property.Filter;
        "-webkit-flex-basis"?: import("csstype").Property.FlexBasis<string | number>;
        "-webkit-flex-direction"?: import("csstype").Property.FlexDirection;
        "-webkit-flex-grow"?: import("csstype").Property.FlexGrow;
        "-webkit-flex-shrink"?: import("csstype").Property.FlexShrink;
        "-webkit-flex-wrap"?: import("csstype").Property.FlexWrap;
        "-webkit-font-feature-settings"?: import("csstype").Property.FontFeatureSettings;
        "-webkit-font-kerning"?: import("csstype").Property.FontKerning;
        "-webkit-font-smoothing"?: import("csstype").Property.FontSmooth<string | number>;
        "-webkit-font-variant-ligatures"?: import("csstype").Property.FontVariantLigatures;
        "-webkit-hyphenate-character"?: import("csstype").Property.HyphenateCharacter;
        "-webkit-hyphens"?: import("csstype").Property.Hyphens;
        "-webkit-initial-letter"?: import("csstype").Property.InitialLetter;
        "-webkit-justify-content"?: import("csstype").Property.JustifyContent;
        "-webkit-line-break"?: import("csstype").Property.LineBreak;
        "-webkit-line-clamp"?: import("csstype").Property.WebkitLineClamp;
        "-webkit-margin-end"?: import("csstype").Property.MarginInlineEnd<string | number>;
        "-webkit-margin-start"?: import("csstype").Property.MarginInlineStart<string | number>;
        "-webkit-mask-attachment"?: import("csstype").Property.WebkitMaskAttachment;
        "-webkit-mask-box-image-outset"?: import("csstype").Property.MaskBorderOutset<string | number>;
        "-webkit-mask-box-image-repeat"?: import("csstype").Property.MaskBorderRepeat;
        "-webkit-mask-box-image-slice"?: import("csstype").Property.MaskBorderSlice;
        "-webkit-mask-box-image-source"?: import("csstype").Property.MaskBorderSource;
        "-webkit-mask-box-image-width"?: import("csstype").Property.MaskBorderWidth<string | number>;
        "-webkit-mask-clip"?: import("csstype").Property.WebkitMaskClip;
        "-webkit-mask-composite"?: import("csstype").Property.WebkitMaskComposite;
        "-webkit-mask-image"?: import("csstype").Property.WebkitMaskImage;
        "-webkit-mask-origin"?: import("csstype").Property.WebkitMaskOrigin;
        "-webkit-mask-position"?: import("csstype").Property.WebkitMaskPosition<string | number>;
        "-webkit-mask-position-x"?: import("csstype").Property.WebkitMaskPositionX<string | number>;
        "-webkit-mask-position-y"?: import("csstype").Property.WebkitMaskPositionY<string | number>;
        "-webkit-mask-repeat"?: import("csstype").Property.WebkitMaskRepeat;
        "-webkit-mask-repeat-x"?: import("csstype").Property.WebkitMaskRepeatX;
        "-webkit-mask-repeat-y"?: import("csstype").Property.WebkitMaskRepeatY;
        "-webkit-mask-size"?: import("csstype").Property.WebkitMaskSize<string | number>;
        "-webkit-max-inline-size"?: import("csstype").Property.MaxInlineSize<string | number>;
        "-webkit-order"?: import("csstype").Property.Order;
        "-webkit-overflow-scrolling"?: import("csstype").Property.WebkitOverflowScrolling;
        "-webkit-padding-end"?: import("csstype").Property.PaddingInlineEnd<string | number>;
        "-webkit-padding-start"?: import("csstype").Property.PaddingInlineStart<string | number>;
        "-webkit-perspective"?: import("csstype").Property.Perspective<string | number>;
        "-webkit-perspective-origin"?: import("csstype").Property.PerspectiveOrigin<string | number>;
        "-webkit-print-color-adjust"?: import("csstype").Property.PrintColorAdjust;
        "-webkit-ruby-position"?: import("csstype").Property.RubyPosition;
        "-webkit-scroll-snap-type"?: import("csstype").Property.ScrollSnapType;
        "-webkit-shape-margin"?: import("csstype").Property.ShapeMargin<string | number>;
        "-webkit-tap-highlight-color"?: import("csstype").Property.WebkitTapHighlightColor;
        "-webkit-text-combine"?: import("csstype").Property.TextCombineUpright;
        "-webkit-text-decoration-color"?: import("csstype").Property.TextDecorationColor;
        "-webkit-text-decoration-line"?: import("csstype").Property.TextDecorationLine;
        "-webkit-text-decoration-skip"?: import("csstype").Property.TextDecorationSkip;
        "-webkit-text-decoration-style"?: import("csstype").Property.TextDecorationStyle;
        "-webkit-text-emphasis-color"?: import("csstype").Property.TextEmphasisColor;
        "-webkit-text-emphasis-position"?: import("csstype").Property.TextEmphasisPosition;
        "-webkit-text-emphasis-style"?: import("csstype").Property.TextEmphasisStyle;
        "-webkit-text-fill-color"?: import("csstype").Property.WebkitTextFillColor;
        "-webkit-text-orientation"?: import("csstype").Property.TextOrientation;
        "-webkit-text-size-adjust"?: import("csstype").Property.TextSizeAdjust;
        "-webkit-text-stroke-color"?: import("csstype").Property.WebkitTextStrokeColor;
        "-webkit-text-stroke-width"?: import("csstype").Property.WebkitTextStrokeWidth<string | number>;
        "-webkit-text-underline-position"?: import("csstype").Property.TextUnderlinePosition;
        "-webkit-touch-callout"?: import("csstype").Property.WebkitTouchCallout;
        "-webkit-transform"?: import("csstype").Property.Transform;
        "-webkit-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-webkit-transform-style"?: import("csstype").Property.TransformStyle;
        "-webkit-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-webkit-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-webkit-transition-property"?: import("csstype").Property.TransitionProperty;
        "-webkit-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-webkit-user-modify"?: import("csstype").Property.WebkitUserModify;
        "-webkit-user-select"?: import("csstype").Property.UserSelect;
        "-webkit-writing-mode"?: import("csstype").Property.WritingMode;
        "-moz-animation"?: import("csstype").Property.Animation<string & {}>;
        "-moz-border-image"?: import("csstype").Property.BorderImage;
        "-moz-column-rule"?: import("csstype").Property.ColumnRule<string | number>;
        "-moz-columns"?: import("csstype").Property.Columns<string | number>;
        "-moz-outline-radius"?: import("csstype").Property.MozOutlineRadius<string | number>;
        "-ms-content-zoom-limit"?: import("csstype").Property.MsContentZoomLimit;
        "-ms-content-zoom-snap"?: import("csstype").Property.MsContentZoomSnap;
        "-ms-flex"?: import("csstype").Property.Flex<string | number>;
        "-ms-scroll-limit"?: import("csstype").Property.MsScrollLimit;
        "-ms-scroll-snap-x"?: import("csstype").Property.MsScrollSnapX;
        "-ms-scroll-snap-y"?: import("csstype").Property.MsScrollSnapY;
        "-ms-transition"?: import("csstype").Property.Transition<string & {}>;
        "-webkit-animation"?: import("csstype").Property.Animation<string & {}>;
        "-webkit-border-before"?: import("csstype").Property.WebkitBorderBefore<string | number>;
        "-webkit-border-image"?: import("csstype").Property.BorderImage;
        "-webkit-border-radius"?: import("csstype").Property.BorderRadius<string | number>;
        "-webkit-column-rule"?: import("csstype").Property.ColumnRule<string | number>;
        "-webkit-columns"?: import("csstype").Property.Columns<string | number>;
        "-webkit-flex"?: import("csstype").Property.Flex<string | number>;
        "-webkit-flex-flow"?: import("csstype").Property.FlexFlow;
        "-webkit-mask"?: import("csstype").Property.WebkitMask<string | number>;
        "-webkit-mask-box-image"?: import("csstype").Property.MaskBorder;
        "-webkit-text-emphasis"?: import("csstype").Property.TextEmphasis;
        "-webkit-text-stroke"?: import("csstype").Property.WebkitTextStroke<string | number>;
        "-webkit-transition"?: import("csstype").Property.Transition<string & {}>;
        "box-align"?: import("csstype").Property.BoxAlign;
        "box-direction"?: import("csstype").Property.BoxDirection;
        "box-flex"?: import("csstype").Property.BoxFlex;
        "box-flex-group"?: import("csstype").Property.BoxFlexGroup;
        "box-lines"?: import("csstype").Property.BoxLines;
        "box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "box-orient"?: import("csstype").Property.BoxOrient;
        "box-pack"?: import("csstype").Property.BoxPack;
        "grid-column-gap"?: import("csstype").Property.GridColumnGap<string | number>;
        "grid-gap"?: import("csstype").Property.GridGap<string | number>;
        "grid-row-gap"?: import("csstype").Property.GridRowGap<string | number>;
        "ime-mode"?: import("csstype").Property.ImeMode;
        "offset-block"?: import("csstype").Property.InsetBlock<string | number>;
        "offset-block-end"?: import("csstype").Property.InsetBlockEnd<string | number>;
        "offset-block-start"?: import("csstype").Property.InsetBlockStart<string | number>;
        "offset-inline"?: import("csstype").Property.InsetInline<string | number>;
        "offset-inline-end"?: import("csstype").Property.InsetInlineEnd<string | number>;
        "offset-inline-start"?: import("csstype").Property.InsetInlineStart<string | number>;
        "scroll-snap-coordinate"?: import("csstype").Property.ScrollSnapCoordinate<string | number>;
        "scroll-snap-destination"?: import("csstype").Property.ScrollSnapDestination<string | number>;
        "scroll-snap-points-x"?: import("csstype").Property.ScrollSnapPointsX;
        "scroll-snap-points-y"?: import("csstype").Property.ScrollSnapPointsY;
        "scroll-snap-type-x"?: import("csstype").Property.ScrollSnapTypeX;
        "scroll-snap-type-y"?: import("csstype").Property.ScrollSnapTypeY;
        "-khtml-box-align"?: import("csstype").Property.BoxAlign;
        "-khtml-box-direction"?: import("csstype").Property.BoxDirection;
        "-khtml-box-flex"?: import("csstype").Property.BoxFlex;
        "-khtml-box-flex-group"?: import("csstype").Property.BoxFlexGroup;
        "-khtml-box-lines"?: import("csstype").Property.BoxLines;
        "-khtml-box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "-khtml-box-orient"?: import("csstype").Property.BoxOrient;
        "-khtml-box-pack"?: import("csstype").Property.BoxPack;
        "-khtml-line-break"?: import("csstype").Property.LineBreak;
        "-khtml-opacity"?: import("csstype").Property.Opacity;
        "-khtml-user-select"?: import("csstype").Property.UserSelect;
        "-moz-backface-visibility"?: import("csstype").Property.BackfaceVisibility;
        "-moz-background-clip"?: import("csstype").Property.BackgroundClip;
        "-moz-background-inline-policy"?: import("csstype").Property.BoxDecorationBreak;
        "-moz-background-origin"?: import("csstype").Property.BackgroundOrigin;
        "-moz-background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "-moz-border-radius"?: import("csstype").Property.BorderRadius<string | number>;
        "-moz-border-radius-bottomleft"?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        "-moz-border-radius-bottomright"?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        "-moz-border-radius-topleft"?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        "-moz-border-radius-topright"?: import("csstype").Property.BorderTopRightRadius<string | number>;
        "-moz-box-align"?: import("csstype").Property.BoxAlign;
        "-moz-box-direction"?: import("csstype").Property.BoxDirection;
        "-moz-box-flex"?: import("csstype").Property.BoxFlex;
        "-moz-box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "-moz-box-orient"?: import("csstype").Property.BoxOrient;
        "-moz-box-pack"?: import("csstype").Property.BoxPack;
        "-moz-box-shadow"?: import("csstype").Property.BoxShadow;
        "-moz-float-edge"?: import("csstype").Property.MozFloatEdge;
        "-moz-force-broken-image-icon"?: import("csstype").Property.MozForceBrokenImageIcon;
        "-moz-opacity"?: import("csstype").Property.Opacity;
        "-moz-outline"?: import("csstype").Property.Outline<string | number>;
        "-moz-outline-color"?: import("csstype").Property.OutlineColor;
        "-moz-outline-style"?: import("csstype").Property.OutlineStyle;
        "-moz-outline-width"?: import("csstype").Property.OutlineWidth<string | number>;
        "-moz-perspective"?: import("csstype").Property.Perspective<string | number>;
        "-moz-perspective-origin"?: import("csstype").Property.PerspectiveOrigin<string | number>;
        "-moz-text-align-last"?: import("csstype").Property.TextAlignLast;
        "-moz-text-decoration-color"?: import("csstype").Property.TextDecorationColor;
        "-moz-text-decoration-line"?: import("csstype").Property.TextDecorationLine;
        "-moz-text-decoration-style"?: import("csstype").Property.TextDecorationStyle;
        "-moz-transform"?: import("csstype").Property.Transform;
        "-moz-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-moz-transform-style"?: import("csstype").Property.TransformStyle;
        "-moz-transition"?: import("csstype").Property.Transition<string & {}>;
        "-moz-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-moz-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-moz-transition-property"?: import("csstype").Property.TransitionProperty;
        "-moz-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-moz-user-input"?: import("csstype").Property.MozUserInput;
        "-ms-ime-mode"?: import("csstype").Property.ImeMode;
        "-o-animation"?: import("csstype").Property.Animation<string & {}>;
        "-o-animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "-o-animation-direction"?: import("csstype").Property.AnimationDirection;
        "-o-animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "-o-animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "-o-animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "-o-animation-name"?: import("csstype").Property.AnimationName;
        "-o-animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "-o-animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "-o-background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "-o-border-image"?: import("csstype").Property.BorderImage;
        "-o-object-fit"?: import("csstype").Property.ObjectFit;
        "-o-object-position"?: import("csstype").Property.ObjectPosition<string | number>;
        "-o-tab-size"?: import("csstype").Property.TabSize<string | number>;
        "-o-text-overflow"?: import("csstype").Property.TextOverflow;
        "-o-transform"?: import("csstype").Property.Transform;
        "-o-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-o-transition"?: import("csstype").Property.Transition<string & {}>;
        "-o-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-o-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-o-transition-property"?: import("csstype").Property.TransitionProperty;
        "-o-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-webkit-box-align"?: import("csstype").Property.BoxAlign;
        "-webkit-box-direction"?: import("csstype").Property.BoxDirection;
        "-webkit-box-flex"?: import("csstype").Property.BoxFlex;
        "-webkit-box-flex-group"?: import("csstype").Property.BoxFlexGroup;
        "-webkit-box-lines"?: import("csstype").Property.BoxLines;
        "-webkit-box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "-webkit-box-orient"?: import("csstype").Property.BoxOrient;
        "-webkit-box-pack"?: import("csstype").Property.BoxPack;
        "alignment-baseline"?: import("csstype").Property.AlignmentBaseline;
        "baseline-shift"?: import("csstype").Property.BaselineShift<string | number>;
        "clip-rule"?: import("csstype").Property.ClipRule;
        "color-interpolation"?: import("csstype").Property.ColorInterpolation;
        "color-rendering"?: import("csstype").Property.ColorRendering;
        "dominant-baseline"?: import("csstype").Property.DominantBaseline;
        "fill-opacity"?: import("csstype").Property.FillOpacity;
        "fill-rule"?: import("csstype").Property.FillRule;
        "flood-color"?: import("csstype").Property.FloodColor;
        "flood-opacity"?: import("csstype").Property.FloodOpacity;
        "glyph-orientation-vertical"?: import("csstype").Property.GlyphOrientationVertical;
        "lighting-color"?: import("csstype").Property.LightingColor;
        "marker-end"?: import("csstype").Property.MarkerEnd;
        "marker-mid"?: import("csstype").Property.MarkerMid;
        "marker-start"?: import("csstype").Property.MarkerStart;
        "shape-rendering"?: import("csstype").Property.ShapeRendering;
        "stop-color"?: import("csstype").Property.StopColor;
        "stop-opacity"?: import("csstype").Property.StopOpacity;
        "stroke-dasharray"?: import("csstype").Property.StrokeDasharray<string | number>;
        "stroke-dashoffset"?: import("csstype").Property.StrokeDashoffset<string | number>;
        "stroke-linecap"?: import("csstype").Property.StrokeLinecap;
        "stroke-linejoin"?: import("csstype").Property.StrokeLinejoin;
        "stroke-miterlimit"?: import("csstype").Property.StrokeMiterlimit;
        "stroke-opacity"?: import("csstype").Property.StrokeOpacity;
        "stroke-width"?: import("csstype").Property.StrokeWidth<string | number>;
        "text-anchor"?: import("csstype").Property.TextAnchor;
        "vector-effect"?: import("csstype").Property.VectorEffect;
    }, CSSProperties | {
        [x: `--${string}`]: string | number;
        accentColor?: import("csstype").Property.AccentColor;
        alignContent?: import("csstype").Property.AlignContent;
        alignItems?: import("csstype").Property.AlignItems;
        alignSelf?: import("csstype").Property.AlignSelf;
        alignTracks?: import("csstype").Property.AlignTracks;
        animationComposition?: import("csstype").Property.AnimationComposition;
        animationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        animationDirection?: import("csstype").Property.AnimationDirection;
        animationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        animationFillMode?: import("csstype").Property.AnimationFillMode;
        animationIterationCount?: import("csstype").Property.AnimationIterationCount;
        animationName?: import("csstype").Property.AnimationName;
        animationPlayState?: import("csstype").Property.AnimationPlayState;
        animationRangeEnd?: import("csstype").Property.AnimationRangeEnd<string | number>;
        animationRangeStart?: import("csstype").Property.AnimationRangeStart<string | number>;
        animationTimeline?: import("csstype").Property.AnimationTimeline;
        animationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        appearance?: import("csstype").Property.Appearance;
        aspectRatio?: import("csstype").Property.AspectRatio;
        backdropFilter?: import("csstype").Property.BackdropFilter;
        backfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        backgroundAttachment?: import("csstype").Property.BackgroundAttachment;
        backgroundBlendMode?: import("csstype").Property.BackgroundBlendMode;
        backgroundClip?: import("csstype").Property.BackgroundClip;
        backgroundColor?: import("csstype").Property.BackgroundColor;
        backgroundImage?: import("csstype").Property.BackgroundImage;
        backgroundOrigin?: import("csstype").Property.BackgroundOrigin;
        backgroundPositionX?: import("csstype").Property.BackgroundPositionX<string | number>;
        backgroundPositionY?: import("csstype").Property.BackgroundPositionY<string | number>;
        backgroundRepeat?: import("csstype").Property.BackgroundRepeat;
        backgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        blockOverflow?: import("csstype").Property.BlockOverflow;
        blockSize?: import("csstype").Property.BlockSize<string | number>;
        borderBlockColor?: import("csstype").Property.BorderBlockColor;
        borderBlockEndColor?: import("csstype").Property.BorderBlockEndColor;
        borderBlockEndStyle?: import("csstype").Property.BorderBlockEndStyle;
        borderBlockEndWidth?: import("csstype").Property.BorderBlockEndWidth<string | number>;
        borderBlockStartColor?: import("csstype").Property.BorderBlockStartColor;
        borderBlockStartStyle?: import("csstype").Property.BorderBlockStartStyle;
        borderBlockStartWidth?: import("csstype").Property.BorderBlockStartWidth<string | number>;
        borderBlockStyle?: import("csstype").Property.BorderBlockStyle;
        borderBlockWidth?: import("csstype").Property.BorderBlockWidth<string | number>;
        borderBottomColor?: import("csstype").Property.BorderBottomColor;
        borderBottomLeftRadius?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        borderBottomRightRadius?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        borderBottomStyle?: import("csstype").Property.BorderBottomStyle;
        borderBottomWidth?: import("csstype").Property.BorderBottomWidth<string | number>;
        borderCollapse?: import("csstype").Property.BorderCollapse;
        borderEndEndRadius?: import("csstype").Property.BorderEndEndRadius<string | number>;
        borderEndStartRadius?: import("csstype").Property.BorderEndStartRadius<string | number>;
        borderImageOutset?: import("csstype").Property.BorderImageOutset<string | number>;
        borderImageRepeat?: import("csstype").Property.BorderImageRepeat;
        borderImageSlice?: import("csstype").Property.BorderImageSlice;
        borderImageSource?: import("csstype").Property.BorderImageSource;
        borderImageWidth?: import("csstype").Property.BorderImageWidth<string | number>;
        borderInlineColor?: import("csstype").Property.BorderInlineColor;
        borderInlineEndColor?: import("csstype").Property.BorderInlineEndColor;
        borderInlineEndStyle?: import("csstype").Property.BorderInlineEndStyle;
        borderInlineEndWidth?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        borderInlineStartColor?: import("csstype").Property.BorderInlineStartColor;
        borderInlineStartStyle?: import("csstype").Property.BorderInlineStartStyle;
        borderInlineStartWidth?: import("csstype").Property.BorderInlineStartWidth<string | number>;
        borderInlineStyle?: import("csstype").Property.BorderInlineStyle;
        borderInlineWidth?: import("csstype").Property.BorderInlineWidth<string | number>;
        borderLeftColor?: import("csstype").Property.BorderLeftColor;
        borderLeftStyle?: import("csstype").Property.BorderLeftStyle;
        borderLeftWidth?: import("csstype").Property.BorderLeftWidth<string | number>;
        borderRightColor?: import("csstype").Property.BorderRightColor;
        borderRightStyle?: import("csstype").Property.BorderRightStyle;
        borderRightWidth?: import("csstype").Property.BorderRightWidth<string | number>;
        borderSpacing?: import("csstype").Property.BorderSpacing<string | number>;
        borderStartEndRadius?: import("csstype").Property.BorderStartEndRadius<string | number>;
        borderStartStartRadius?: import("csstype").Property.BorderStartStartRadius<string | number>;
        borderTopColor?: import("csstype").Property.BorderTopColor;
        borderTopLeftRadius?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        borderTopRightRadius?: import("csstype").Property.BorderTopRightRadius<string | number>;
        borderTopStyle?: import("csstype").Property.BorderTopStyle;
        borderTopWidth?: import("csstype").Property.BorderTopWidth<string | number>;
        bottom?: import("csstype").Property.Bottom<string | number>;
        boxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        boxShadow?: import("csstype").Property.BoxShadow;
        boxSizing?: import("csstype").Property.BoxSizing;
        breakAfter?: import("csstype").Property.BreakAfter;
        breakBefore?: import("csstype").Property.BreakBefore;
        breakInside?: import("csstype").Property.BreakInside;
        captionSide?: import("csstype").Property.CaptionSide;
        caretColor?: import("csstype").Property.CaretColor;
        caretShape?: import("csstype").Property.CaretShape;
        clear?: import("csstype").Property.Clear;
        clipPath?: import("csstype").Property.ClipPath;
        color?: import("csstype").Property.Color;
        colorAdjust?: import("csstype").Property.PrintColorAdjust;
        colorScheme?: import("csstype").Property.ColorScheme;
        columnCount?: import("csstype").Property.ColumnCount;
        columnFill?: import("csstype").Property.ColumnFill;
        columnGap?: import("csstype").Property.ColumnGap<string | number>;
        columnRuleColor?: import("csstype").Property.ColumnRuleColor;
        columnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        columnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number>;
        columnSpan?: import("csstype").Property.ColumnSpan;
        columnWidth?: import("csstype").Property.ColumnWidth<string | number>;
        contain?: import("csstype").Property.Contain;
        containIntrinsicBlockSize?: import("csstype").Property.ContainIntrinsicBlockSize<string | number>;
        containIntrinsicHeight?: import("csstype").Property.ContainIntrinsicHeight<string | number>;
        containIntrinsicInlineSize?: import("csstype").Property.ContainIntrinsicInlineSize<string | number>;
        containIntrinsicWidth?: import("csstype").Property.ContainIntrinsicWidth<string | number>;
        containerName?: import("csstype").Property.ContainerName;
        containerType?: import("csstype").Property.ContainerType;
        content?: import("csstype").Property.Content;
        contentVisibility?: import("csstype").Property.ContentVisibility;
        counterIncrement?: import("csstype").Property.CounterIncrement;
        counterReset?: import("csstype").Property.CounterReset;
        counterSet?: import("csstype").Property.CounterSet;
        cursor?: import("csstype").Property.Cursor;
        direction?: import("csstype").Property.Direction;
        display?: import("csstype").Property.Display;
        emptyCells?: import("csstype").Property.EmptyCells;
        filter?: import("csstype").Property.Filter;
        flexBasis?: import("csstype").Property.FlexBasis<string | number>;
        flexDirection?: import("csstype").Property.FlexDirection;
        flexGrow?: import("csstype").Property.FlexGrow;
        flexShrink?: import("csstype").Property.FlexShrink;
        flexWrap?: import("csstype").Property.FlexWrap;
        float?: import("csstype").Property.Float;
        fontFamily?: import("csstype").Property.FontFamily;
        fontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        fontKerning?: import("csstype").Property.FontKerning;
        fontLanguageOverride?: import("csstype").Property.FontLanguageOverride;
        fontOpticalSizing?: import("csstype").Property.FontOpticalSizing;
        fontPalette?: import("csstype").Property.FontPalette;
        fontSize?: import("csstype").Property.FontSize<string | number>;
        fontSizeAdjust?: import("csstype").Property.FontSizeAdjust;
        fontSmooth?: import("csstype").Property.FontSmooth<string | number>;
        fontStretch?: import("csstype").Property.FontStretch;
        fontStyle?: import("csstype").Property.FontStyle;
        fontSynthesis?: import("csstype").Property.FontSynthesis;
        fontSynthesisPosition?: import("csstype").Property.FontSynthesisPosition;
        fontSynthesisSmallCaps?: import("csstype").Property.FontSynthesisSmallCaps;
        fontSynthesisStyle?: import("csstype").Property.FontSynthesisStyle;
        fontSynthesisWeight?: import("csstype").Property.FontSynthesisWeight;
        fontVariant?: import("csstype").Property.FontVariant;
        fontVariantAlternates?: import("csstype").Property.FontVariantAlternates;
        fontVariantCaps?: import("csstype").Property.FontVariantCaps;
        fontVariantEastAsian?: import("csstype").Property.FontVariantEastAsian;
        fontVariantEmoji?: import("csstype").Property.FontVariantEmoji;
        fontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        fontVariantNumeric?: import("csstype").Property.FontVariantNumeric;
        fontVariantPosition?: import("csstype").Property.FontVariantPosition;
        fontVariationSettings?: import("csstype").Property.FontVariationSettings;
        fontWeight?: import("csstype").Property.FontWeight;
        forcedColorAdjust?: import("csstype").Property.ForcedColorAdjust;
        gridAutoColumns?: import("csstype").Property.GridAutoColumns<string | number>;
        gridAutoFlow?: import("csstype").Property.GridAutoFlow;
        gridAutoRows?: import("csstype").Property.GridAutoRows<string | number>;
        gridColumnEnd?: import("csstype").Property.GridColumnEnd;
        gridColumnStart?: import("csstype").Property.GridColumnStart;
        gridRowEnd?: import("csstype").Property.GridRowEnd;
        gridRowStart?: import("csstype").Property.GridRowStart;
        gridTemplateAreas?: import("csstype").Property.GridTemplateAreas;
        gridTemplateColumns?: import("csstype").Property.GridTemplateColumns<string | number>;
        gridTemplateRows?: import("csstype").Property.GridTemplateRows<string | number>;
        hangingPunctuation?: import("csstype").Property.HangingPunctuation;
        height?: import("csstype").Property.Height<string | number>;
        hyphenateCharacter?: import("csstype").Property.HyphenateCharacter;
        hyphenateLimitChars?: import("csstype").Property.HyphenateLimitChars;
        hyphens?: import("csstype").Property.Hyphens;
        imageOrientation?: import("csstype").Property.ImageOrientation;
        imageRendering?: import("csstype").Property.ImageRendering;
        imageResolution?: import("csstype").Property.ImageResolution;
        initialLetter?: import("csstype").Property.InitialLetter;
        inlineSize?: import("csstype").Property.InlineSize<string | number>;
        inputSecurity?: import("csstype").Property.InputSecurity;
        insetBlockEnd?: import("csstype").Property.InsetBlockEnd<string | number>;
        insetBlockStart?: import("csstype").Property.InsetBlockStart<string | number>;
        insetInlineEnd?: import("csstype").Property.InsetInlineEnd<string | number>;
        insetInlineStart?: import("csstype").Property.InsetInlineStart<string | number>;
        isolation?: import("csstype").Property.Isolation;
        justifyContent?: import("csstype").Property.JustifyContent;
        justifyItems?: import("csstype").Property.JustifyItems;
        justifySelf?: import("csstype").Property.JustifySelf;
        justifyTracks?: import("csstype").Property.JustifyTracks;
        left?: import("csstype").Property.Left<string | number>;
        letterSpacing?: import("csstype").Property.LetterSpacing<string | number>;
        lineBreak?: import("csstype").Property.LineBreak;
        lineHeight?: import("csstype").Property.LineHeight<string | number>;
        lineHeightStep?: import("csstype").Property.LineHeightStep<string | number>;
        listStyleImage?: import("csstype").Property.ListStyleImage;
        listStylePosition?: import("csstype").Property.ListStylePosition;
        listStyleType?: import("csstype").Property.ListStyleType;
        marginBlockEnd?: import("csstype").Property.MarginBlockEnd<string | number>;
        marginBlockStart?: import("csstype").Property.MarginBlockStart<string | number>;
        marginBottom?: import("csstype").Property.MarginBottom<string | number>;
        marginInlineEnd?: import("csstype").Property.MarginInlineEnd<string | number>;
        marginInlineStart?: import("csstype").Property.MarginInlineStart<string | number>;
        marginLeft?: import("csstype").Property.MarginLeft<string | number>;
        marginRight?: import("csstype").Property.MarginRight<string | number>;
        marginTop?: import("csstype").Property.MarginTop<string | number>;
        marginTrim?: import("csstype").Property.MarginTrim;
        maskBorderMode?: import("csstype").Property.MaskBorderMode;
        maskBorderOutset?: import("csstype").Property.MaskBorderOutset<string | number>;
        maskBorderRepeat?: import("csstype").Property.MaskBorderRepeat;
        maskBorderSlice?: import("csstype").Property.MaskBorderSlice;
        maskBorderSource?: import("csstype").Property.MaskBorderSource;
        maskBorderWidth?: import("csstype").Property.MaskBorderWidth<string | number>;
        maskClip?: import("csstype").Property.MaskClip;
        maskComposite?: import("csstype").Property.MaskComposite;
        maskImage?: import("csstype").Property.MaskImage;
        maskMode?: import("csstype").Property.MaskMode;
        maskOrigin?: import("csstype").Property.MaskOrigin;
        maskPosition?: import("csstype").Property.MaskPosition<string | number>;
        maskRepeat?: import("csstype").Property.MaskRepeat;
        maskSize?: import("csstype").Property.MaskSize<string | number>;
        maskType?: import("csstype").Property.MaskType;
        masonryAutoFlow?: import("csstype").Property.MasonryAutoFlow;
        mathDepth?: import("csstype").Property.MathDepth;
        mathShift?: import("csstype").Property.MathShift;
        mathStyle?: import("csstype").Property.MathStyle;
        maxBlockSize?: import("csstype").Property.MaxBlockSize<string | number>;
        maxHeight?: import("csstype").Property.MaxHeight<string | number>;
        maxInlineSize?: import("csstype").Property.MaxInlineSize<string | number>;
        maxLines?: import("csstype").Property.MaxLines;
        maxWidth?: import("csstype").Property.MaxWidth<string | number>;
        minBlockSize?: import("csstype").Property.MinBlockSize<string | number>;
        minHeight?: import("csstype").Property.MinHeight<string | number>;
        minInlineSize?: import("csstype").Property.MinInlineSize<string | number>;
        minWidth?: import("csstype").Property.MinWidth<string | number>;
        mixBlendMode?: import("csstype").Property.MixBlendMode;
        motionDistance?: import("csstype").Property.OffsetDistance<string | number>;
        motionPath?: import("csstype").Property.OffsetPath;
        motionRotation?: import("csstype").Property.OffsetRotate;
        objectFit?: import("csstype").Property.ObjectFit;
        objectPosition?: import("csstype").Property.ObjectPosition<string | number>;
        offsetAnchor?: import("csstype").Property.OffsetAnchor<string | number>;
        offsetDistance?: import("csstype").Property.OffsetDistance<string | number>;
        offsetPath?: import("csstype").Property.OffsetPath;
        offsetPosition?: import("csstype").Property.OffsetPosition<string | number>;
        offsetRotate?: import("csstype").Property.OffsetRotate;
        offsetRotation?: import("csstype").Property.OffsetRotate;
        opacity?: import("csstype").Property.Opacity;
        order?: import("csstype").Property.Order;
        orphans?: import("csstype").Property.Orphans;
        outlineColor?: import("csstype").Property.OutlineColor;
        outlineOffset?: import("csstype").Property.OutlineOffset<string | number>;
        outlineStyle?: import("csstype").Property.OutlineStyle;
        outlineWidth?: import("csstype").Property.OutlineWidth<string | number>;
        overflowAnchor?: import("csstype").Property.OverflowAnchor;
        overflowBlock?: import("csstype").Property.OverflowBlock;
        overflowClipBox?: import("csstype").Property.OverflowClipBox;
        overflowClipMargin?: import("csstype").Property.OverflowClipMargin<string | number>;
        overflowInline?: import("csstype").Property.OverflowInline;
        overflowWrap?: import("csstype").Property.OverflowWrap;
        overflowX?: import("csstype").Property.OverflowX;
        overflowY?: import("csstype").Property.OverflowY;
        overlay?: import("csstype").Property.Overlay;
        overscrollBehaviorBlock?: import("csstype").Property.OverscrollBehaviorBlock;
        overscrollBehaviorInline?: import("csstype").Property.OverscrollBehaviorInline;
        overscrollBehaviorX?: import("csstype").Property.OverscrollBehaviorX;
        overscrollBehaviorY?: import("csstype").Property.OverscrollBehaviorY;
        paddingBlockEnd?: import("csstype").Property.PaddingBlockEnd<string | number>;
        paddingBlockStart?: import("csstype").Property.PaddingBlockStart<string | number>;
        paddingBottom?: import("csstype").Property.PaddingBottom<string | number>;
        paddingInlineEnd?: import("csstype").Property.PaddingInlineEnd<string | number>;
        paddingInlineStart?: import("csstype").Property.PaddingInlineStart<string | number>;
        paddingLeft?: import("csstype").Property.PaddingLeft<string | number>;
        paddingRight?: import("csstype").Property.PaddingRight<string | number>;
        paddingTop?: import("csstype").Property.PaddingTop<string | number>;
        page?: import("csstype").Property.Page;
        pageBreakAfter?: import("csstype").Property.PageBreakAfter;
        pageBreakBefore?: import("csstype").Property.PageBreakBefore;
        pageBreakInside?: import("csstype").Property.PageBreakInside;
        paintOrder?: import("csstype").Property.PaintOrder;
        perspective?: import("csstype").Property.Perspective<string | number>;
        perspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number>;
        pointerEvents?: import("csstype").Property.PointerEvents;
        position?: import("csstype").Property.Position;
        printColorAdjust?: import("csstype").Property.PrintColorAdjust;
        quotes?: import("csstype").Property.Quotes;
        resize?: import("csstype").Property.Resize;
        right?: import("csstype").Property.Right<string | number>;
        rotate?: import("csstype").Property.Rotate;
        rowGap?: import("csstype").Property.RowGap<string | number>;
        rubyAlign?: import("csstype").Property.RubyAlign;
        rubyMerge?: import("csstype").Property.RubyMerge;
        rubyPosition?: import("csstype").Property.RubyPosition;
        scale?: import("csstype").Property.Scale;
        scrollBehavior?: import("csstype").Property.ScrollBehavior;
        scrollMarginBlockEnd?: import("csstype").Property.ScrollMarginBlockEnd<string | number>;
        scrollMarginBlockStart?: import("csstype").Property.ScrollMarginBlockStart<string | number>;
        scrollMarginBottom?: import("csstype").Property.ScrollMarginBottom<string | number>;
        scrollMarginInlineEnd?: import("csstype").Property.ScrollMarginInlineEnd<string | number>;
        scrollMarginInlineStart?: import("csstype").Property.ScrollMarginInlineStart<string | number>;
        scrollMarginLeft?: import("csstype").Property.ScrollMarginLeft<string | number>;
        scrollMarginRight?: import("csstype").Property.ScrollMarginRight<string | number>;
        scrollMarginTop?: import("csstype").Property.ScrollMarginTop<string | number>;
        scrollPaddingBlockEnd?: import("csstype").Property.ScrollPaddingBlockEnd<string | number>;
        scrollPaddingBlockStart?: import("csstype").Property.ScrollPaddingBlockStart<string | number>;
        scrollPaddingBottom?: import("csstype").Property.ScrollPaddingBottom<string | number>;
        scrollPaddingInlineEnd?: import("csstype").Property.ScrollPaddingInlineEnd<string | number>;
        scrollPaddingInlineStart?: import("csstype").Property.ScrollPaddingInlineStart<string | number>;
        scrollPaddingLeft?: import("csstype").Property.ScrollPaddingLeft<string | number>;
        scrollPaddingRight?: import("csstype").Property.ScrollPaddingRight<string | number>;
        scrollPaddingTop?: import("csstype").Property.ScrollPaddingTop<string | number>;
        scrollSnapAlign?: import("csstype").Property.ScrollSnapAlign;
        scrollSnapMarginBottom?: import("csstype").Property.ScrollMarginBottom<string | number>;
        scrollSnapMarginLeft?: import("csstype").Property.ScrollMarginLeft<string | number>;
        scrollSnapMarginRight?: import("csstype").Property.ScrollMarginRight<string | number>;
        scrollSnapMarginTop?: import("csstype").Property.ScrollMarginTop<string | number>;
        scrollSnapStop?: import("csstype").Property.ScrollSnapStop;
        scrollSnapType?: import("csstype").Property.ScrollSnapType;
        scrollTimelineAxis?: import("csstype").Property.ScrollTimelineAxis;
        scrollTimelineName?: import("csstype").Property.ScrollTimelineName;
        scrollbarColor?: import("csstype").Property.ScrollbarColor;
        scrollbarGutter?: import("csstype").Property.ScrollbarGutter;
        scrollbarWidth?: import("csstype").Property.ScrollbarWidth;
        shapeImageThreshold?: import("csstype").Property.ShapeImageThreshold;
        shapeMargin?: import("csstype").Property.ShapeMargin<string | number>;
        shapeOutside?: import("csstype").Property.ShapeOutside;
        tabSize?: import("csstype").Property.TabSize<string | number>;
        tableLayout?: import("csstype").Property.TableLayout;
        textAlign?: import("csstype").Property.TextAlign;
        textAlignLast?: import("csstype").Property.TextAlignLast;
        textCombineUpright?: import("csstype").Property.TextCombineUpright;
        textDecorationColor?: import("csstype").Property.TextDecorationColor;
        textDecorationLine?: import("csstype").Property.TextDecorationLine;
        textDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        textDecorationSkipInk?: import("csstype").Property.TextDecorationSkipInk;
        textDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        textDecorationThickness?: import("csstype").Property.TextDecorationThickness<string | number>;
        textEmphasisColor?: import("csstype").Property.TextEmphasisColor;
        textEmphasisPosition?: import("csstype").Property.TextEmphasisPosition;
        textEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        textIndent?: import("csstype").Property.TextIndent<string | number>;
        textJustify?: import("csstype").Property.TextJustify;
        textOrientation?: import("csstype").Property.TextOrientation;
        textOverflow?: import("csstype").Property.TextOverflow;
        textRendering?: import("csstype").Property.TextRendering;
        textShadow?: import("csstype").Property.TextShadow;
        textSizeAdjust?: import("csstype").Property.TextSizeAdjust;
        textTransform?: import("csstype").Property.TextTransform;
        textUnderlineOffset?: import("csstype").Property.TextUnderlineOffset<string | number>;
        textUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        textWrap?: import("csstype").Property.TextWrap;
        timelineScope?: import("csstype").Property.TimelineScope;
        top?: import("csstype").Property.Top<string | number>;
        touchAction?: import("csstype").Property.TouchAction;
        transform?: import("csstype").Property.Transform;
        transformBox?: import("csstype").Property.TransformBox;
        transformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        transformStyle?: import("csstype").Property.TransformStyle;
        transitionBehavior?: import("csstype").Property.TransitionBehavior;
        transitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        transitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        transitionProperty?: import("csstype").Property.TransitionProperty;
        transitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        translate?: import("csstype").Property.Translate<string | number>;
        unicodeBidi?: import("csstype").Property.UnicodeBidi;
        userSelect?: import("csstype").Property.UserSelect;
        verticalAlign?: import("csstype").Property.VerticalAlign<string | number>;
        viewTimelineAxis?: import("csstype").Property.ViewTimelineAxis;
        viewTimelineInset?: import("csstype").Property.ViewTimelineInset<string | number>;
        viewTimelineName?: import("csstype").Property.ViewTimelineName;
        viewTransitionName?: import("csstype").Property.ViewTransitionName;
        visibility?: import("csstype").Property.Visibility;
        whiteSpace?: import("csstype").Property.WhiteSpace;
        whiteSpaceCollapse?: import("csstype").Property.WhiteSpaceCollapse;
        whiteSpaceTrim?: import("csstype").Property.WhiteSpaceTrim;
        widows?: import("csstype").Property.Widows;
        width?: import("csstype").Property.Width<string | number>;
        willChange?: import("csstype").Property.WillChange;
        wordBreak?: import("csstype").Property.WordBreak;
        wordSpacing?: import("csstype").Property.WordSpacing<string | number>;
        wordWrap?: import("csstype").Property.WordWrap;
        writingMode?: import("csstype").Property.WritingMode;
        zIndex?: import("csstype").Property.ZIndex;
        zoom?: import("csstype").Property.Zoom;
        all?: import("csstype").Globals;
        animation?: import("csstype").Property.Animation<string & {}>;
        animationRange?: import("csstype").Property.AnimationRange<string | number>;
        background?: import("csstype").Property.Background<string | number>;
        backgroundPosition?: import("csstype").Property.BackgroundPosition<string | number>;
        border?: import("csstype").Property.Border<string | number>;
        borderBlock?: import("csstype").Property.BorderBlock<string | number>;
        borderBlockEnd?: import("csstype").Property.BorderBlockEnd<string | number>;
        borderBlockStart?: import("csstype").Property.BorderBlockStart<string | number>;
        borderBottom?: import("csstype").Property.BorderBottom<string | number>;
        borderColor?: import("csstype").Property.BorderColor;
        borderImage?: import("csstype").Property.BorderImage;
        borderInline?: import("csstype").Property.BorderInline<string | number>;
        borderInlineEnd?: import("csstype").Property.BorderInlineEnd<string | number>;
        borderInlineStart?: import("csstype").Property.BorderInlineStart<string | number>;
        borderLeft?: import("csstype").Property.BorderLeft<string | number>;
        borderRadius?: import("csstype").Property.BorderRadius<string | number>;
        borderRight?: import("csstype").Property.BorderRight<string | number>;
        borderStyle?: import("csstype").Property.BorderStyle;
        borderTop?: import("csstype").Property.BorderTop<string | number>;
        borderWidth?: import("csstype").Property.BorderWidth<string | number>;
        caret?: import("csstype").Property.Caret;
        columnRule?: import("csstype").Property.ColumnRule<string | number>;
        columns?: import("csstype").Property.Columns<string | number>;
        containIntrinsicSize?: import("csstype").Property.ContainIntrinsicSize<string | number>;
        container?: import("csstype").Property.Container;
        flex?: import("csstype").Property.Flex<string | number>;
        flexFlow?: import("csstype").Property.FlexFlow;
        font?: import("csstype").Property.Font;
        gap?: import("csstype").Property.Gap<string | number>;
        grid?: import("csstype").Property.Grid;
        gridArea?: import("csstype").Property.GridArea;
        gridColumn?: import("csstype").Property.GridColumn;
        gridRow?: import("csstype").Property.GridRow;
        gridTemplate?: import("csstype").Property.GridTemplate;
        inset?: import("csstype").Property.Inset<string | number>;
        insetBlock?: import("csstype").Property.InsetBlock<string | number>;
        insetInline?: import("csstype").Property.InsetInline<string | number>;
        lineClamp?: import("csstype").Property.LineClamp;
        listStyle?: import("csstype").Property.ListStyle;
        margin?: import("csstype").Property.Margin<string | number>;
        marginBlock?: import("csstype").Property.MarginBlock<string | number>;
        marginInline?: import("csstype").Property.MarginInline<string | number>;
        mask?: import("csstype").Property.Mask<string | number>;
        maskBorder?: import("csstype").Property.MaskBorder;
        motion?: import("csstype").Property.Offset<string | number>;
        offset?: import("csstype").Property.Offset<string | number>;
        outline?: import("csstype").Property.Outline<string | number>;
        overflow?: import("csstype").Property.Overflow;
        overscrollBehavior?: import("csstype").Property.OverscrollBehavior;
        padding?: import("csstype").Property.Padding<string | number>;
        paddingBlock?: import("csstype").Property.PaddingBlock<string | number>;
        paddingInline?: import("csstype").Property.PaddingInline<string | number>;
        placeContent?: import("csstype").Property.PlaceContent;
        placeItems?: import("csstype").Property.PlaceItems;
        placeSelf?: import("csstype").Property.PlaceSelf;
        scrollMargin?: import("csstype").Property.ScrollMargin<string | number>;
        scrollMarginBlock?: import("csstype").Property.ScrollMarginBlock<string | number>;
        scrollMarginInline?: import("csstype").Property.ScrollMarginInline<string | number>;
        scrollPadding?: import("csstype").Property.ScrollPadding<string | number>;
        scrollPaddingBlock?: import("csstype").Property.ScrollPaddingBlock<string | number>;
        scrollPaddingInline?: import("csstype").Property.ScrollPaddingInline<string | number>;
        scrollSnapMargin?: import("csstype").Property.ScrollMargin<string | number>;
        scrollTimeline?: import("csstype").Property.ScrollTimeline;
        textDecoration?: import("csstype").Property.TextDecoration<string | number>;
        textEmphasis?: import("csstype").Property.TextEmphasis;
        transition?: import("csstype").Property.Transition<string & {}>;
        viewTimeline?: import("csstype").Property.ViewTimeline;
        MozAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        MozAnimationDirection?: import("csstype").Property.AnimationDirection;
        MozAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        MozAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        MozAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        MozAnimationName?: import("csstype").Property.AnimationName;
        MozAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        MozAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        MozAppearance?: import("csstype").Property.MozAppearance;
        MozBinding?: import("csstype").Property.MozBinding;
        MozBorderBottomColors?: import("csstype").Property.MozBorderBottomColors;
        MozBorderEndColor?: import("csstype").Property.BorderInlineEndColor;
        MozBorderEndStyle?: import("csstype").Property.BorderInlineEndStyle;
        MozBorderEndWidth?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        MozBorderLeftColors?: import("csstype").Property.MozBorderLeftColors;
        MozBorderRightColors?: import("csstype").Property.MozBorderRightColors;
        MozBorderStartColor?: import("csstype").Property.BorderInlineStartColor;
        MozBorderStartStyle?: import("csstype").Property.BorderInlineStartStyle;
        MozBorderTopColors?: import("csstype").Property.MozBorderTopColors;
        MozBoxSizing?: import("csstype").Property.BoxSizing;
        MozColumnCount?: import("csstype").Property.ColumnCount;
        MozColumnFill?: import("csstype").Property.ColumnFill;
        MozColumnRuleColor?: import("csstype").Property.ColumnRuleColor;
        MozColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        MozColumnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number>;
        MozColumnWidth?: import("csstype").Property.ColumnWidth<string | number>;
        MozContextProperties?: import("csstype").Property.MozContextProperties;
        MozFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        MozFontLanguageOverride?: import("csstype").Property.FontLanguageOverride;
        MozHyphens?: import("csstype").Property.Hyphens;
        MozImageRegion?: import("csstype").Property.MozImageRegion;
        MozMarginEnd?: import("csstype").Property.MarginInlineEnd<string | number>;
        MozMarginStart?: import("csstype").Property.MarginInlineStart<string | number>;
        MozOrient?: import("csstype").Property.MozOrient;
        MozOsxFontSmoothing?: import("csstype").Property.FontSmooth<string | number>;
        MozOutlineRadiusBottomleft?: import("csstype").Property.MozOutlineRadiusBottomleft<string | number>;
        MozOutlineRadiusBottomright?: import("csstype").Property.MozOutlineRadiusBottomright<string | number>;
        MozOutlineRadiusTopleft?: import("csstype").Property.MozOutlineRadiusTopleft<string | number>;
        MozOutlineRadiusTopright?: import("csstype").Property.MozOutlineRadiusTopright<string | number>;
        MozPaddingEnd?: import("csstype").Property.PaddingInlineEnd<string | number>;
        MozPaddingStart?: import("csstype").Property.PaddingInlineStart<string | number>;
        MozStackSizing?: import("csstype").Property.MozStackSizing;
        MozTabSize?: import("csstype").Property.TabSize<string | number>;
        MozTextBlink?: import("csstype").Property.MozTextBlink;
        MozTextSizeAdjust?: import("csstype").Property.TextSizeAdjust;
        MozUserFocus?: import("csstype").Property.MozUserFocus;
        MozUserModify?: import("csstype").Property.MozUserModify;
        MozUserSelect?: import("csstype").Property.UserSelect;
        MozWindowDragging?: import("csstype").Property.MozWindowDragging;
        MozWindowShadow?: import("csstype").Property.MozWindowShadow;
        msAccelerator?: import("csstype").Property.MsAccelerator;
        msBlockProgression?: import("csstype").Property.MsBlockProgression;
        msContentZoomChaining?: import("csstype").Property.MsContentZoomChaining;
        msContentZoomLimitMax?: import("csstype").Property.MsContentZoomLimitMax;
        msContentZoomLimitMin?: import("csstype").Property.MsContentZoomLimitMin;
        msContentZoomSnapPoints?: import("csstype").Property.MsContentZoomSnapPoints;
        msContentZoomSnapType?: import("csstype").Property.MsContentZoomSnapType;
        msContentZooming?: import("csstype").Property.MsContentZooming;
        msFilter?: import("csstype").Property.MsFilter;
        msFlexDirection?: import("csstype").Property.FlexDirection;
        msFlexPositive?: import("csstype").Property.FlexGrow;
        msFlowFrom?: import("csstype").Property.MsFlowFrom;
        msFlowInto?: import("csstype").Property.MsFlowInto;
        msGridColumns?: import("csstype").Property.MsGridColumns<string | number>;
        msGridRows?: import("csstype").Property.MsGridRows<string | number>;
        msHighContrastAdjust?: import("csstype").Property.MsHighContrastAdjust;
        msHyphenateLimitChars?: import("csstype").Property.MsHyphenateLimitChars;
        msHyphenateLimitLines?: import("csstype").Property.MsHyphenateLimitLines;
        msHyphenateLimitZone?: import("csstype").Property.MsHyphenateLimitZone<string | number>;
        msHyphens?: import("csstype").Property.Hyphens;
        msImeAlign?: import("csstype").Property.MsImeAlign;
        msLineBreak?: import("csstype").Property.LineBreak;
        msOrder?: import("csstype").Property.Order;
        msOverflowStyle?: import("csstype").Property.MsOverflowStyle;
        msOverflowX?: import("csstype").Property.OverflowX;
        msOverflowY?: import("csstype").Property.OverflowY;
        msScrollChaining?: import("csstype").Property.MsScrollChaining;
        msScrollLimitXMax?: import("csstype").Property.MsScrollLimitXMax<string | number>;
        msScrollLimitXMin?: import("csstype").Property.MsScrollLimitXMin<string | number>;
        msScrollLimitYMax?: import("csstype").Property.MsScrollLimitYMax<string | number>;
        msScrollLimitYMin?: import("csstype").Property.MsScrollLimitYMin<string | number>;
        msScrollRails?: import("csstype").Property.MsScrollRails;
        msScrollSnapPointsX?: import("csstype").Property.MsScrollSnapPointsX;
        msScrollSnapPointsY?: import("csstype").Property.MsScrollSnapPointsY;
        msScrollSnapType?: import("csstype").Property.MsScrollSnapType;
        msScrollTranslation?: import("csstype").Property.MsScrollTranslation;
        msScrollbar3dlightColor?: import("csstype").Property.MsScrollbar3dlightColor;
        msScrollbarArrowColor?: import("csstype").Property.MsScrollbarArrowColor;
        msScrollbarBaseColor?: import("csstype").Property.MsScrollbarBaseColor;
        msScrollbarDarkshadowColor?: import("csstype").Property.MsScrollbarDarkshadowColor;
        msScrollbarFaceColor?: import("csstype").Property.MsScrollbarFaceColor;
        msScrollbarHighlightColor?: import("csstype").Property.MsScrollbarHighlightColor;
        msScrollbarShadowColor?: import("csstype").Property.MsScrollbarShadowColor;
        msScrollbarTrackColor?: import("csstype").Property.MsScrollbarTrackColor;
        msTextAutospace?: import("csstype").Property.MsTextAutospace;
        msTextCombineHorizontal?: import("csstype").Property.TextCombineUpright;
        msTextOverflow?: import("csstype").Property.TextOverflow;
        msTouchAction?: import("csstype").Property.TouchAction;
        msTouchSelect?: import("csstype").Property.MsTouchSelect;
        msTransform?: import("csstype").Property.Transform;
        msTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        msTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        msTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        msTransitionProperty?: import("csstype").Property.TransitionProperty;
        msTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        msUserSelect?: import("csstype").Property.MsUserSelect;
        msWordBreak?: import("csstype").Property.WordBreak;
        msWrapFlow?: import("csstype").Property.MsWrapFlow;
        msWrapMargin?: import("csstype").Property.MsWrapMargin<string | number>;
        msWrapThrough?: import("csstype").Property.MsWrapThrough;
        msWritingMode?: import("csstype").Property.WritingMode;
        WebkitAlignContent?: import("csstype").Property.AlignContent;
        WebkitAlignItems?: import("csstype").Property.AlignItems;
        WebkitAlignSelf?: import("csstype").Property.AlignSelf;
        WebkitAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        WebkitAnimationDirection?: import("csstype").Property.AnimationDirection;
        WebkitAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        WebkitAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        WebkitAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        WebkitAnimationName?: import("csstype").Property.AnimationName;
        WebkitAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        WebkitAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        WebkitAppearance?: import("csstype").Property.WebkitAppearance;
        WebkitBackdropFilter?: import("csstype").Property.BackdropFilter;
        WebkitBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        WebkitBackgroundClip?: import("csstype").Property.BackgroundClip;
        WebkitBackgroundOrigin?: import("csstype").Property.BackgroundOrigin;
        WebkitBackgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        WebkitBorderBeforeColor?: import("csstype").Property.WebkitBorderBeforeColor;
        WebkitBorderBeforeStyle?: import("csstype").Property.WebkitBorderBeforeStyle;
        WebkitBorderBeforeWidth?: import("csstype").Property.WebkitBorderBeforeWidth<string | number>;
        WebkitBorderBottomLeftRadius?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        WebkitBorderBottomRightRadius?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        WebkitBorderImageSlice?: import("csstype").Property.BorderImageSlice;
        WebkitBorderTopLeftRadius?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        WebkitBorderTopRightRadius?: import("csstype").Property.BorderTopRightRadius<string | number>;
        WebkitBoxDecorationBreak?: import("csstype").Property.BoxDecorationBreak;
        WebkitBoxReflect?: import("csstype").Property.WebkitBoxReflect<string | number>;
        WebkitBoxShadow?: import("csstype").Property.BoxShadow;
        WebkitBoxSizing?: import("csstype").Property.BoxSizing;
        WebkitClipPath?: import("csstype").Property.ClipPath;
        WebkitColumnCount?: import("csstype").Property.ColumnCount;
        WebkitColumnFill?: import("csstype").Property.ColumnFill;
        WebkitColumnRuleColor?: import("csstype").Property.ColumnRuleColor;
        WebkitColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle;
        WebkitColumnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number>;
        WebkitColumnSpan?: import("csstype").Property.ColumnSpan;
        WebkitColumnWidth?: import("csstype").Property.ColumnWidth<string | number>;
        WebkitFilter?: import("csstype").Property.Filter;
        WebkitFlexBasis?: import("csstype").Property.FlexBasis<string | number>;
        WebkitFlexDirection?: import("csstype").Property.FlexDirection;
        WebkitFlexGrow?: import("csstype").Property.FlexGrow;
        WebkitFlexShrink?: import("csstype").Property.FlexShrink;
        WebkitFlexWrap?: import("csstype").Property.FlexWrap;
        WebkitFontFeatureSettings?: import("csstype").Property.FontFeatureSettings;
        WebkitFontKerning?: import("csstype").Property.FontKerning;
        WebkitFontSmoothing?: import("csstype").Property.FontSmooth<string | number>;
        WebkitFontVariantLigatures?: import("csstype").Property.FontVariantLigatures;
        WebkitHyphenateCharacter?: import("csstype").Property.HyphenateCharacter;
        WebkitHyphens?: import("csstype").Property.Hyphens;
        WebkitInitialLetter?: import("csstype").Property.InitialLetter;
        WebkitJustifyContent?: import("csstype").Property.JustifyContent;
        WebkitLineBreak?: import("csstype").Property.LineBreak;
        WebkitLineClamp?: import("csstype").Property.WebkitLineClamp;
        WebkitMarginEnd?: import("csstype").Property.MarginInlineEnd<string | number>;
        WebkitMarginStart?: import("csstype").Property.MarginInlineStart<string | number>;
        WebkitMaskAttachment?: import("csstype").Property.WebkitMaskAttachment;
        WebkitMaskBoxImageOutset?: import("csstype").Property.MaskBorderOutset<string | number>;
        WebkitMaskBoxImageRepeat?: import("csstype").Property.MaskBorderRepeat;
        WebkitMaskBoxImageSlice?: import("csstype").Property.MaskBorderSlice;
        WebkitMaskBoxImageSource?: import("csstype").Property.MaskBorderSource;
        WebkitMaskBoxImageWidth?: import("csstype").Property.MaskBorderWidth<string | number>;
        WebkitMaskClip?: import("csstype").Property.WebkitMaskClip;
        WebkitMaskComposite?: import("csstype").Property.WebkitMaskComposite;
        WebkitMaskImage?: import("csstype").Property.WebkitMaskImage;
        WebkitMaskOrigin?: import("csstype").Property.WebkitMaskOrigin;
        WebkitMaskPosition?: import("csstype").Property.WebkitMaskPosition<string | number>;
        WebkitMaskPositionX?: import("csstype").Property.WebkitMaskPositionX<string | number>;
        WebkitMaskPositionY?: import("csstype").Property.WebkitMaskPositionY<string | number>;
        WebkitMaskRepeat?: import("csstype").Property.WebkitMaskRepeat;
        WebkitMaskRepeatX?: import("csstype").Property.WebkitMaskRepeatX;
        WebkitMaskRepeatY?: import("csstype").Property.WebkitMaskRepeatY;
        WebkitMaskSize?: import("csstype").Property.WebkitMaskSize<string | number>;
        WebkitMaxInlineSize?: import("csstype").Property.MaxInlineSize<string | number>;
        WebkitOrder?: import("csstype").Property.Order;
        WebkitOverflowScrolling?: import("csstype").Property.WebkitOverflowScrolling;
        WebkitPaddingEnd?: import("csstype").Property.PaddingInlineEnd<string | number>;
        WebkitPaddingStart?: import("csstype").Property.PaddingInlineStart<string | number>;
        WebkitPerspective?: import("csstype").Property.Perspective<string | number>;
        WebkitPerspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number>;
        WebkitPrintColorAdjust?: import("csstype").Property.PrintColorAdjust;
        WebkitRubyPosition?: import("csstype").Property.RubyPosition;
        WebkitScrollSnapType?: import("csstype").Property.ScrollSnapType;
        WebkitShapeMargin?: import("csstype").Property.ShapeMargin<string | number>;
        WebkitTapHighlightColor?: import("csstype").Property.WebkitTapHighlightColor;
        WebkitTextCombine?: import("csstype").Property.TextCombineUpright;
        WebkitTextDecorationColor?: import("csstype").Property.TextDecorationColor;
        WebkitTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        WebkitTextDecorationSkip?: import("csstype").Property.TextDecorationSkip;
        WebkitTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        WebkitTextEmphasisColor?: import("csstype").Property.TextEmphasisColor;
        WebkitTextEmphasisPosition?: import("csstype").Property.TextEmphasisPosition;
        WebkitTextEmphasisStyle?: import("csstype").Property.TextEmphasisStyle;
        WebkitTextFillColor?: import("csstype").Property.WebkitTextFillColor;
        WebkitTextOrientation?: import("csstype").Property.TextOrientation;
        WebkitTextSizeAdjust?: import("csstype").Property.TextSizeAdjust;
        WebkitTextStrokeColor?: import("csstype").Property.WebkitTextStrokeColor;
        WebkitTextStrokeWidth?: import("csstype").Property.WebkitTextStrokeWidth<string | number>;
        WebkitTextUnderlinePosition?: import("csstype").Property.TextUnderlinePosition;
        WebkitTouchCallout?: import("csstype").Property.WebkitTouchCallout;
        WebkitTransform?: import("csstype").Property.Transform;
        WebkitTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        WebkitTransformStyle?: import("csstype").Property.TransformStyle;
        WebkitTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        WebkitTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        WebkitTransitionProperty?: import("csstype").Property.TransitionProperty;
        WebkitTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        WebkitUserModify?: import("csstype").Property.WebkitUserModify;
        WebkitUserSelect?: import("csstype").Property.UserSelect;
        WebkitWritingMode?: import("csstype").Property.WritingMode;
        MozAnimation?: import("csstype").Property.Animation<string & {}>;
        MozBorderImage?: import("csstype").Property.BorderImage;
        MozColumnRule?: import("csstype").Property.ColumnRule<string | number>;
        MozColumns?: import("csstype").Property.Columns<string | number>;
        MozOutlineRadius?: import("csstype").Property.MozOutlineRadius<string | number>;
        msContentZoomLimit?: import("csstype").Property.MsContentZoomLimit;
        msContentZoomSnap?: import("csstype").Property.MsContentZoomSnap;
        msFlex?: import("csstype").Property.Flex<string | number>;
        msScrollLimit?: import("csstype").Property.MsScrollLimit;
        msScrollSnapX?: import("csstype").Property.MsScrollSnapX;
        msScrollSnapY?: import("csstype").Property.MsScrollSnapY;
        msTransition?: import("csstype").Property.Transition<string & {}>;
        WebkitAnimation?: import("csstype").Property.Animation<string & {}>;
        WebkitBorderBefore?: import("csstype").Property.WebkitBorderBefore<string | number>;
        WebkitBorderImage?: import("csstype").Property.BorderImage;
        WebkitBorderRadius?: import("csstype").Property.BorderRadius<string | number>;
        WebkitColumnRule?: import("csstype").Property.ColumnRule<string | number>;
        WebkitColumns?: import("csstype").Property.Columns<string | number>;
        WebkitFlex?: import("csstype").Property.Flex<string | number>;
        WebkitFlexFlow?: import("csstype").Property.FlexFlow;
        WebkitMask?: import("csstype").Property.WebkitMask<string | number>;
        WebkitMaskBoxImage?: import("csstype").Property.MaskBorder;
        WebkitTextEmphasis?: import("csstype").Property.TextEmphasis;
        WebkitTextStroke?: import("csstype").Property.WebkitTextStroke<string | number>;
        WebkitTransition?: import("csstype").Property.Transition<string & {}>;
        azimuth?: import("csstype").Property.Azimuth;
        boxAlign?: import("csstype").Property.BoxAlign;
        boxDirection?: import("csstype").Property.BoxDirection;
        boxFlex?: import("csstype").Property.BoxFlex;
        boxFlexGroup?: import("csstype").Property.BoxFlexGroup;
        boxLines?: import("csstype").Property.BoxLines;
        boxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        boxOrient?: import("csstype").Property.BoxOrient;
        boxPack?: import("csstype").Property.BoxPack;
        clip?: import("csstype").Property.Clip;
        gridColumnGap?: import("csstype").Property.GridColumnGap<string | number>;
        gridGap?: import("csstype").Property.GridGap<string | number>;
        gridRowGap?: import("csstype").Property.GridRowGap<string | number>;
        imeMode?: import("csstype").Property.ImeMode;
        offsetBlock?: import("csstype").Property.InsetBlock<string | number>;
        offsetBlockEnd?: import("csstype").Property.InsetBlockEnd<string | number>;
        offsetBlockStart?: import("csstype").Property.InsetBlockStart<string | number>;
        offsetInline?: import("csstype").Property.InsetInline<string | number>;
        offsetInlineEnd?: import("csstype").Property.InsetInlineEnd<string | number>;
        offsetInlineStart?: import("csstype").Property.InsetInlineStart<string | number>;
        scrollSnapCoordinate?: import("csstype").Property.ScrollSnapCoordinate<string | number>;
        scrollSnapDestination?: import("csstype").Property.ScrollSnapDestination<string | number>;
        scrollSnapPointsX?: import("csstype").Property.ScrollSnapPointsX;
        scrollSnapPointsY?: import("csstype").Property.ScrollSnapPointsY;
        scrollSnapTypeX?: import("csstype").Property.ScrollSnapTypeX;
        scrollSnapTypeY?: import("csstype").Property.ScrollSnapTypeY;
        KhtmlBoxAlign?: import("csstype").Property.BoxAlign;
        KhtmlBoxDirection?: import("csstype").Property.BoxDirection;
        KhtmlBoxFlex?: import("csstype").Property.BoxFlex;
        KhtmlBoxFlexGroup?: import("csstype").Property.BoxFlexGroup;
        KhtmlBoxLines?: import("csstype").Property.BoxLines;
        KhtmlBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        KhtmlBoxOrient?: import("csstype").Property.BoxOrient;
        KhtmlBoxPack?: import("csstype").Property.BoxPack;
        KhtmlLineBreak?: import("csstype").Property.LineBreak;
        KhtmlOpacity?: import("csstype").Property.Opacity;
        KhtmlUserSelect?: import("csstype").Property.UserSelect;
        MozBackfaceVisibility?: import("csstype").Property.BackfaceVisibility;
        MozBackgroundClip?: import("csstype").Property.BackgroundClip;
        MozBackgroundInlinePolicy?: import("csstype").Property.BoxDecorationBreak;
        MozBackgroundOrigin?: import("csstype").Property.BackgroundOrigin;
        MozBackgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        MozBorderRadius?: import("csstype").Property.BorderRadius<string | number>;
        MozBorderRadiusBottomleft?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        MozBorderRadiusBottomright?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        MozBorderRadiusTopleft?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        MozBorderRadiusTopright?: import("csstype").Property.BorderTopRightRadius<string | number>;
        MozBoxAlign?: import("csstype").Property.BoxAlign;
        MozBoxDirection?: import("csstype").Property.BoxDirection;
        MozBoxFlex?: import("csstype").Property.BoxFlex;
        MozBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        MozBoxOrient?: import("csstype").Property.BoxOrient;
        MozBoxPack?: import("csstype").Property.BoxPack;
        MozBoxShadow?: import("csstype").Property.BoxShadow;
        MozFloatEdge?: import("csstype").Property.MozFloatEdge;
        MozForceBrokenImageIcon?: import("csstype").Property.MozForceBrokenImageIcon;
        MozOpacity?: import("csstype").Property.Opacity;
        MozOutline?: import("csstype").Property.Outline<string | number>;
        MozOutlineColor?: import("csstype").Property.OutlineColor;
        MozOutlineStyle?: import("csstype").Property.OutlineStyle;
        MozOutlineWidth?: import("csstype").Property.OutlineWidth<string | number>;
        MozPerspective?: import("csstype").Property.Perspective<string | number>;
        MozPerspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number>;
        MozTextAlignLast?: import("csstype").Property.TextAlignLast;
        MozTextDecorationColor?: import("csstype").Property.TextDecorationColor;
        MozTextDecorationLine?: import("csstype").Property.TextDecorationLine;
        MozTextDecorationStyle?: import("csstype").Property.TextDecorationStyle;
        MozTransform?: import("csstype").Property.Transform;
        MozTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        MozTransformStyle?: import("csstype").Property.TransformStyle;
        MozTransition?: import("csstype").Property.Transition<string & {}>;
        MozTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        MozTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        MozTransitionProperty?: import("csstype").Property.TransitionProperty;
        MozTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        MozUserInput?: import("csstype").Property.MozUserInput;
        msImeMode?: import("csstype").Property.ImeMode;
        OAnimation?: import("csstype").Property.Animation<string & {}>;
        OAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}>;
        OAnimationDirection?: import("csstype").Property.AnimationDirection;
        OAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}>;
        OAnimationFillMode?: import("csstype").Property.AnimationFillMode;
        OAnimationIterationCount?: import("csstype").Property.AnimationIterationCount;
        OAnimationName?: import("csstype").Property.AnimationName;
        OAnimationPlayState?: import("csstype").Property.AnimationPlayState;
        OAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction;
        OBackgroundSize?: import("csstype").Property.BackgroundSize<string | number>;
        OBorderImage?: import("csstype").Property.BorderImage;
        OObjectFit?: import("csstype").Property.ObjectFit;
        OObjectPosition?: import("csstype").Property.ObjectPosition<string | number>;
        OTabSize?: import("csstype").Property.TabSize<string | number>;
        OTextOverflow?: import("csstype").Property.TextOverflow;
        OTransform?: import("csstype").Property.Transform;
        OTransformOrigin?: import("csstype").Property.TransformOrigin<string | number>;
        OTransition?: import("csstype").Property.Transition<string & {}>;
        OTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}>;
        OTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}>;
        OTransitionProperty?: import("csstype").Property.TransitionProperty;
        OTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction;
        WebkitBoxAlign?: import("csstype").Property.BoxAlign;
        WebkitBoxDirection?: import("csstype").Property.BoxDirection;
        WebkitBoxFlex?: import("csstype").Property.BoxFlex;
        WebkitBoxFlexGroup?: import("csstype").Property.BoxFlexGroup;
        WebkitBoxLines?: import("csstype").Property.BoxLines;
        WebkitBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup;
        WebkitBoxOrient?: import("csstype").Property.BoxOrient;
        WebkitBoxPack?: import("csstype").Property.BoxPack;
        alignmentBaseline?: import("csstype").Property.AlignmentBaseline;
        baselineShift?: import("csstype").Property.BaselineShift<string | number>;
        clipRule?: import("csstype").Property.ClipRule;
        colorInterpolation?: import("csstype").Property.ColorInterpolation;
        colorRendering?: import("csstype").Property.ColorRendering;
        dominantBaseline?: import("csstype").Property.DominantBaseline;
        fill?: import("csstype").Property.Fill;
        fillOpacity?: import("csstype").Property.FillOpacity;
        fillRule?: import("csstype").Property.FillRule;
        floodColor?: import("csstype").Property.FloodColor;
        floodOpacity?: import("csstype").Property.FloodOpacity;
        glyphOrientationVertical?: import("csstype").Property.GlyphOrientationVertical;
        lightingColor?: import("csstype").Property.LightingColor;
        marker?: import("csstype").Property.Marker;
        markerEnd?: import("csstype").Property.MarkerEnd;
        markerMid?: import("csstype").Property.MarkerMid;
        markerStart?: import("csstype").Property.MarkerStart;
        shapeRendering?: import("csstype").Property.ShapeRendering;
        stopColor?: import("csstype").Property.StopColor;
        stopOpacity?: import("csstype").Property.StopOpacity;
        stroke?: import("csstype").Property.Stroke;
        strokeDasharray?: import("csstype").Property.StrokeDasharray<string | number>;
        strokeDashoffset?: import("csstype").Property.StrokeDashoffset<string | number>;
        strokeLinecap?: import("csstype").Property.StrokeLinecap;
        strokeLinejoin?: import("csstype").Property.StrokeLinejoin;
        strokeMiterlimit?: import("csstype").Property.StrokeMiterlimit;
        strokeOpacity?: import("csstype").Property.StrokeOpacity;
        strokeWidth?: import("csstype").Property.StrokeWidth<string | number>;
        textAnchor?: import("csstype").Property.TextAnchor;
        vectorEffect?: import("csstype").Property.VectorEffect;
        "accent-color"?: import("csstype").Property.AccentColor;
        "align-content"?: import("csstype").Property.AlignContent;
        "align-items"?: import("csstype").Property.AlignItems;
        "align-self"?: import("csstype").Property.AlignSelf;
        "align-tracks"?: import("csstype").Property.AlignTracks;
        "animation-composition"?: import("csstype").Property.AnimationComposition;
        "animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "animation-direction"?: import("csstype").Property.AnimationDirection;
        "animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "animation-name"?: import("csstype").Property.AnimationName;
        "animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "animation-range-end"?: import("csstype").Property.AnimationRangeEnd<string | number>;
        "animation-range-start"?: import("csstype").Property.AnimationRangeStart<string | number>;
        "animation-timeline"?: import("csstype").Property.AnimationTimeline;
        "animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "aspect-ratio"?: import("csstype").Property.AspectRatio;
        "backdrop-filter"?: import("csstype").Property.BackdropFilter;
        "backface-visibility"?: import("csstype").Property.BackfaceVisibility;
        "background-attachment"?: import("csstype").Property.BackgroundAttachment;
        "background-blend-mode"?: import("csstype").Property.BackgroundBlendMode;
        "background-clip"?: import("csstype").Property.BackgroundClip;
        "background-color"?: import("csstype").Property.BackgroundColor;
        "background-image"?: import("csstype").Property.BackgroundImage;
        "background-origin"?: import("csstype").Property.BackgroundOrigin;
        "background-position-x"?: import("csstype").Property.BackgroundPositionX<string | number>;
        "background-position-y"?: import("csstype").Property.BackgroundPositionY<string | number>;
        "background-repeat"?: import("csstype").Property.BackgroundRepeat;
        "background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "block-overflow"?: import("csstype").Property.BlockOverflow;
        "block-size"?: import("csstype").Property.BlockSize<string | number>;
        "border-block-color"?: import("csstype").Property.BorderBlockColor;
        "border-block-end-color"?: import("csstype").Property.BorderBlockEndColor;
        "border-block-end-style"?: import("csstype").Property.BorderBlockEndStyle;
        "border-block-end-width"?: import("csstype").Property.BorderBlockEndWidth<string | number>;
        "border-block-start-color"?: import("csstype").Property.BorderBlockStartColor;
        "border-block-start-style"?: import("csstype").Property.BorderBlockStartStyle;
        "border-block-start-width"?: import("csstype").Property.BorderBlockStartWidth<string | number>;
        "border-block-style"?: import("csstype").Property.BorderBlockStyle;
        "border-block-width"?: import("csstype").Property.BorderBlockWidth<string | number>;
        "border-bottom-color"?: import("csstype").Property.BorderBottomColor;
        "border-bottom-left-radius"?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        "border-bottom-right-radius"?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        "border-bottom-style"?: import("csstype").Property.BorderBottomStyle;
        "border-bottom-width"?: import("csstype").Property.BorderBottomWidth<string | number>;
        "border-collapse"?: import("csstype").Property.BorderCollapse;
        "border-end-end-radius"?: import("csstype").Property.BorderEndEndRadius<string | number>;
        "border-end-start-radius"?: import("csstype").Property.BorderEndStartRadius<string | number>;
        "border-image-outset"?: import("csstype").Property.BorderImageOutset<string | number>;
        "border-image-repeat"?: import("csstype").Property.BorderImageRepeat;
        "border-image-slice"?: import("csstype").Property.BorderImageSlice;
        "border-image-source"?: import("csstype").Property.BorderImageSource;
        "border-image-width"?: import("csstype").Property.BorderImageWidth<string | number>;
        "border-inline-color"?: import("csstype").Property.BorderInlineColor;
        "border-inline-end-color"?: import("csstype").Property.BorderInlineEndColor;
        "border-inline-end-style"?: import("csstype").Property.BorderInlineEndStyle;
        "border-inline-end-width"?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        "border-inline-start-color"?: import("csstype").Property.BorderInlineStartColor;
        "border-inline-start-style"?: import("csstype").Property.BorderInlineStartStyle;
        "border-inline-start-width"?: import("csstype").Property.BorderInlineStartWidth<string | number>;
        "border-inline-style"?: import("csstype").Property.BorderInlineStyle;
        "border-inline-width"?: import("csstype").Property.BorderInlineWidth<string | number>;
        "border-left-color"?: import("csstype").Property.BorderLeftColor;
        "border-left-style"?: import("csstype").Property.BorderLeftStyle;
        "border-left-width"?: import("csstype").Property.BorderLeftWidth<string | number>;
        "border-right-color"?: import("csstype").Property.BorderRightColor;
        "border-right-style"?: import("csstype").Property.BorderRightStyle;
        "border-right-width"?: import("csstype").Property.BorderRightWidth<string | number>;
        "border-spacing"?: import("csstype").Property.BorderSpacing<string | number>;
        "border-start-end-radius"?: import("csstype").Property.BorderStartEndRadius<string | number>;
        "border-start-start-radius"?: import("csstype").Property.BorderStartStartRadius<string | number>;
        "border-top-color"?: import("csstype").Property.BorderTopColor;
        "border-top-left-radius"?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        "border-top-right-radius"?: import("csstype").Property.BorderTopRightRadius<string | number>;
        "border-top-style"?: import("csstype").Property.BorderTopStyle;
        "border-top-width"?: import("csstype").Property.BorderTopWidth<string | number>;
        "box-decoration-break"?: import("csstype").Property.BoxDecorationBreak;
        "box-shadow"?: import("csstype").Property.BoxShadow;
        "box-sizing"?: import("csstype").Property.BoxSizing;
        "break-after"?: import("csstype").Property.BreakAfter;
        "break-before"?: import("csstype").Property.BreakBefore;
        "break-inside"?: import("csstype").Property.BreakInside;
        "caption-side"?: import("csstype").Property.CaptionSide;
        "caret-color"?: import("csstype").Property.CaretColor;
        "caret-shape"?: import("csstype").Property.CaretShape;
        "clip-path"?: import("csstype").Property.ClipPath;
        "color-adjust"?: import("csstype").Property.PrintColorAdjust;
        "color-scheme"?: import("csstype").Property.ColorScheme;
        "column-count"?: import("csstype").Property.ColumnCount;
        "column-fill"?: import("csstype").Property.ColumnFill;
        "column-gap"?: import("csstype").Property.ColumnGap<string | number>;
        "column-rule-color"?: import("csstype").Property.ColumnRuleColor;
        "column-rule-style"?: import("csstype").Property.ColumnRuleStyle;
        "column-rule-width"?: import("csstype").Property.ColumnRuleWidth<string | number>;
        "column-span"?: import("csstype").Property.ColumnSpan;
        "column-width"?: import("csstype").Property.ColumnWidth<string | number>;
        "contain-intrinsic-block-size"?: import("csstype").Property.ContainIntrinsicBlockSize<string | number>;
        "contain-intrinsic-height"?: import("csstype").Property.ContainIntrinsicHeight<string | number>;
        "contain-intrinsic-inline-size"?: import("csstype").Property.ContainIntrinsicInlineSize<string | number>;
        "contain-intrinsic-width"?: import("csstype").Property.ContainIntrinsicWidth<string | number>;
        "container-name"?: import("csstype").Property.ContainerName;
        "container-type"?: import("csstype").Property.ContainerType;
        "content-visibility"?: import("csstype").Property.ContentVisibility;
        "counter-increment"?: import("csstype").Property.CounterIncrement;
        "counter-reset"?: import("csstype").Property.CounterReset;
        "counter-set"?: import("csstype").Property.CounterSet;
        "empty-cells"?: import("csstype").Property.EmptyCells;
        "flex-basis"?: import("csstype").Property.FlexBasis<string | number>;
        "flex-direction"?: import("csstype").Property.FlexDirection;
        "flex-grow"?: import("csstype").Property.FlexGrow;
        "flex-shrink"?: import("csstype").Property.FlexShrink;
        "flex-wrap"?: import("csstype").Property.FlexWrap;
        "font-family"?: import("csstype").Property.FontFamily;
        "font-feature-settings"?: import("csstype").Property.FontFeatureSettings;
        "font-kerning"?: import("csstype").Property.FontKerning;
        "font-language-override"?: import("csstype").Property.FontLanguageOverride;
        "font-optical-sizing"?: import("csstype").Property.FontOpticalSizing;
        "font-palette"?: import("csstype").Property.FontPalette;
        "font-size"?: import("csstype").Property.FontSize<string | number>;
        "font-size-adjust"?: import("csstype").Property.FontSizeAdjust;
        "font-smooth"?: import("csstype").Property.FontSmooth<string | number>;
        "font-stretch"?: import("csstype").Property.FontStretch;
        "font-style"?: import("csstype").Property.FontStyle;
        "font-synthesis"?: import("csstype").Property.FontSynthesis;
        "font-synthesis-position"?: import("csstype").Property.FontSynthesisPosition;
        "font-synthesis-small-caps"?: import("csstype").Property.FontSynthesisSmallCaps;
        "font-synthesis-style"?: import("csstype").Property.FontSynthesisStyle;
        "font-synthesis-weight"?: import("csstype").Property.FontSynthesisWeight;
        "font-variant"?: import("csstype").Property.FontVariant;
        "font-variant-alternates"?: import("csstype").Property.FontVariantAlternates;
        "font-variant-caps"?: import("csstype").Property.FontVariantCaps;
        "font-variant-east-asian"?: import("csstype").Property.FontVariantEastAsian;
        "font-variant-emoji"?: import("csstype").Property.FontVariantEmoji;
        "font-variant-ligatures"?: import("csstype").Property.FontVariantLigatures;
        "font-variant-numeric"?: import("csstype").Property.FontVariantNumeric;
        "font-variant-position"?: import("csstype").Property.FontVariantPosition;
        "font-variation-settings"?: import("csstype").Property.FontVariationSettings;
        "font-weight"?: import("csstype").Property.FontWeight;
        "forced-color-adjust"?: import("csstype").Property.ForcedColorAdjust;
        "grid-auto-columns"?: import("csstype").Property.GridAutoColumns<string | number>;
        "grid-auto-flow"?: import("csstype").Property.GridAutoFlow;
        "grid-auto-rows"?: import("csstype").Property.GridAutoRows<string | number>;
        "grid-column-end"?: import("csstype").Property.GridColumnEnd;
        "grid-column-start"?: import("csstype").Property.GridColumnStart;
        "grid-row-end"?: import("csstype").Property.GridRowEnd;
        "grid-row-start"?: import("csstype").Property.GridRowStart;
        "grid-template-areas"?: import("csstype").Property.GridTemplateAreas;
        "grid-template-columns"?: import("csstype").Property.GridTemplateColumns<string | number>;
        "grid-template-rows"?: import("csstype").Property.GridTemplateRows<string | number>;
        "hanging-punctuation"?: import("csstype").Property.HangingPunctuation;
        "hyphenate-character"?: import("csstype").Property.HyphenateCharacter;
        "hyphenate-limit-chars"?: import("csstype").Property.HyphenateLimitChars;
        "image-orientation"?: import("csstype").Property.ImageOrientation;
        "image-rendering"?: import("csstype").Property.ImageRendering;
        "image-resolution"?: import("csstype").Property.ImageResolution;
        "initial-letter"?: import("csstype").Property.InitialLetter;
        "inline-size"?: import("csstype").Property.InlineSize<string | number>;
        "input-security"?: import("csstype").Property.InputSecurity;
        "inset-block-end"?: import("csstype").Property.InsetBlockEnd<string | number>;
        "inset-block-start"?: import("csstype").Property.InsetBlockStart<string | number>;
        "inset-inline-end"?: import("csstype").Property.InsetInlineEnd<string | number>;
        "inset-inline-start"?: import("csstype").Property.InsetInlineStart<string | number>;
        "justify-content"?: import("csstype").Property.JustifyContent;
        "justify-items"?: import("csstype").Property.JustifyItems;
        "justify-self"?: import("csstype").Property.JustifySelf;
        "justify-tracks"?: import("csstype").Property.JustifyTracks;
        "letter-spacing"?: import("csstype").Property.LetterSpacing<string | number>;
        "line-break"?: import("csstype").Property.LineBreak;
        "line-height"?: import("csstype").Property.LineHeight<string | number>;
        "line-height-step"?: import("csstype").Property.LineHeightStep<string | number>;
        "list-style-image"?: import("csstype").Property.ListStyleImage;
        "list-style-position"?: import("csstype").Property.ListStylePosition;
        "list-style-type"?: import("csstype").Property.ListStyleType;
        "margin-block-end"?: import("csstype").Property.MarginBlockEnd<string | number>;
        "margin-block-start"?: import("csstype").Property.MarginBlockStart<string | number>;
        "margin-bottom"?: import("csstype").Property.MarginBottom<string | number>;
        "margin-inline-end"?: import("csstype").Property.MarginInlineEnd<string | number>;
        "margin-inline-start"?: import("csstype").Property.MarginInlineStart<string | number>;
        "margin-left"?: import("csstype").Property.MarginLeft<string | number>;
        "margin-right"?: import("csstype").Property.MarginRight<string | number>;
        "margin-top"?: import("csstype").Property.MarginTop<string | number>;
        "margin-trim"?: import("csstype").Property.MarginTrim;
        "mask-border-mode"?: import("csstype").Property.MaskBorderMode;
        "mask-border-outset"?: import("csstype").Property.MaskBorderOutset<string | number>;
        "mask-border-repeat"?: import("csstype").Property.MaskBorderRepeat;
        "mask-border-slice"?: import("csstype").Property.MaskBorderSlice;
        "mask-border-source"?: import("csstype").Property.MaskBorderSource;
        "mask-border-width"?: import("csstype").Property.MaskBorderWidth<string | number>;
        "mask-clip"?: import("csstype").Property.MaskClip;
        "mask-composite"?: import("csstype").Property.MaskComposite;
        "mask-image"?: import("csstype").Property.MaskImage;
        "mask-mode"?: import("csstype").Property.MaskMode;
        "mask-origin"?: import("csstype").Property.MaskOrigin;
        "mask-position"?: import("csstype").Property.MaskPosition<string | number>;
        "mask-repeat"?: import("csstype").Property.MaskRepeat;
        "mask-size"?: import("csstype").Property.MaskSize<string | number>;
        "mask-type"?: import("csstype").Property.MaskType;
        "masonry-auto-flow"?: import("csstype").Property.MasonryAutoFlow;
        "math-depth"?: import("csstype").Property.MathDepth;
        "math-shift"?: import("csstype").Property.MathShift;
        "math-style"?: import("csstype").Property.MathStyle;
        "max-block-size"?: import("csstype").Property.MaxBlockSize<string | number>;
        "max-height"?: import("csstype").Property.MaxHeight<string | number>;
        "max-inline-size"?: import("csstype").Property.MaxInlineSize<string | number>;
        "max-lines"?: import("csstype").Property.MaxLines;
        "max-width"?: import("csstype").Property.MaxWidth<string | number>;
        "min-block-size"?: import("csstype").Property.MinBlockSize<string | number>;
        "min-height"?: import("csstype").Property.MinHeight<string | number>;
        "min-inline-size"?: import("csstype").Property.MinInlineSize<string | number>;
        "min-width"?: import("csstype").Property.MinWidth<string | number>;
        "mix-blend-mode"?: import("csstype").Property.MixBlendMode;
        "motion-distance"?: import("csstype").Property.OffsetDistance<string | number>;
        "motion-path"?: import("csstype").Property.OffsetPath;
        "motion-rotation"?: import("csstype").Property.OffsetRotate;
        "object-fit"?: import("csstype").Property.ObjectFit;
        "object-position"?: import("csstype").Property.ObjectPosition<string | number>;
        "offset-anchor"?: import("csstype").Property.OffsetAnchor<string | number>;
        "offset-distance"?: import("csstype").Property.OffsetDistance<string | number>;
        "offset-path"?: import("csstype").Property.OffsetPath;
        "offset-position"?: import("csstype").Property.OffsetPosition<string | number>;
        "offset-rotate"?: import("csstype").Property.OffsetRotate;
        "offset-rotation"?: import("csstype").Property.OffsetRotate;
        "outline-color"?: import("csstype").Property.OutlineColor;
        "outline-offset"?: import("csstype").Property.OutlineOffset<string | number>;
        "outline-style"?: import("csstype").Property.OutlineStyle;
        "outline-width"?: import("csstype").Property.OutlineWidth<string | number>;
        "overflow-anchor"?: import("csstype").Property.OverflowAnchor;
        "overflow-block"?: import("csstype").Property.OverflowBlock;
        "overflow-clip-box"?: import("csstype").Property.OverflowClipBox;
        "overflow-clip-margin"?: import("csstype").Property.OverflowClipMargin<string | number>;
        "overflow-inline"?: import("csstype").Property.OverflowInline;
        "overflow-wrap"?: import("csstype").Property.OverflowWrap;
        "overflow-x"?: import("csstype").Property.OverflowX;
        "overflow-y"?: import("csstype").Property.OverflowY;
        "overscroll-behavior-block"?: import("csstype").Property.OverscrollBehaviorBlock;
        "overscroll-behavior-inline"?: import("csstype").Property.OverscrollBehaviorInline;
        "overscroll-behavior-x"?: import("csstype").Property.OverscrollBehaviorX;
        "overscroll-behavior-y"?: import("csstype").Property.OverscrollBehaviorY;
        "padding-block-end"?: import("csstype").Property.PaddingBlockEnd<string | number>;
        "padding-block-start"?: import("csstype").Property.PaddingBlockStart<string | number>;
        "padding-bottom"?: import("csstype").Property.PaddingBottom<string | number>;
        "padding-inline-end"?: import("csstype").Property.PaddingInlineEnd<string | number>;
        "padding-inline-start"?: import("csstype").Property.PaddingInlineStart<string | number>;
        "padding-left"?: import("csstype").Property.PaddingLeft<string | number>;
        "padding-right"?: import("csstype").Property.PaddingRight<string | number>;
        "padding-top"?: import("csstype").Property.PaddingTop<string | number>;
        "page-break-after"?: import("csstype").Property.PageBreakAfter;
        "page-break-before"?: import("csstype").Property.PageBreakBefore;
        "page-break-inside"?: import("csstype").Property.PageBreakInside;
        "paint-order"?: import("csstype").Property.PaintOrder;
        "perspective-origin"?: import("csstype").Property.PerspectiveOrigin<string | number>;
        "pointer-events"?: import("csstype").Property.PointerEvents;
        "print-color-adjust"?: import("csstype").Property.PrintColorAdjust;
        "row-gap"?: import("csstype").Property.RowGap<string | number>;
        "ruby-align"?: import("csstype").Property.RubyAlign;
        "ruby-merge"?: import("csstype").Property.RubyMerge;
        "ruby-position"?: import("csstype").Property.RubyPosition;
        "scroll-behavior"?: import("csstype").Property.ScrollBehavior;
        "scroll-margin-block-end"?: import("csstype").Property.ScrollMarginBlockEnd<string | number>;
        "scroll-margin-block-start"?: import("csstype").Property.ScrollMarginBlockStart<string | number>;
        "scroll-margin-bottom"?: import("csstype").Property.ScrollMarginBottom<string | number>;
        "scroll-margin-inline-end"?: import("csstype").Property.ScrollMarginInlineEnd<string | number>;
        "scroll-margin-inline-start"?: import("csstype").Property.ScrollMarginInlineStart<string | number>;
        "scroll-margin-left"?: import("csstype").Property.ScrollMarginLeft<string | number>;
        "scroll-margin-right"?: import("csstype").Property.ScrollMarginRight<string | number>;
        "scroll-margin-top"?: import("csstype").Property.ScrollMarginTop<string | number>;
        "scroll-padding-block-end"?: import("csstype").Property.ScrollPaddingBlockEnd<string | number>;
        "scroll-padding-block-start"?: import("csstype").Property.ScrollPaddingBlockStart<string | number>;
        "scroll-padding-bottom"?: import("csstype").Property.ScrollPaddingBottom<string | number>;
        "scroll-padding-inline-end"?: import("csstype").Property.ScrollPaddingInlineEnd<string | number>;
        "scroll-padding-inline-start"?: import("csstype").Property.ScrollPaddingInlineStart<string | number>;
        "scroll-padding-left"?: import("csstype").Property.ScrollPaddingLeft<string | number>;
        "scroll-padding-right"?: import("csstype").Property.ScrollPaddingRight<string | number>;
        "scroll-padding-top"?: import("csstype").Property.ScrollPaddingTop<string | number>;
        "scroll-snap-align"?: import("csstype").Property.ScrollSnapAlign;
        "scroll-snap-margin-bottom"?: import("csstype").Property.ScrollMarginBottom<string | number>;
        "scroll-snap-margin-left"?: import("csstype").Property.ScrollMarginLeft<string | number>;
        "scroll-snap-margin-right"?: import("csstype").Property.ScrollMarginRight<string | number>;
        "scroll-snap-margin-top"?: import("csstype").Property.ScrollMarginTop<string | number>;
        "scroll-snap-stop"?: import("csstype").Property.ScrollSnapStop;
        "scroll-snap-type"?: import("csstype").Property.ScrollSnapType;
        "scroll-timeline-axis"?: import("csstype").Property.ScrollTimelineAxis;
        "scroll-timeline-name"?: import("csstype").Property.ScrollTimelineName;
        "scrollbar-color"?: import("csstype").Property.ScrollbarColor;
        "scrollbar-gutter"?: import("csstype").Property.ScrollbarGutter;
        "scrollbar-width"?: import("csstype").Property.ScrollbarWidth;
        "shape-image-threshold"?: import("csstype").Property.ShapeImageThreshold;
        "shape-margin"?: import("csstype").Property.ShapeMargin<string | number>;
        "shape-outside"?: import("csstype").Property.ShapeOutside;
        "tab-size"?: import("csstype").Property.TabSize<string | number>;
        "table-layout"?: import("csstype").Property.TableLayout;
        "text-align"?: import("csstype").Property.TextAlign;
        "text-align-last"?: import("csstype").Property.TextAlignLast;
        "text-combine-upright"?: import("csstype").Property.TextCombineUpright;
        "text-decoration-color"?: import("csstype").Property.TextDecorationColor;
        "text-decoration-line"?: import("csstype").Property.TextDecorationLine;
        "text-decoration-skip"?: import("csstype").Property.TextDecorationSkip;
        "text-decoration-skip-ink"?: import("csstype").Property.TextDecorationSkipInk;
        "text-decoration-style"?: import("csstype").Property.TextDecorationStyle;
        "text-decoration-thickness"?: import("csstype").Property.TextDecorationThickness<string | number>;
        "text-emphasis-color"?: import("csstype").Property.TextEmphasisColor;
        "text-emphasis-position"?: import("csstype").Property.TextEmphasisPosition;
        "text-emphasis-style"?: import("csstype").Property.TextEmphasisStyle;
        "text-indent"?: import("csstype").Property.TextIndent<string | number>;
        "text-justify"?: import("csstype").Property.TextJustify;
        "text-orientation"?: import("csstype").Property.TextOrientation;
        "text-overflow"?: import("csstype").Property.TextOverflow;
        "text-rendering"?: import("csstype").Property.TextRendering;
        "text-shadow"?: import("csstype").Property.TextShadow;
        "text-size-adjust"?: import("csstype").Property.TextSizeAdjust;
        "text-transform"?: import("csstype").Property.TextTransform;
        "text-underline-offset"?: import("csstype").Property.TextUnderlineOffset<string | number>;
        "text-underline-position"?: import("csstype").Property.TextUnderlinePosition;
        "text-wrap"?: import("csstype").Property.TextWrap;
        "timeline-scope"?: import("csstype").Property.TimelineScope;
        "touch-action"?: import("csstype").Property.TouchAction;
        "transform-box"?: import("csstype").Property.TransformBox;
        "transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "transform-style"?: import("csstype").Property.TransformStyle;
        "transition-behavior"?: import("csstype").Property.TransitionBehavior;
        "transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "transition-property"?: import("csstype").Property.TransitionProperty;
        "transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "unicode-bidi"?: import("csstype").Property.UnicodeBidi;
        "user-select"?: import("csstype").Property.UserSelect;
        "vertical-align"?: import("csstype").Property.VerticalAlign<string | number>;
        "view-timeline-axis"?: import("csstype").Property.ViewTimelineAxis;
        "view-timeline-inset"?: import("csstype").Property.ViewTimelineInset<string | number>;
        "view-timeline-name"?: import("csstype").Property.ViewTimelineName;
        "view-transition-name"?: import("csstype").Property.ViewTransitionName;
        "white-space"?: import("csstype").Property.WhiteSpace;
        "white-space-collapse"?: import("csstype").Property.WhiteSpaceCollapse;
        "white-space-trim"?: import("csstype").Property.WhiteSpaceTrim;
        "will-change"?: import("csstype").Property.WillChange;
        "word-break"?: import("csstype").Property.WordBreak;
        "word-spacing"?: import("csstype").Property.WordSpacing<string | number>;
        "word-wrap"?: import("csstype").Property.WordWrap;
        "writing-mode"?: import("csstype").Property.WritingMode;
        "z-index"?: import("csstype").Property.ZIndex;
        "animation-range"?: import("csstype").Property.AnimationRange<string | number>;
        "background-position"?: import("csstype").Property.BackgroundPosition<string | number>;
        "border-block"?: import("csstype").Property.BorderBlock<string | number>;
        "border-block-end"?: import("csstype").Property.BorderBlockEnd<string | number>;
        "border-block-start"?: import("csstype").Property.BorderBlockStart<string | number>;
        "border-bottom"?: import("csstype").Property.BorderBottom<string | number>;
        "border-color"?: import("csstype").Property.BorderColor;
        "border-image"?: import("csstype").Property.BorderImage;
        "border-inline"?: import("csstype").Property.BorderInline<string | number>;
        "border-inline-end"?: import("csstype").Property.BorderInlineEnd<string | number>;
        "border-inline-start"?: import("csstype").Property.BorderInlineStart<string | number>;
        "border-left"?: import("csstype").Property.BorderLeft<string | number>;
        "border-radius"?: import("csstype").Property.BorderRadius<string | number>;
        "border-right"?: import("csstype").Property.BorderRight<string | number>;
        "border-style"?: import("csstype").Property.BorderStyle;
        "border-top"?: import("csstype").Property.BorderTop<string | number>;
        "border-width"?: import("csstype").Property.BorderWidth<string | number>;
        "column-rule"?: import("csstype").Property.ColumnRule<string | number>;
        "contain-intrinsic-size"?: import("csstype").Property.ContainIntrinsicSize<string | number>;
        "flex-flow"?: import("csstype").Property.FlexFlow;
        "grid-area"?: import("csstype").Property.GridArea;
        "grid-column"?: import("csstype").Property.GridColumn;
        "grid-row"?: import("csstype").Property.GridRow;
        "grid-template"?: import("csstype").Property.GridTemplate;
        "inset-block"?: import("csstype").Property.InsetBlock<string | number>;
        "inset-inline"?: import("csstype").Property.InsetInline<string | number>;
        "line-clamp"?: import("csstype").Property.LineClamp;
        "list-style"?: import("csstype").Property.ListStyle;
        "margin-block"?: import("csstype").Property.MarginBlock<string | number>;
        "margin-inline"?: import("csstype").Property.MarginInline<string | number>;
        "mask-border"?: import("csstype").Property.MaskBorder;
        "overscroll-behavior"?: import("csstype").Property.OverscrollBehavior;
        "padding-block"?: import("csstype").Property.PaddingBlock<string | number>;
        "padding-inline"?: import("csstype").Property.PaddingInline<string | number>;
        "place-content"?: import("csstype").Property.PlaceContent;
        "place-items"?: import("csstype").Property.PlaceItems;
        "place-self"?: import("csstype").Property.PlaceSelf;
        "scroll-margin"?: import("csstype").Property.ScrollMargin<string | number>;
        "scroll-margin-block"?: import("csstype").Property.ScrollMarginBlock<string | number>;
        "scroll-margin-inline"?: import("csstype").Property.ScrollMarginInline<string | number>;
        "scroll-padding"?: import("csstype").Property.ScrollPadding<string | number>;
        "scroll-padding-block"?: import("csstype").Property.ScrollPaddingBlock<string | number>;
        "scroll-padding-inline"?: import("csstype").Property.ScrollPaddingInline<string | number>;
        "scroll-snap-margin"?: import("csstype").Property.ScrollMargin<string | number>;
        "scroll-timeline"?: import("csstype").Property.ScrollTimeline;
        "text-decoration"?: import("csstype").Property.TextDecoration<string | number>;
        "text-emphasis"?: import("csstype").Property.TextEmphasis;
        "view-timeline"?: import("csstype").Property.ViewTimeline;
        "-moz-animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "-moz-animation-direction"?: import("csstype").Property.AnimationDirection;
        "-moz-animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "-moz-animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "-moz-animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "-moz-animation-name"?: import("csstype").Property.AnimationName;
        "-moz-animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "-moz-animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "-moz-appearance"?: import("csstype").Property.MozAppearance;
        "-moz-binding"?: import("csstype").Property.MozBinding;
        "-moz-border-bottom-colors"?: import("csstype").Property.MozBorderBottomColors;
        "-moz-border-end-color"?: import("csstype").Property.BorderInlineEndColor;
        "-moz-border-end-style"?: import("csstype").Property.BorderInlineEndStyle;
        "-moz-border-end-width"?: import("csstype").Property.BorderInlineEndWidth<string | number>;
        "-moz-border-left-colors"?: import("csstype").Property.MozBorderLeftColors;
        "-moz-border-right-colors"?: import("csstype").Property.MozBorderRightColors;
        "-moz-border-start-color"?: import("csstype").Property.BorderInlineStartColor;
        "-moz-border-start-style"?: import("csstype").Property.BorderInlineStartStyle;
        "-moz-border-top-colors"?: import("csstype").Property.MozBorderTopColors;
        "-moz-box-sizing"?: import("csstype").Property.BoxSizing;
        "-moz-column-count"?: import("csstype").Property.ColumnCount;
        "-moz-column-fill"?: import("csstype").Property.ColumnFill;
        "-moz-column-rule-color"?: import("csstype").Property.ColumnRuleColor;
        "-moz-column-rule-style"?: import("csstype").Property.ColumnRuleStyle;
        "-moz-column-rule-width"?: import("csstype").Property.ColumnRuleWidth<string | number>;
        "-moz-column-width"?: import("csstype").Property.ColumnWidth<string | number>;
        "-moz-context-properties"?: import("csstype").Property.MozContextProperties;
        "-moz-font-feature-settings"?: import("csstype").Property.FontFeatureSettings;
        "-moz-font-language-override"?: import("csstype").Property.FontLanguageOverride;
        "-moz-hyphens"?: import("csstype").Property.Hyphens;
        "-moz-image-region"?: import("csstype").Property.MozImageRegion;
        "-moz-margin-end"?: import("csstype").Property.MarginInlineEnd<string | number>;
        "-moz-margin-start"?: import("csstype").Property.MarginInlineStart<string | number>;
        "-moz-orient"?: import("csstype").Property.MozOrient;
        "-moz-osx-font-smoothing"?: import("csstype").Property.FontSmooth<string | number>;
        "-moz-outline-radius-bottomleft"?: import("csstype").Property.MozOutlineRadiusBottomleft<string | number>;
        "-moz-outline-radius-bottomright"?: import("csstype").Property.MozOutlineRadiusBottomright<string | number>;
        "-moz-outline-radius-topleft"?: import("csstype").Property.MozOutlineRadiusTopleft<string | number>;
        "-moz-outline-radius-topright"?: import("csstype").Property.MozOutlineRadiusTopright<string | number>;
        "-moz-padding-end"?: import("csstype").Property.PaddingInlineEnd<string | number>;
        "-moz-padding-start"?: import("csstype").Property.PaddingInlineStart<string | number>;
        "-moz-stack-sizing"?: import("csstype").Property.MozStackSizing;
        "-moz-tab-size"?: import("csstype").Property.TabSize<string | number>;
        "-moz-text-blink"?: import("csstype").Property.MozTextBlink;
        "-moz-text-size-adjust"?: import("csstype").Property.TextSizeAdjust;
        "-moz-user-focus"?: import("csstype").Property.MozUserFocus;
        "-moz-user-modify"?: import("csstype").Property.MozUserModify;
        "-moz-user-select"?: import("csstype").Property.UserSelect;
        "-moz-window-dragging"?: import("csstype").Property.MozWindowDragging;
        "-moz-window-shadow"?: import("csstype").Property.MozWindowShadow;
        "-ms-accelerator"?: import("csstype").Property.MsAccelerator;
        "-ms-block-progression"?: import("csstype").Property.MsBlockProgression;
        "-ms-content-zoom-chaining"?: import("csstype").Property.MsContentZoomChaining;
        "-ms-content-zoom-limit-max"?: import("csstype").Property.MsContentZoomLimitMax;
        "-ms-content-zoom-limit-min"?: import("csstype").Property.MsContentZoomLimitMin;
        "-ms-content-zoom-snap-points"?: import("csstype").Property.MsContentZoomSnapPoints;
        "-ms-content-zoom-snap-type"?: import("csstype").Property.MsContentZoomSnapType;
        "-ms-content-zooming"?: import("csstype").Property.MsContentZooming;
        "-ms-filter"?: import("csstype").Property.MsFilter;
        "-ms-flex-direction"?: import("csstype").Property.FlexDirection;
        "-ms-flex-positive"?: import("csstype").Property.FlexGrow;
        "-ms-flow-from"?: import("csstype").Property.MsFlowFrom;
        "-ms-flow-into"?: import("csstype").Property.MsFlowInto;
        "-ms-grid-columns"?: import("csstype").Property.MsGridColumns<string | number>;
        "-ms-grid-rows"?: import("csstype").Property.MsGridRows<string | number>;
        "-ms-high-contrast-adjust"?: import("csstype").Property.MsHighContrastAdjust;
        "-ms-hyphenate-limit-chars"?: import("csstype").Property.MsHyphenateLimitChars;
        "-ms-hyphenate-limit-lines"?: import("csstype").Property.MsHyphenateLimitLines;
        "-ms-hyphenate-limit-zone"?: import("csstype").Property.MsHyphenateLimitZone<string | number>;
        "-ms-hyphens"?: import("csstype").Property.Hyphens;
        "-ms-ime-align"?: import("csstype").Property.MsImeAlign;
        "-ms-line-break"?: import("csstype").Property.LineBreak;
        "-ms-order"?: import("csstype").Property.Order;
        "-ms-overflow-style"?: import("csstype").Property.MsOverflowStyle;
        "-ms-overflow-x"?: import("csstype").Property.OverflowX;
        "-ms-overflow-y"?: import("csstype").Property.OverflowY;
        "-ms-scroll-chaining"?: import("csstype").Property.MsScrollChaining;
        "-ms-scroll-limit-x-max"?: import("csstype").Property.MsScrollLimitXMax<string | number>;
        "-ms-scroll-limit-x-min"?: import("csstype").Property.MsScrollLimitXMin<string | number>;
        "-ms-scroll-limit-y-max"?: import("csstype").Property.MsScrollLimitYMax<string | number>;
        "-ms-scroll-limit-y-min"?: import("csstype").Property.MsScrollLimitYMin<string | number>;
        "-ms-scroll-rails"?: import("csstype").Property.MsScrollRails;
        "-ms-scroll-snap-points-x"?: import("csstype").Property.MsScrollSnapPointsX;
        "-ms-scroll-snap-points-y"?: import("csstype").Property.MsScrollSnapPointsY;
        "-ms-scroll-snap-type"?: import("csstype").Property.MsScrollSnapType;
        "-ms-scroll-translation"?: import("csstype").Property.MsScrollTranslation;
        "-ms-scrollbar-3dlight-color"?: import("csstype").Property.MsScrollbar3dlightColor;
        "-ms-scrollbar-arrow-color"?: import("csstype").Property.MsScrollbarArrowColor;
        "-ms-scrollbar-base-color"?: import("csstype").Property.MsScrollbarBaseColor;
        "-ms-scrollbar-darkshadow-color"?: import("csstype").Property.MsScrollbarDarkshadowColor;
        "-ms-scrollbar-face-color"?: import("csstype").Property.MsScrollbarFaceColor;
        "-ms-scrollbar-highlight-color"?: import("csstype").Property.MsScrollbarHighlightColor;
        "-ms-scrollbar-shadow-color"?: import("csstype").Property.MsScrollbarShadowColor;
        "-ms-scrollbar-track-color"?: import("csstype").Property.MsScrollbarTrackColor;
        "-ms-text-autospace"?: import("csstype").Property.MsTextAutospace;
        "-ms-text-combine-horizontal"?: import("csstype").Property.TextCombineUpright;
        "-ms-text-overflow"?: import("csstype").Property.TextOverflow;
        "-ms-touch-action"?: import("csstype").Property.TouchAction;
        "-ms-touch-select"?: import("csstype").Property.MsTouchSelect;
        "-ms-transform"?: import("csstype").Property.Transform;
        "-ms-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-ms-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-ms-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-ms-transition-property"?: import("csstype").Property.TransitionProperty;
        "-ms-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-ms-user-select"?: import("csstype").Property.MsUserSelect;
        "-ms-word-break"?: import("csstype").Property.WordBreak;
        "-ms-wrap-flow"?: import("csstype").Property.MsWrapFlow;
        "-ms-wrap-margin"?: import("csstype").Property.MsWrapMargin<string | number>;
        "-ms-wrap-through"?: import("csstype").Property.MsWrapThrough;
        "-ms-writing-mode"?: import("csstype").Property.WritingMode;
        "-webkit-align-content"?: import("csstype").Property.AlignContent;
        "-webkit-align-items"?: import("csstype").Property.AlignItems;
        "-webkit-align-self"?: import("csstype").Property.AlignSelf;
        "-webkit-animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "-webkit-animation-direction"?: import("csstype").Property.AnimationDirection;
        "-webkit-animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "-webkit-animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "-webkit-animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "-webkit-animation-name"?: import("csstype").Property.AnimationName;
        "-webkit-animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "-webkit-animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "-webkit-appearance"?: import("csstype").Property.WebkitAppearance;
        "-webkit-backdrop-filter"?: import("csstype").Property.BackdropFilter;
        "-webkit-backface-visibility"?: import("csstype").Property.BackfaceVisibility;
        "-webkit-background-clip"?: import("csstype").Property.BackgroundClip;
        "-webkit-background-origin"?: import("csstype").Property.BackgroundOrigin;
        "-webkit-background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "-webkit-border-before-color"?: import("csstype").Property.WebkitBorderBeforeColor;
        "-webkit-border-before-style"?: import("csstype").Property.WebkitBorderBeforeStyle;
        "-webkit-border-before-width"?: import("csstype").Property.WebkitBorderBeforeWidth<string | number>;
        "-webkit-border-bottom-left-radius"?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        "-webkit-border-bottom-right-radius"?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        "-webkit-border-image-slice"?: import("csstype").Property.BorderImageSlice;
        "-webkit-border-top-left-radius"?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        "-webkit-border-top-right-radius"?: import("csstype").Property.BorderTopRightRadius<string | number>;
        "-webkit-box-decoration-break"?: import("csstype").Property.BoxDecorationBreak;
        "-webkit-box-reflect"?: import("csstype").Property.WebkitBoxReflect<string | number>;
        "-webkit-box-shadow"?: import("csstype").Property.BoxShadow;
        "-webkit-box-sizing"?: import("csstype").Property.BoxSizing;
        "-webkit-clip-path"?: import("csstype").Property.ClipPath;
        "-webkit-column-count"?: import("csstype").Property.ColumnCount;
        "-webkit-column-fill"?: import("csstype").Property.ColumnFill;
        "-webkit-column-rule-color"?: import("csstype").Property.ColumnRuleColor;
        "-webkit-column-rule-style"?: import("csstype").Property.ColumnRuleStyle;
        "-webkit-column-rule-width"?: import("csstype").Property.ColumnRuleWidth<string | number>;
        "-webkit-column-span"?: import("csstype").Property.ColumnSpan;
        "-webkit-column-width"?: import("csstype").Property.ColumnWidth<string | number>;
        "-webkit-filter"?: import("csstype").Property.Filter;
        "-webkit-flex-basis"?: import("csstype").Property.FlexBasis<string | number>;
        "-webkit-flex-direction"?: import("csstype").Property.FlexDirection;
        "-webkit-flex-grow"?: import("csstype").Property.FlexGrow;
        "-webkit-flex-shrink"?: import("csstype").Property.FlexShrink;
        "-webkit-flex-wrap"?: import("csstype").Property.FlexWrap;
        "-webkit-font-feature-settings"?: import("csstype").Property.FontFeatureSettings;
        "-webkit-font-kerning"?: import("csstype").Property.FontKerning;
        "-webkit-font-smoothing"?: import("csstype").Property.FontSmooth<string | number>;
        "-webkit-font-variant-ligatures"?: import("csstype").Property.FontVariantLigatures;
        "-webkit-hyphenate-character"?: import("csstype").Property.HyphenateCharacter;
        "-webkit-hyphens"?: import("csstype").Property.Hyphens;
        "-webkit-initial-letter"?: import("csstype").Property.InitialLetter;
        "-webkit-justify-content"?: import("csstype").Property.JustifyContent;
        "-webkit-line-break"?: import("csstype").Property.LineBreak;
        "-webkit-line-clamp"?: import("csstype").Property.WebkitLineClamp;
        "-webkit-margin-end"?: import("csstype").Property.MarginInlineEnd<string | number>;
        "-webkit-margin-start"?: import("csstype").Property.MarginInlineStart<string | number>;
        "-webkit-mask-attachment"?: import("csstype").Property.WebkitMaskAttachment;
        "-webkit-mask-box-image-outset"?: import("csstype").Property.MaskBorderOutset<string | number>;
        "-webkit-mask-box-image-repeat"?: import("csstype").Property.MaskBorderRepeat;
        "-webkit-mask-box-image-slice"?: import("csstype").Property.MaskBorderSlice;
        "-webkit-mask-box-image-source"?: import("csstype").Property.MaskBorderSource;
        "-webkit-mask-box-image-width"?: import("csstype").Property.MaskBorderWidth<string | number>;
        "-webkit-mask-clip"?: import("csstype").Property.WebkitMaskClip;
        "-webkit-mask-composite"?: import("csstype").Property.WebkitMaskComposite;
        "-webkit-mask-image"?: import("csstype").Property.WebkitMaskImage;
        "-webkit-mask-origin"?: import("csstype").Property.WebkitMaskOrigin;
        "-webkit-mask-position"?: import("csstype").Property.WebkitMaskPosition<string | number>;
        "-webkit-mask-position-x"?: import("csstype").Property.WebkitMaskPositionX<string | number>;
        "-webkit-mask-position-y"?: import("csstype").Property.WebkitMaskPositionY<string | number>;
        "-webkit-mask-repeat"?: import("csstype").Property.WebkitMaskRepeat;
        "-webkit-mask-repeat-x"?: import("csstype").Property.WebkitMaskRepeatX;
        "-webkit-mask-repeat-y"?: import("csstype").Property.WebkitMaskRepeatY;
        "-webkit-mask-size"?: import("csstype").Property.WebkitMaskSize<string | number>;
        "-webkit-max-inline-size"?: import("csstype").Property.MaxInlineSize<string | number>;
        "-webkit-order"?: import("csstype").Property.Order;
        "-webkit-overflow-scrolling"?: import("csstype").Property.WebkitOverflowScrolling;
        "-webkit-padding-end"?: import("csstype").Property.PaddingInlineEnd<string | number>;
        "-webkit-padding-start"?: import("csstype").Property.PaddingInlineStart<string | number>;
        "-webkit-perspective"?: import("csstype").Property.Perspective<string | number>;
        "-webkit-perspective-origin"?: import("csstype").Property.PerspectiveOrigin<string | number>;
        "-webkit-print-color-adjust"?: import("csstype").Property.PrintColorAdjust;
        "-webkit-ruby-position"?: import("csstype").Property.RubyPosition;
        "-webkit-scroll-snap-type"?: import("csstype").Property.ScrollSnapType;
        "-webkit-shape-margin"?: import("csstype").Property.ShapeMargin<string | number>;
        "-webkit-tap-highlight-color"?: import("csstype").Property.WebkitTapHighlightColor;
        "-webkit-text-combine"?: import("csstype").Property.TextCombineUpright;
        "-webkit-text-decoration-color"?: import("csstype").Property.TextDecorationColor;
        "-webkit-text-decoration-line"?: import("csstype").Property.TextDecorationLine;
        "-webkit-text-decoration-skip"?: import("csstype").Property.TextDecorationSkip;
        "-webkit-text-decoration-style"?: import("csstype").Property.TextDecorationStyle;
        "-webkit-text-emphasis-color"?: import("csstype").Property.TextEmphasisColor;
        "-webkit-text-emphasis-position"?: import("csstype").Property.TextEmphasisPosition;
        "-webkit-text-emphasis-style"?: import("csstype").Property.TextEmphasisStyle;
        "-webkit-text-fill-color"?: import("csstype").Property.WebkitTextFillColor;
        "-webkit-text-orientation"?: import("csstype").Property.TextOrientation;
        "-webkit-text-size-adjust"?: import("csstype").Property.TextSizeAdjust;
        "-webkit-text-stroke-color"?: import("csstype").Property.WebkitTextStrokeColor;
        "-webkit-text-stroke-width"?: import("csstype").Property.WebkitTextStrokeWidth<string | number>;
        "-webkit-text-underline-position"?: import("csstype").Property.TextUnderlinePosition;
        "-webkit-touch-callout"?: import("csstype").Property.WebkitTouchCallout;
        "-webkit-transform"?: import("csstype").Property.Transform;
        "-webkit-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-webkit-transform-style"?: import("csstype").Property.TransformStyle;
        "-webkit-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-webkit-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-webkit-transition-property"?: import("csstype").Property.TransitionProperty;
        "-webkit-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-webkit-user-modify"?: import("csstype").Property.WebkitUserModify;
        "-webkit-user-select"?: import("csstype").Property.UserSelect;
        "-webkit-writing-mode"?: import("csstype").Property.WritingMode;
        "-moz-animation"?: import("csstype").Property.Animation<string & {}>;
        "-moz-border-image"?: import("csstype").Property.BorderImage;
        "-moz-column-rule"?: import("csstype").Property.ColumnRule<string | number>;
        "-moz-columns"?: import("csstype").Property.Columns<string | number>;
        "-moz-outline-radius"?: import("csstype").Property.MozOutlineRadius<string | number>;
        "-ms-content-zoom-limit"?: import("csstype").Property.MsContentZoomLimit;
        "-ms-content-zoom-snap"?: import("csstype").Property.MsContentZoomSnap;
        "-ms-flex"?: import("csstype").Property.Flex<string | number>;
        "-ms-scroll-limit"?: import("csstype").Property.MsScrollLimit;
        "-ms-scroll-snap-x"?: import("csstype").Property.MsScrollSnapX;
        "-ms-scroll-snap-y"?: import("csstype").Property.MsScrollSnapY;
        "-ms-transition"?: import("csstype").Property.Transition<string & {}>;
        "-webkit-animation"?: import("csstype").Property.Animation<string & {}>;
        "-webkit-border-before"?: import("csstype").Property.WebkitBorderBefore<string | number>;
        "-webkit-border-image"?: import("csstype").Property.BorderImage;
        "-webkit-border-radius"?: import("csstype").Property.BorderRadius<string | number>;
        "-webkit-column-rule"?: import("csstype").Property.ColumnRule<string | number>;
        "-webkit-columns"?: import("csstype").Property.Columns<string | number>;
        "-webkit-flex"?: import("csstype").Property.Flex<string | number>;
        "-webkit-flex-flow"?: import("csstype").Property.FlexFlow;
        "-webkit-mask"?: import("csstype").Property.WebkitMask<string | number>;
        "-webkit-mask-box-image"?: import("csstype").Property.MaskBorder;
        "-webkit-text-emphasis"?: import("csstype").Property.TextEmphasis;
        "-webkit-text-stroke"?: import("csstype").Property.WebkitTextStroke<string | number>;
        "-webkit-transition"?: import("csstype").Property.Transition<string & {}>;
        "box-align"?: import("csstype").Property.BoxAlign;
        "box-direction"?: import("csstype").Property.BoxDirection;
        "box-flex"?: import("csstype").Property.BoxFlex;
        "box-flex-group"?: import("csstype").Property.BoxFlexGroup;
        "box-lines"?: import("csstype").Property.BoxLines;
        "box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "box-orient"?: import("csstype").Property.BoxOrient;
        "box-pack"?: import("csstype").Property.BoxPack;
        "grid-column-gap"?: import("csstype").Property.GridColumnGap<string | number>;
        "grid-gap"?: import("csstype").Property.GridGap<string | number>;
        "grid-row-gap"?: import("csstype").Property.GridRowGap<string | number>;
        "ime-mode"?: import("csstype").Property.ImeMode;
        "offset-block"?: import("csstype").Property.InsetBlock<string | number>;
        "offset-block-end"?: import("csstype").Property.InsetBlockEnd<string | number>;
        "offset-block-start"?: import("csstype").Property.InsetBlockStart<string | number>;
        "offset-inline"?: import("csstype").Property.InsetInline<string | number>;
        "offset-inline-end"?: import("csstype").Property.InsetInlineEnd<string | number>;
        "offset-inline-start"?: import("csstype").Property.InsetInlineStart<string | number>;
        "scroll-snap-coordinate"?: import("csstype").Property.ScrollSnapCoordinate<string | number>;
        "scroll-snap-destination"?: import("csstype").Property.ScrollSnapDestination<string | number>;
        "scroll-snap-points-x"?: import("csstype").Property.ScrollSnapPointsX;
        "scroll-snap-points-y"?: import("csstype").Property.ScrollSnapPointsY;
        "scroll-snap-type-x"?: import("csstype").Property.ScrollSnapTypeX;
        "scroll-snap-type-y"?: import("csstype").Property.ScrollSnapTypeY;
        "-khtml-box-align"?: import("csstype").Property.BoxAlign;
        "-khtml-box-direction"?: import("csstype").Property.BoxDirection;
        "-khtml-box-flex"?: import("csstype").Property.BoxFlex;
        "-khtml-box-flex-group"?: import("csstype").Property.BoxFlexGroup;
        "-khtml-box-lines"?: import("csstype").Property.BoxLines;
        "-khtml-box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "-khtml-box-orient"?: import("csstype").Property.BoxOrient;
        "-khtml-box-pack"?: import("csstype").Property.BoxPack;
        "-khtml-line-break"?: import("csstype").Property.LineBreak;
        "-khtml-opacity"?: import("csstype").Property.Opacity;
        "-khtml-user-select"?: import("csstype").Property.UserSelect;
        "-moz-backface-visibility"?: import("csstype").Property.BackfaceVisibility;
        "-moz-background-clip"?: import("csstype").Property.BackgroundClip;
        "-moz-background-inline-policy"?: import("csstype").Property.BoxDecorationBreak;
        "-moz-background-origin"?: import("csstype").Property.BackgroundOrigin;
        "-moz-background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "-moz-border-radius"?: import("csstype").Property.BorderRadius<string | number>;
        "-moz-border-radius-bottomleft"?: import("csstype").Property.BorderBottomLeftRadius<string | number>;
        "-moz-border-radius-bottomright"?: import("csstype").Property.BorderBottomRightRadius<string | number>;
        "-moz-border-radius-topleft"?: import("csstype").Property.BorderTopLeftRadius<string | number>;
        "-moz-border-radius-topright"?: import("csstype").Property.BorderTopRightRadius<string | number>;
        "-moz-box-align"?: import("csstype").Property.BoxAlign;
        "-moz-box-direction"?: import("csstype").Property.BoxDirection;
        "-moz-box-flex"?: import("csstype").Property.BoxFlex;
        "-moz-box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "-moz-box-orient"?: import("csstype").Property.BoxOrient;
        "-moz-box-pack"?: import("csstype").Property.BoxPack;
        "-moz-box-shadow"?: import("csstype").Property.BoxShadow;
        "-moz-float-edge"?: import("csstype").Property.MozFloatEdge;
        "-moz-force-broken-image-icon"?: import("csstype").Property.MozForceBrokenImageIcon;
        "-moz-opacity"?: import("csstype").Property.Opacity;
        "-moz-outline"?: import("csstype").Property.Outline<string | number>;
        "-moz-outline-color"?: import("csstype").Property.OutlineColor;
        "-moz-outline-style"?: import("csstype").Property.OutlineStyle;
        "-moz-outline-width"?: import("csstype").Property.OutlineWidth<string | number>;
        "-moz-perspective"?: import("csstype").Property.Perspective<string | number>;
        "-moz-perspective-origin"?: import("csstype").Property.PerspectiveOrigin<string | number>;
        "-moz-text-align-last"?: import("csstype").Property.TextAlignLast;
        "-moz-text-decoration-color"?: import("csstype").Property.TextDecorationColor;
        "-moz-text-decoration-line"?: import("csstype").Property.TextDecorationLine;
        "-moz-text-decoration-style"?: import("csstype").Property.TextDecorationStyle;
        "-moz-transform"?: import("csstype").Property.Transform;
        "-moz-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-moz-transform-style"?: import("csstype").Property.TransformStyle;
        "-moz-transition"?: import("csstype").Property.Transition<string & {}>;
        "-moz-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-moz-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-moz-transition-property"?: import("csstype").Property.TransitionProperty;
        "-moz-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-moz-user-input"?: import("csstype").Property.MozUserInput;
        "-ms-ime-mode"?: import("csstype").Property.ImeMode;
        "-o-animation"?: import("csstype").Property.Animation<string & {}>;
        "-o-animation-delay"?: import("csstype").Property.AnimationDelay<string & {}>;
        "-o-animation-direction"?: import("csstype").Property.AnimationDirection;
        "-o-animation-duration"?: import("csstype").Property.AnimationDuration<string & {}>;
        "-o-animation-fill-mode"?: import("csstype").Property.AnimationFillMode;
        "-o-animation-iteration-count"?: import("csstype").Property.AnimationIterationCount;
        "-o-animation-name"?: import("csstype").Property.AnimationName;
        "-o-animation-play-state"?: import("csstype").Property.AnimationPlayState;
        "-o-animation-timing-function"?: import("csstype").Property.AnimationTimingFunction;
        "-o-background-size"?: import("csstype").Property.BackgroundSize<string | number>;
        "-o-border-image"?: import("csstype").Property.BorderImage;
        "-o-object-fit"?: import("csstype").Property.ObjectFit;
        "-o-object-position"?: import("csstype").Property.ObjectPosition<string | number>;
        "-o-tab-size"?: import("csstype").Property.TabSize<string | number>;
        "-o-text-overflow"?: import("csstype").Property.TextOverflow;
        "-o-transform"?: import("csstype").Property.Transform;
        "-o-transform-origin"?: import("csstype").Property.TransformOrigin<string | number>;
        "-o-transition"?: import("csstype").Property.Transition<string & {}>;
        "-o-transition-delay"?: import("csstype").Property.TransitionDelay<string & {}>;
        "-o-transition-duration"?: import("csstype").Property.TransitionDuration<string & {}>;
        "-o-transition-property"?: import("csstype").Property.TransitionProperty;
        "-o-transition-timing-function"?: import("csstype").Property.TransitionTimingFunction;
        "-webkit-box-align"?: import("csstype").Property.BoxAlign;
        "-webkit-box-direction"?: import("csstype").Property.BoxDirection;
        "-webkit-box-flex"?: import("csstype").Property.BoxFlex;
        "-webkit-box-flex-group"?: import("csstype").Property.BoxFlexGroup;
        "-webkit-box-lines"?: import("csstype").Property.BoxLines;
        "-webkit-box-ordinal-group"?: import("csstype").Property.BoxOrdinalGroup;
        "-webkit-box-orient"?: import("csstype").Property.BoxOrient;
        "-webkit-box-pack"?: import("csstype").Property.BoxPack;
        "alignment-baseline"?: import("csstype").Property.AlignmentBaseline;
        "baseline-shift"?: import("csstype").Property.BaselineShift<string | number>;
        "clip-rule"?: import("csstype").Property.ClipRule;
        "color-interpolation"?: import("csstype").Property.ColorInterpolation;
        "color-rendering"?: import("csstype").Property.ColorRendering;
        "dominant-baseline"?: import("csstype").Property.DominantBaseline;
        "fill-opacity"?: import("csstype").Property.FillOpacity;
        "fill-rule"?: import("csstype").Property.FillRule;
        "flood-color"?: import("csstype").Property.FloodColor;
        "flood-opacity"?: import("csstype").Property.FloodOpacity;
        "glyph-orientation-vertical"?: import("csstype").Property.GlyphOrientationVertical;
        "lighting-color"?: import("csstype").Property.LightingColor;
        "marker-end"?: import("csstype").Property.MarkerEnd;
        "marker-mid"?: import("csstype").Property.MarkerMid;
        "marker-start"?: import("csstype").Property.MarkerStart;
        "shape-rendering"?: import("csstype").Property.ShapeRendering;
        "stop-color"?: import("csstype").Property.StopColor;
        "stop-opacity"?: import("csstype").Property.StopOpacity;
        "stroke-dasharray"?: import("csstype").Property.StrokeDasharray<string | number>;
        "stroke-dashoffset"?: import("csstype").Property.StrokeDashoffset<string | number>;
        "stroke-linecap"?: import("csstype").Property.StrokeLinecap;
        "stroke-linejoin"?: import("csstype").Property.StrokeLinejoin;
        "stroke-miterlimit"?: import("csstype").Property.StrokeMiterlimit;
        "stroke-opacity"?: import("csstype").Property.StrokeOpacity;
        "stroke-width"?: import("csstype").Property.StrokeWidth<string | number>;
        "text-anchor"?: import("csstype").Property.TextAnchor;
        "vector-effect"?: import("csstype").Property.VectorEffect;
    }>;
    getStatusIndicatorColor: (member: CometChat.GroupMember) => string;
    getScopeStyle: () => {
        textFont: any;
        textColor: any;
    };
    isArray: (value: any) => boolean;
    isString: (value: any) => boolean;
    onSearch: (text: string) => void;
    state: Ref<States, States>;
    mygroupMemberStyle: any;
    listStyle: Ref<{
        titleTextFont?: string;
        titleTextColor?: string;
        emptyStateTextFont?: string;
        emptyStateTextColor?: string;
        errorStateTextFont?: string;
        errorStateTextColor?: string;
        loadingIconTint?: string;
        separatorColor?: string;
        boxShadow?: string;
        searchIconTint?: string;
        searchBorder?: string;
        searchBorderRadius?: string;
        searchBackground?: string;
        searchPlaceholderTextFont?: string;
        searchPlaceholderTextColor?: string;
        searchTextFont?: string;
        searchTextColor?: string;
        sectionHeaderTextFont?: string;
        sectionHeaderTextColor?: string;
        height?: string;
        width?: string;
        border?: string;
        borderRadius?: string;
        background?: string;
    }, ListStyle | {
        titleTextFont?: string;
        titleTextColor?: string;
        emptyStateTextFont?: string;
        emptyStateTextColor?: string;
        errorStateTextFont?: string;
        errorStateTextColor?: string;
        loadingIconTint?: string;
        separatorColor?: string;
        boxShadow?: string;
        searchIconTint?: string;
        searchBorder?: string;
        searchBorderRadius?: string;
        searchBackground?: string;
        searchPlaceholderTextFont?: string;
        searchPlaceholderTextColor?: string;
        searchTextFont?: string;
        searchTextColor?: string;
        sectionHeaderTextFont?: string;
        sectionHeaderTextColor?: string;
        height?: string;
        width?: string;
        border?: string;
        borderRadius?: string;
        background?: string;
    }>;
    searchKeywordRef: Ref<string, string>;
    fetchNextGroupMembers: () => Promise<void>;
    mygroupScopeStyle: any;
    handleSelection: (event: CustomEvent, groupMember: CometChat.GroupMember) => void;
    onClick: (user: CometChat.GroupMember) => void;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    title: {
        type: StringConstructor;
        default: () => any;
    };
    titleAlignment: {
        type: PropType<TitleAlignment>;
        default: () => TitleAlignment;
    };
    searchPlaceholder: {
        type: StringConstructor;
        default: () => any;
    };
    subtitleView: {
        type: PropType<(groupMember: CometChat.GroupMember) => ViewType>;
    };
    tailView: {
        type: PropType<(groupMember: CometChat.GroupMember) => ViewType>;
    };
    listItemView: {
        type: PropType<(groupMember: CometChat.GroupMember) => ViewType>;
    };
    menus: {
        type: PropType<ViewType>;
    };
    options: {
        type: PropType<(group: CometChat.Group, groupMember: CometChat.GroupMember) => CometChatOption[]>;
    };
    groupMembersRequestBuilder: {
        type: PropType<import("@cometchat/chat-sdk-javascript").GroupMembersRequestBuilder>;
    };
    searchRequestBuilder: {
        type: PropType<import("@cometchat/chat-sdk-javascript").GroupMembersRequestBuilder>;
    };
    disableUsersPresence: {
        type: BooleanConstructor;
    };
    group: {
        type: PropType<import("@cometchat/chat-sdk-javascript").Group>;
        required: true;
    };
    hideSeparator: {
        type: BooleanConstructor;
        default: boolean;
    };
    showBackButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    selectionMode: {
        type: PropType<SelectionMode>;
        default: () => SelectionMode;
    };
    onSelect: {
        type: PropType<(groupMember: CometChat.GroupMember, selected: boolean) => void>;
    };
    searchIconURL: {
        type: StringConstructor;
        default: string;
    };
    backButtonIconURL: {
        type: StringConstructor;
        default: string;
    };
    closeButtonIconURL: {
        type: StringConstructor;
        default: string;
    };
    dropdownIconURL: {
        type: StringConstructor;
        default: string;
    };
    hideSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideError: {
        type: BooleanConstructor;
        default: boolean;
    };
    emptyStateView: {
        type: PropType<ViewType>;
    };
    errorStateText: {
        type: StringConstructor;
        default: () => any;
    };
    emptyStateText: {
        type: StringConstructor;
        default: () => any;
    };
    onItemClick: {
        type: PropType<(groupMember: CometChat.GroupMember) => void>;
    };
    onError: {
        type: PropType<(error: CometChat.CometChatException) => void>;
    };
    onBack: {
        type: PropType<() => void>;
    };
    onClose: {
        type: PropType<() => void>;
    };
    avatarStyle: {
        type: PropType<AvatarStyle>;
        default: () => AvatarStyle;
    };
    groupMembersStyle: {
        type: PropType<GroupMembersStyle>;
        default: () => GroupMembersStyle;
    };
    statusIndicatorStyle: {
        type: PropType<CSSProperties>;
        default: () => CSSProperties;
    };
    listItemStyle: {
        type: PropType<ListItemStyle>;
        default: () => ListItemStyle;
    };
    groupScopeStyle: {
        type: PropType<ChangeScopeStyle>;
        default: () => ChangeScopeStyle;
    };
    loadingIconURL: {
        type: StringConstructor;
        default: string;
    };
    loadingStateView: {
        type: PropType<ViewType>;
    };
    errorStateView: {
        type: PropType<ViewType>;
    };
    userPresencePlacement: {
        type: PropType<UserPresencePlacement>;
        default: UserPresencePlacement;
    };
    searchKeyword: {
        type: StringConstructor;
        default: any;
    };
    onEmpty: {
        type: PropType<() => void>;
    };
    disableLoadingState: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & Readonly<{}>, {
    title: string;
    titleAlignment: TitleAlignment;
    searchPlaceholder: string;
    disableUsersPresence: boolean;
    hideSeparator: boolean;
    showBackButton: boolean;
    selectionMode: SelectionMode;
    searchIconURL: string;
    backButtonIconURL: string;
    closeButtonIconURL: string;
    hideSearch: boolean;
    hideError: boolean;
    errorStateText: string;
    emptyStateText: string;
    avatarStyle: AvatarStyle;
    statusIndicatorStyle: CSSProperties;
    listItemStyle: ListItemStyle;
    loadingIconURL: string;
    searchKeyword: string;
    userPresencePlacement: UserPresencePlacement;
    dropdownIconURL: string;
    groupMembersStyle: GroupMembersStyle;
    groupScopeStyle: ChangeScopeStyle;
    disableLoadingState: boolean;
}, {}, undefined, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default _sfc_main;
